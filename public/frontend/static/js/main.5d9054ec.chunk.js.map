{"version":3,"sources":["common/utils.js","constants/alertConstants.js","actions/alertActions.js","components/MessageBox.js","components/utils/LoadingBox.js","components/Drawers/DrawerAlert.js","components/FloatButton.js","screens/Alert/AlertScreen.js","constants/expenseConstants.js","actions/expenseActions.js","constants/utilsConstants.js","actions/utilsActions.js","screens/ChartScreen.js","screens/Expense/ExpenseScreen.js","components/DateSelect.js","components/FilterBotton.js","components/Accordion/CategoryDetails.js","components/ExpenseDetails.js","screens/ListScreen.js","screens/HomeScreen.js","constants/userConstants.js","screens/User/LoginScreen.js","actions/userActions.js","screens/User/ProfileScreen.js","screens/User/RegisterScreen.js","constants/categoryConstants.js","actions/categoryActions.js","constants/subcategoriesConstants.js","actions/subcategoriesActions.js","components/SubForm.js","screens/Expense/ExpenseCreateScreen.js","screens/Alert/AlertCreateScreen.js","constants/activityConstants.js","screens/Activity/ActivityScreen.js","actions/activityActions.js","screens/Activity/ActivityCreateScreen.js","constants/entryConstants.js","actions/entryActions.js","screens/Entry/EntryScreen.js","screens/Entry/EntryCreateScreen.js","constants/nextExpenseConstants.js","actions/nextExpenseActions.js","screens/nextExpense/NextExpenseScreen.js","screens/nextExpense/NextExpenseCreateScreen.js","components/SidebarMenu.js","App.js","reportWebVitals.js","store.js","reducers/userReducer.js","reducers/expenseReducers.js","reducers/categoryReducers.js","reducers/subcategoryReducers.js","reducers/alertReducers.js","reducers/utilsReducers.js","reducers/activityReducers.js","reducers/entryReducer.js","reducers/nextExpenseReducer.js","serviceWorkerRegistration.js","index.js"],"names":["module","exports","convertValue","value","Intl","NumberFormat","format","convertDate","date","months","month","split","day","result","filter","expense","label","slice","getDateUtils","newDate","Date","year","getFullYear","getDate","getMonth","ALERT_LIST_REQUEST","ALERT_LIST_SUCCESS","ALERT_LIST_FAIL","ALERT_UPDATE_REQUEST","ALERT_UPDATE_SUCCESS","ALERT_UPDATE_FAIL","ALERT_CREATE_REQUEST","ALERT_CREATE_SUCCESS","ALERT_CREATE_FAIL","ALERT_DELETE_REQUEST","ALERT_DELETE_SUCCESS","ALERT_DELETE_FAIL","TYPE_ALERT_LIST_REQUEST","TYPE_ALERT_LIST_SUCCESS","TYPE_ALERT_LIST_FAIL","listAlerts","dispatch","getState","a","type","userInfo","userSignin","axios","get","id","data","payload","response","message","name","updateAlertActive","alert","put","createAlert","post","userId","listTypeAlerts","MessageBox","props","className","variant","children","LoadingBox","DrawerAlert","useDispatch","editAlert","edit","state","setState","useState","days","setDays","selectDay","setSelectDay","selectType","setSelectType","setDay","title","setTitle","setMessage","submit","setSubmit","useSelector","alertCreate","alertSuccess","alertActiveUpdate","alertTypeList","typeAlerts","loadingTypes","loading","toggleDrawer","open","right","handleClose","useCallback","useEffect","length","Array","keys","map","item","push","priority","Drawer","anchor","onClose","onClick","onSubmit","e","preventDefault","active","Divider","placeholder","onChange","defaultValue","options","target","FloatButton","url","setUrl","path","location","pathname","includes","to","AlertScreen","rows","setRows","send","setSend","setEditAlert","setEdit","submitDelete","setSubmitDelete","alertList","error","alerts","success","alertDelete","React","handleDelete","alertId","Swal","fire","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","isConfirmed","delete","deleted","deleteAlert","typesalert","typeAlert","checked","handleActive","EXPENSE_LIST_REQUEST","EXPENSE_LIST_SUCCESS","EXPENSE_LIST_FAIL","EXPENSE_LIST_BY_DATE_REQUEST","EXPENSE_LIST_BY_DATE_SUCCESS","EXPENSE_LIST_BY_DATE_FAIL","EXP_LIST_REQUEST","EXP_LIST_SUCCESS","EXP_LIST_FAIL","EXPENSE_CREATE_REQUEST","EXPENSE_CREATE_SUCCESS","EXPENSE_CREATE_FAIL","EXPENSE_DELETE_REQUEST","EXPENSE_DELETE_SUCCESS","EXPENSE_DELETE_FAIL","listExpenses","headers","Authorization","token","GET_MONTHS_REQUEST","GET_MONTHS_SUCCESS","GET_MONTHS_FAIL","SET_MONTH_REQUEST","SET_MONTH_SUCCESS","SET_MONTH_FAIL","SET_VIEWER_REQUEST","SET_VIEWER_SUCCESS","SET_VIEWER_FAIL","SET_NOTIFICATIONS_REQUEST","SET_NOTIFICATIONS_SUCCESS","SET_NOTIFICATIONS_FAIL","SET_GROUP_REQUEST","SET_GROUP_SUCCESS","SET_GROUP_FAIL","getMonths","setMonth","localStorage","setItem","JSON","stringify","ChartScreen","labels","setLabels","setData","expenses","expensesByDateList","monthsGet","forEach","parseInt","total","datasetIdKey","elements","bar","borderWidth","scales","y","display","responsive","plugins","legend","datasets","backgroundColor","ExpenseScreen","expenseId","match","params","expList","expenseDelete","deleteExp","deleteExpense","listExpense","history","category","subcategory","description","Avatar","DateSelect","monthsStorage","monthsSet","handleSelectMonth","i","splice","handlePickMonth","undefined","FilterBotton","group","groupSet","handlerButton","filters","CategoryDetails","expensesProps","prop","setExpenses","handleReorder","reduce","prev","head","categoryId","sub","headSub","subcategoryId","valueSub","exp","console","log","items","sort","b","Accordion","AccordionSummary","Typography","AccordionDetails","toUpperCase","substr","ExpenseDetails","ListScreen","expenseList","c","HomeScreen","setSuccess","viewerSet","view","handlerViewer","setViewer","parse","getItem","USER_SIGIN_REQUEST","USER_SIGIN_SUCCESS","USER_SIGIN_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_SUSCRIBE_REQUEST","USER_SUSCRIBE_SUCCESS","USER_SUSCRIBE_FAIL","LoginScreen","useHistory","username","setUsername","password","setPassword","userData","ProfileScreen","RegisterScreen","confirmPassword","setConfirmPassword","email","setEmail","setError","CATEGORY_CREATE_REQUEST","CATEGORY_CREATE_SUCCESS","CATEGORY_CREATE_FAIL","CATEGORY_LIST_REQUEST","CATEGORY_LIST_SUCCESS","CATEGORY_LIST_FAIL","listCategories","SUBCATEGORY_LIST_REQUEST","SUBCATEGORY_LIST_SUCCESS","SUBCATEGORY_LIST_FAIL","SUBCATEGORY_CREATE_REQUEST","SUBCATEGORY_CREATE_SUCCESS","SUBCATEGORY_CREATE_FAIL","listSubcategories","SubForm","showNew","categoryCreate","subcategoryCreate","setname","submitCategory","setSubmitCategory","submitSubcategory","setSubmitSubcategory","maxLength","createCategory","createSubcategory","ExpenseCreateScreen","setDescription","setValue","setDate","setCategory","categorySelect","setCategorySelect","setSubcategory","today","setToday","showNewCategory","setShowNewCateogry","showNewSubcategory","setShowNewSubcategory","categoriesList","categories","expenseCreate","loadingSuccess","errorCreate","subcategoriesList","subcategories","loadingSubcategory","errorSubcategory","loadCategories","cat","objExpense","categoryCategoryId","subcategorySubcategoryId","userUserId","errors","Error","createExpense","handlerCategory","handletDate","AlertCreateScreen","ACTIVITY_CREATE_REQUEST","ACTIVITY_CREATE_SUCCESS","ACTIVITY_CREATE_FAIL","ACTIVITY_LIST_REQUEST","ACTIVITY_LIST_SUCCESS","ACTIVITY_LIST_FAIL","ActivityScreen","activitiesList","activitiesLoad","activities","setActivities","onDragEnd","source","destination","index","prevActivities","list","startIndex","endIndex","removed","reorder","droppableId","droppableProvided","droppableProps","ref","innerRef","draggableId","activityId","toString","draggableProvided","draggableProps","dragHandleProps","activity","charAt","ActivityCreateScreen","setActivity","createActivity","ENTRY_CREATE_REQUEST","ENTRY_CREATE_SUCCESS","ENTRY_CREATE_FAIL","ENTRY_GET_REQUEST","ENTRY_GET_SUCCESS","ENTRY_GET_FAIL","listEntries","EntryScreen","entriesList","entries","number","entry","entryId","nextExpense","class","EntryCreateScreen","entryCreate","loadingCreate","actualMonth","setActualMonth","obj","createEntry","NEXT_EXPENSE_CREATE_REQUEST","NEXT_EXPENSE_CREATE_SUCCESS","NEXT_EXPENSE_CREATE_FAIL","NEXT_EXPENSE_GET_REQUEST","NEXT_EXPENSE_GET_SUCCESS","NEXT_EXPENSE_GET_FAIL","NEXT_EXPENSE_UPDATE_REQUEST","NEXT_EXPENSE_UPDATE_SUCCESS","NEXT_EXPENSE_UPDATE_FAIL","listnextExpenses","NextExpenseScreen","estimated","setEstimated","confirmed","setConfirmed","nextExpensesList","nextExpenses","handleNextExpense","nextExpenseId","check","updateNextExpense","NextExpenseCreateScreen","nextExpenseCreate","setName","entryEntryId","createNextExpense","SidebarMenu","sampleLocation","useLocation","RouteGroup","TransitionGroup","CSSTransition","classNames","timeout","component","exact","key","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","setNotification","notification","reducer","combineReducers","action","register","user","userSuscribe","suscribe","activityCreate","nextExpenseUpdate","updated","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","isLocalhost","Boolean","hostname","PUBLIC_VAPID_KEY","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","waiting","addEventListener","pushManager","subscribe","userVisibleOnly","applicationServerKey","suscription","subscribeUser","serviceSubscribeUser","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.5d9054ec.chunk.js","sourcesContent":["const convertValue = (value) => {\r\n  return new Intl.NumberFormat().format(value);\r\n};\r\n\r\nconst convertDate = (date, months) => {\r\n  date = date.split(\"T\")[0];\r\n  let month = date.split(\"-\")[1];\r\n  let day = date.split(\"-\")[2];\r\n\r\n  let result = months.filter((expense) => expense.value === month);\r\n  let newDate = `${day} ${result[0].label}`;\r\n  return newDate.slice(0, 6).split(\" \");\r\n};\r\n\r\nconst getDateUtils = () => {\r\n  const months = [\r\n    \"Ene\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Abr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Ago\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dic\",\r\n  ];\r\n  let newDate = new Date();\r\n  const year = newDate.getFullYear();\r\n  const day = newDate.getDate();\r\n  const month = months[newDate.getMonth()];\r\n\r\n  return { year: year, month: month, day: day };\r\n};\r\n\r\nmodule.exports = { convertValue, convertDate, getDateUtils };\r\n","export const ALERT_LIST_REQUEST = \"ALERT_LIST_REQUEST\";\r\nexport const ALERT_LIST_SUCCESS = \"ALERT_LIST_SUCCESS\";\r\nexport const ALERT_LIST_FAIL = \"ALERT_LIST_FAIL\";\r\n\r\nexport const ALERT_UPDATE_REQUEST = \"ALERT_UPDATE_REQUEST\";\r\nexport const ALERT_UPDATE_SUCCESS = \"ALERT_UPDATE_SUCCESS\";\r\nexport const ALERT_UPDATE_FAIL = \"ALERT_UPDATE_FAIL\";\r\n\r\nexport const ALERT_CREATE_REQUEST = \"ALERT_CREATE_REQUEST\";\r\nexport const ALERT_CREATE_SUCCESS = \"ALERT_CREATE_SUCCESS\";\r\nexport const ALERT_CREATE_FAIL = \"ALERT_CREATE_FAIL\";\r\n\r\nexport const ALERT_DELETE_REQUEST = \"ALERT_DELETE_REQUEST\";\r\nexport const ALERT_DELETE_SUCCESS = \"ALERT_DELETE_SUCCESS\";\r\nexport const ALERT_DELETE_FAIL = \"ALERT_DELETE_FAIL\";\r\n\r\nexport const TYPE_ALERT_LIST_REQUEST = \"TYPE_ALERT_LIST_REQUEST\";\r\nexport const TYPE_ALERT_LIST_SUCCESS = \"TYPE_ALERT_LIST_SUCCESS\";\r\nexport const TYPE_ALERT_LIST_FAIL = \"TYPE_ALERT_LIST_FAIL\";","import axios from \"axios\";\r\nimport { ALERT_CREATE_FAIL, ALERT_CREATE_REQUEST, ALERT_CREATE_SUCCESS, ALERT_DELETE_FAIL, ALERT_DELETE_REQUEST, ALERT_DELETE_SUCCESS, ALERT_LIST_FAIL, ALERT_LIST_REQUEST, ALERT_LIST_SUCCESS, ALERT_UPDATE_FAIL, ALERT_UPDATE_REQUEST, ALERT_UPDATE_SUCCESS, TYPE_ALERT_LIST_FAIL, TYPE_ALERT_LIST_REQUEST, TYPE_ALERT_LIST_SUCCESS } from '../constants/alertConstants';\r\n\r\nexport const listAlerts = () => async (dispatch, getState) => {\r\n    dispatch({ type: ALERT_LIST_REQUEST });\r\n    const {userSignin: { userInfo }} = getState(); \r\n    try {\r\n        const { data } = await axios.get(`/api/alerts/${userInfo.id}`);\r\n        dispatch({ type: ALERT_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALERT_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        }); \r\n    }\r\n}\r\n\r\nexport const updateAlertActive = (alert) => async (dispatch) => {\r\n    dispatch({ type: ALERT_UPDATE_REQUEST });\r\n    try {\r\n        const { data } = await axios.put(`/api/alerts`, alert);\r\n        dispatch({ type: ALERT_UPDATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALERT_UPDATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });    \r\n    }\r\n}\r\n\r\nexport const createAlert = (alert) => async (dispatch, getState) => {\r\n    dispatch({ type: ALERT_CREATE_REQUEST });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n        const { data } = await axios.post('/api/alerts', {\r\n            alert: alert,\r\n            userId: userInfo.id\r\n        });\r\n        dispatch({ type: ALERT_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALERT_CREATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        }); \r\n    }\r\n}\r\n\r\nexport const listTypeAlerts = () => async (dispatch) => {\r\n    dispatch({ type: TYPE_ALERT_LIST_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.post('/api/alerts/types');\r\n        dispatch({ type: TYPE_ALERT_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: TYPE_ALERT_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        }); \r\n    }\r\n}\r\n\r\nexport const deleteAlert = (alertId) => async (dispatch) => {\r\n    dispatch({ type: ALERT_DELETE_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.delete(`/api/alerts/${alertId}`);\r\n        dispatch({ type: ALERT_DELETE_SUCCESS, payload: data.deleted });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALERT_DELETE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });   \r\n    }\r\n}\r\n","import React from 'react';\r\n// import Alert from '@material-ui/lab/Alert';\r\n\r\nexport default function MessageBox(props) {\r\n    return (\r\n        // <Alert severity=\"error\">Error</Alert>\r\n        <div className={`alert alert-${props.variant || 'info'}`}>\r\n            {props.children} \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function LoadingBox() {\r\n    return (\r\n        <div>\r\n            <div className='spinner'></div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Select from 'react-select';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport LoadingBox from '../utils/LoadingBox';\r\nimport { createAlert, listAlerts, listTypeAlerts, updateAlertActive } from '../../actions/alertActions';\r\n\r\nexport default function DrawerAlert(props) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { editAlert, edit, state, setState } = props;\r\n  const [days, setDays] = useState([]);\r\n  const [selectDay, setSelectDay] = useState('');\r\n  const [selectType, setSelectType] = useState('');\r\n  const [day, setDay] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [submit, setSubmit] = useState(false);\r\n\r\n  const alertCreate = useSelector(state => state.alertCreate);\r\n  const { alert } = alertCreate;\r\n\r\n  const alertActiveUpdate = useSelector(state => state.alertActiveUpdate);\r\n  const { alert: alertSuccess } = alertActiveUpdate;\r\n\r\n  const alertTypeList = useSelector(state => state.alertTypeList);\r\n  const { typeAlerts, loading: loadingTypes } = alertTypeList;\r\n\r\n    const toggleDrawer = (open) => {\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handleClose = useCallback((open) => {\r\n        if(state.right)\r\n            setState({ ...state, right: open });\r\n    },[setState, state]);\r\n\r\n  const handleSubmit = (e) => { \r\n        e.preventDefault();\r\n        setSubmit(true);\r\n        if (edit) {\r\n            dispatch(updateAlertActive({\r\n                date: day,\r\n                alert: title,\r\n                message,\r\n                id:editAlert.id,\r\n                active:editAlert.active\r\n            }));\r\n        } else {\r\n            dispatch(createAlert({date: day, alert: title, message}));\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (days.length < 1) {\r\n            let days = [];\r\n            [...Array(31).keys()].map(item => days.push({value: item + 1, label: item + 1}));\r\n            setDays(days);\r\n        }\r\n    },[days]);\r\n\r\n    useEffect(()=>{\r\n        dispatch(listTypeAlerts());\r\n    }, [dispatch])\r\n\r\n    useEffect(()=>{\r\n        if ((alert && submit) || (alertSuccess && submit)){\r\n            handleClose(false);\r\n            dispatch(listAlerts());\r\n        }\r\n    },[alert, submit, dispatch, alertSuccess, handleClose]);\r\n\r\n    useEffect(()=>{\r\n        if (editAlert && edit) {\r\n            const type = typeAlerts.filter(type => type.label === editAlert.priority)\r\n            setTitle(editAlert.alert);\r\n            setMessage(editAlert.message);\r\n            setSelectDay({label: editAlert.date, value:editAlert.date});\r\n            setSelectType(type);\r\n            setDay(editAlert.date); \r\n        } else {\r\n            setTitle('');\r\n            setMessage('');\r\n            setSelectDay({ label: 1, value: 1 }); \r\n            setDay(1); \r\n            setSelectType({});\r\n        }\r\n    },[editAlert, edit, typeAlerts]);\r\n\r\n  return (\r\n\r\n    <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n        <div className=\"drawer-header\">\r\n            <ArrowBackIcon id=\"close\" className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n        </div>\r\n        <div className=\"drawer-body\">\r\n        <form className=\"form-modal\" onSubmit={handleSubmit}>\r\n                <div className=\"form-title\">\r\n                    <div>Registar Alerta</div>\r\n                    <Divider />\r\n                </div>\r\n                <div>\r\n                <label>Prioridad</label>\r\n                {\r\n                    loadingTypes ? <LoadingBox />\r\n                    :\r\n                    (\r\n                    <Select\r\n                        placeholder=\"Prioridad de la alerta\"\r\n                        onChange={e => setTitle(e.value)}\r\n                        defaultValue={selectType}\r\n                        options={typeAlerts}\r\n                    />\r\n                    )\r\n                }\r\n\r\n            </div>\r\n            <div>\r\n                <label>Descripcíon alerta</label>\r\n                <textarea\r\n                    type=\"text\"\r\n                    value={message}\r\n                    onChange={e => setMessage(e.target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label>Día de envío</label>\r\n                <Select\r\n                    placeholder=\"Dia\"\r\n                    onChange={e => setDay(e.value)}\r\n                    defaultValue={selectDay}\r\n                    options={days}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button onClick={() => toggleDrawer(false)} className=\"btn secundary\" type=\"submit\">{edit ? 'Actualizar' : 'Crear'}</button>\r\n            </div>\r\n\r\n        </form>\r\n        </div>\r\n    </Drawer>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function FloatButton(props) {\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const [url, setUrl] = useState('');\r\n\r\n    useEffect(() => {\r\n        const path = props.props.location.pathname;\r\n\r\n        switch (path) {\r\n            case '/':\r\n                setUrl('/expenses-create');\r\n                break;\r\n            case '/activities':\r\n                setUrl('/activities-create');\r\n                break;\r\n            case '/alerts':\r\n                setUrl('/alerts-create');\r\n                break;\r\n            case '/entries':\r\n                setUrl('/entries-create');\r\n                break;\r\n\r\n            default:\r\n                if(path.includes('/next-expenses')){\r\n                    setUrl('/next-expenses-create');\r\n                } \r\n                break;\r\n        }\r\n\r\n    }, [props]);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                userInfo &&\r\n                (\r\n                    <Link to={url}>\r\n                        <div className=\"floating-button\">\r\n                            <button className=\"btoncito\">\r\n                                <AddIcon />\r\n                            </button>\r\n                        </div>\r\n                    </Link>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteAlert, listAlerts, updateAlertActive } from '../../actions/alertActions';\r\nimport MessageBox from '../../components/MessageBox';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport DrawerAlert from '../../components/Drawers/DrawerAlert';\r\nimport Swal from 'sweetalert2'\r\nimport FloatButton from '../../components/FloatButton';\r\n\r\nexport default function AlertScreen(props) {\r\n    const dispatch = useDispatch();\r\n    const [rows, setRows] = useState([]);\r\n    const [send, setSend] = useState(false);\r\n    const [editAlert, setEditAlert] = useState();\r\n    const [edit, setEdit] = useState(false);\r\n    const [submitDelete, setSubmitDelete] = useState(false);\r\n\r\n    const alertList = useSelector(state => state.alertList);\r\n    const { error, loading, alerts } = alertList;\r\n\r\n    const alertActiveUpdate = useSelector(state => state.alertActiveUpdate);\r\n    const { alert } = alertActiveUpdate;\r\n\r\n    const alertDelete = useSelector(state => state.alertDelete);\r\n    const { success } = alertDelete;\r\n\r\n    const [state, setState] = React.useState({ right: false });\r\n\r\n    const handleActive = (e, item) => {\r\n        dispatch(updateAlertActive({...item, active: e.target.checked}));\r\n        setSend(true);\r\n    }\r\n\r\n    const toggleDrawer = (open, item) => {\r\n\r\n        if(item){\r\n            setEditAlert(item);\r\n            setEdit(true);\r\n        } else {\r\n            setEditAlert({});\r\n        }\r\n\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handleDelete = (alertId) => {\r\n        Swal.fire({\r\n            title: '¿Eliminar alerta?',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Sí, eliminar'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              dispatch(deleteAlert(alertId));\r\n              setSubmitDelete(true);\r\n            }\r\n          })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(success && submitDelete){\r\n            Swal.fire(\r\n                'Eliminado!',\r\n                'Alerta eliminada correctamente',\r\n                'success'\r\n            ).then(()=>{\r\n                setSubmitDelete(false);\r\n                dispatch(listAlerts());\r\n            });  \r\n        }\r\n    },[success, submitDelete, dispatch])\r\n\r\n    useEffect(()=>{\r\n        if (alerts) {\r\n            let rows = [];\r\n            alerts.map(item => rows.push({\r\n                id: item.alertId,\r\n                priority: item.typesalert.typeAlert,\r\n                message: item.message,\r\n                date: item.date,\r\n                active: item.active\r\n            }));\r\n\r\n            setRows(rows);\r\n        } else {\r\n            dispatch(listAlerts());\r\n        }\r\n    }, [alerts, dispatch]);\r\n\r\n    useEffect(()=>{\r\n        if (alert && send){\r\n            dispatch(listAlerts());\r\n        }\r\n    },[dispatch, alert, send]);\r\n\r\n    return (\r\n        <div>\r\n            <DrawerAlert \r\n                state={state}\r\n                setState={setState}\r\n                editAlert={editAlert}\r\n                edit={edit}\r\n            />\r\n\r\n            <div className=\"container page-container page\">\r\n                <h2>Alertas<small></small></h2>\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={() => toggleDrawer(true)}\r\n                    className=\"btn primary\"\r\n                >\r\n                    Crear alerta\r\n                </button>\r\n\r\n                {\r\n                loading ? <LoadingBox />\r\n                :\r\n                error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                :(\r\n                <div className=\"container-table\">\r\n                    <ul className=\"responsive-table\">\r\n                        <li className=\"table-header\">\r\n                            <div className=\"col col-2\">Activo</div>\r\n                            <div className=\"col col-2\">Prioridad</div>\r\n                            <div className=\"col col-4\">Mensaje</div>\r\n                            <div className=\"col col-4\">Dia de envio</div>\r\n                            <div className=\"col col-2\">Acciones</div>\r\n                        </li>\r\n                        {\r\n                            rows.map(item => (\r\n                                <li className=\"table-row\" key={item.id}>\r\n                                    <div className=\"col col-2\" data-label=\"Payment Status\">\r\n                                        <input type=\"checkbox\" checked={item.active} value={false} onChange={ e => handleActive(e, item)} />\r\n                                    </div>\r\n                                    <div className=\"col col-2\" data-label=\"Customer Name\">{item.priority}</div>\r\n                                    <div className=\"col col-4\" data-label=\"Amount\">{item.message}</div>\r\n                                    <div className=\"col col-4\" data-label=\"Payment Status\">Día {item.date} de cada mes</div>\r\n                                    <div className=\"col col-2\" data-label=\"Payment Status\">\r\n                                        <EditIcon onClick={() => toggleDrawer(true, item)} className=\"cursor-pointer\" />\r\n                                        <DeleteIcon onClick={() => handleDelete(item.id)} className=\"cursor-pointer\" />\r\n                                    </div>\r\n                                </li> \r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                )}\r\n            </div>\r\n            <FloatButton props={props} />\r\n        </div>\r\n    )\r\n}\r\n","export const EXPENSE_LIST_REQUEST = 'EXPENSE_LIST_REQUEST';\r\nexport const EXPENSE_LIST_SUCCESS = 'EXPENSE_LIST_SUCCESS';\r\nexport const EXPENSE_LIST_FAIL = 'EXPENSE_LIST_FAIL';\r\n\r\nexport const EXPENSE_LIST_BY_DATE_REQUEST = 'EXPENSE_LIST_BY_DATE_REQUEST';\r\nexport const EXPENSE_LIST_BY_DATE_SUCCESS = 'EXPENSE_LIST_BY_DATE_SUCCESS';\r\nexport const EXPENSE_LIST_BY_DATE_FAIL = 'EXPENSE_LIST_BY_DATE_FAIL';\r\n\r\nexport const EXP_LIST_REQUEST = 'EXP_LIST_REQUEST';\r\nexport const EXP_LIST_SUCCESS = 'EXP_LIST_SUCCESS';\r\nexport const EXP_LIST_FAIL = 'EXP_LIST_FAIL';\r\n\r\nexport const EXPENSE_CREATE_REQUEST = 'EXPENSE_CREATE_REQUEST';\r\nexport const EXPENSE_CREATE_SUCCESS = 'EXPENSE_CREATE_SUCCESS';\r\nexport const EXPENSE_CREATE_FAIL = 'EXPENSE_CREATE_FAIL';\r\n\r\nexport const EXPENSE_DELETE_REQUEST = 'EXPENSE_DELETE_REQUEST';\r\nexport const EXPENSE_DELETE_SUCCESS = 'EXPENSE_DELETE_SUCCESS';\r\nexport const EXPENSE_DELETE_FAIL = 'EXPENSE_DELETE_FAIL';","import axios from \"axios\";\r\nimport {\r\n  EXPENSE_CREATE_FAIL,\r\n  EXPENSE_CREATE_REQUEST,\r\n  EXPENSE_CREATE_SUCCESS,\r\n  EXPENSE_DELETE_FAIL,\r\n  EXPENSE_DELETE_REQUEST,\r\n  EXPENSE_DELETE_SUCCESS,\r\n  EXPENSE_LIST_BY_DATE_FAIL,\r\n  EXPENSE_LIST_BY_DATE_REQUEST,\r\n  EXPENSE_LIST_BY_DATE_SUCCESS,\r\n  EXPENSE_LIST_FAIL,\r\n  EXPENSE_LIST_REQUEST,\r\n  EXPENSE_LIST_SUCCESS,\r\n  EXP_LIST_FAIL,\r\n  EXP_LIST_REQUEST,\r\n  EXP_LIST_SUCCESS,\r\n} from \"../constants/expenseConstants\";\r\n\r\nexport const listExpenses = (months) => async (dispatch, getState) => {\r\n  dispatch({ type: EXPENSE_LIST_REQUEST });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await axios.post(\r\n      `/api/expenses/${userInfo.id}`,\r\n      {\r\n        months: months,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n    );\r\n    dispatch({ type: EXPENSE_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: EXPENSE_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.response\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listExpensesByDate = () => async (dispatch, getState) => {\r\n  dispatch({ type: EXPENSE_LIST_BY_DATE_REQUEST });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await axios.get(`/api/expenses/byDate/${userInfo.id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    });\r\n    dispatch({ type: EXPENSE_LIST_BY_DATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: EXPENSE_LIST_BY_DATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.response\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listExpense = (expenseId) => async (dispatch) => {\r\n  dispatch({ type: EXP_LIST_REQUEST });\r\n  try {\r\n    const { data } = await axios.get(`/api/expenses/${expenseId}`);\r\n    dispatch({ type: EXP_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: EXP_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.response\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createExpense = (objExpense) => async (dispatch, getState) => {\r\n  dispatch({ type: EXPENSE_CREATE_REQUEST });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n\r\n  try {\r\n    const { data } = await axios.post(\"/api/expenses/\", {\r\n      ...objExpense,\r\n      userUserId: userInfo.id,\r\n    });\r\n\r\n    if (data.errors) {\r\n      throw new Error(data.errors[0].message);\r\n    }\r\n    dispatch({ type: EXPENSE_CREATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: EXPENSE_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.response\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteExpense = (expenseId) => async (dispatch) => {\r\n  dispatch({ type: EXPENSE_DELETE_REQUEST });\r\n\r\n  try {\r\n    const { data } = await axios.delete(`/api/expenses/${expenseId}`, {\r\n      expenseId: expenseId,\r\n    });\r\n\r\n    dispatch({ type: EXPENSE_DELETE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: EXPENSE_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.response\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","export const GET_MONTHS_REQUEST = \"GET_MONTHS_REQUEST\";\r\nexport const GET_MONTHS_SUCCESS = \"GET_MONTHS_SUCCESS\";\r\nexport const GET_MONTHS_FAIL = \"GET_MONTHS_FAIL\";\r\n\r\nexport const SET_MONTH_REQUEST = \"SET_MONTH_REQUEST\";\r\nexport const SET_MONTH_SUCCESS = \"SET_MONTH_SUCCESS\";\r\nexport const SET_MONTH_FAIL = \"SET_MONTH_FAIL\";\r\n\r\nexport const SET_VIEWER_REQUEST = \"SET_VIEWER_REQUEST\";\r\nexport const SET_VIEWER_SUCCESS = \"SET_VIEWER_SUCCESS\";\r\nexport const SET_VIEWER_FAIL = \"SET_VIEWER_FAIL\";\r\n\r\nexport const SET_NOTIFICATIONS_REQUEST = \"SET_NOTIFICATIONS_REQUEST\";\r\nexport const SET_NOTIFICATIONS_SUCCESS = \"SET_NOTIFICATIONS_SUCCESS\";\r\nexport const SET_NOTIFICATIONS_FAIL = \"SET_NOTIFICATIONS_FAIL\";\r\n\r\nexport const SET_GROUP_REQUEST = \"SET_GROUP_REQUEST\";\r\nexport const SET_GROUP_SUCCESS = \"SET_GROUP_SUCCESS\";\r\nexport const SET_GROUP_FAIL = \"SET_GROUP_FAIL\";","import axios from \"axios\";\r\nimport {\r\n  GET_MONTHS_FAIL,\r\n  GET_MONTHS_REQUEST,\r\n  GET_MONTHS_SUCCESS,\r\n  SET_GROUP_FAIL,\r\n  SET_GROUP_REQUEST,\r\n  SET_GROUP_SUCCESS,\r\n  SET_MONTH_FAIL,\r\n  SET_MONTH_REQUEST,\r\n  SET_MONTH_SUCCESS,\r\n  SET_NOTIFICATIONS_FAIL,\r\n  SET_NOTIFICATIONS_REQUEST,\r\n  SET_NOTIFICATIONS_SUCCESS,\r\n  SET_VIEWER_FAIL,\r\n  SET_VIEWER_REQUEST,\r\n  SET_VIEWER_SUCCESS,\r\n} from \"../constants/utilsConstants\";\r\n\r\nexport const getMonths = () => async (dispatch) => {\r\n  dispatch({ type: GET_MONTHS_REQUEST });\r\n\r\n  try {\r\n    const { data } = await axios.get(\"/api/utils/months\");\r\n    dispatch({ type: GET_MONTHS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_MONTHS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.response\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const setGroup = (filters) => async (dispatch) => {\r\n  dispatch({ type: SET_GROUP_REQUEST });\r\n\r\n  try {\r\n    localStorage.setItem(\"group\", JSON.stringify(filters));\r\n    dispatch({ type: SET_GROUP_SUCCESS, payload: filters });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SET_GROUP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.response\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const setMonth = (months) => async (dispatch) => {\r\n  dispatch({ type: SET_MONTH_REQUEST });\r\n\r\n  try {\r\n    localStorage.setItem(\"months\", JSON.stringify(months));\r\n    dispatch({ type: SET_MONTH_SUCCESS, payload: months });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SET_MONTH_FAIL,\r\n      payload:\r\n        error.response && error.response.data.response\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const setViewer = (type) => async (dispatch) => {\r\n  dispatch({ type: SET_VIEWER_REQUEST})\r\n\r\n  try {\r\n    localStorage.setItem('viewer', type);\r\n    dispatch({ type: SET_VIEWER_SUCCESS, payload: type})\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SET_VIEWER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.response\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n}\r\n\r\nexport const setNotifications = (data) => (dispatch) => {\r\n  dispatch({ type: SET_NOTIFICATIONS_REQUEST });\r\n  try {\r\n    console.log(data);\r\n    let notification = [\r\n      { title: \"ojo con eso\", body: data.message, watched: false },\r\n    ];\r\n    localStorage.setItem(\"notification\", JSON.stringify(notification));\r\n    dispatch({ type: SET_NOTIFICATIONS_SUCCESS, payload: notification });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SET_NOTIFICATIONS_FAIL,\r\n      payload: \"Error getting notifications\",\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Bar, Doughnut, Line } from \"react-chartjs-2\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listExpensesByDate } from \"../actions/expenseActions\";\r\nimport { getMonths } from \"../actions/utilsActions\";\r\nimport { convertDate } from \"../common/utils\";\r\n\r\nexport default function ChartScreen() {\r\n  const dispatch = useDispatch();\r\n  const [labels, setLabels] = useState([]);\r\n  const [data, setData] = useState([]);\r\n\r\n  const expensesByDateList = useSelector((state) => state.expensesByDateList);\r\n  const { expenses } = expensesByDateList;\r\n\r\n  const monthsGet = useSelector((state) => state.monthsGet);\r\n  const { months } = monthsGet;\r\n\r\n  const options = {\r\n    elements: {\r\n      bar: {\r\n        borderWidth: 2,\r\n      },\r\n    },\r\n    scales: {\r\n      y:{\r\n        display: false,\r\n      }\r\n    },\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!expenses) {\r\n      dispatch(listExpensesByDate());\r\n    } else {\r\n      if (months) {\r\n        let labels = [];\r\n        let data = [];\r\n        expenses.forEach((item) => {\r\n          labels.push(convertDate(item.date, months)[1]);\r\n          data.push(parseInt(item.total));\r\n        });\r\n        setLabels(labels);\r\n        setData(data);\r\n      } else {\r\n        dispatch(getMonths());\r\n      }\r\n    }\r\n  }, [dispatch, expenses, months]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {labels && data && (\r\n          <Bar\r\n            datasetIdKey=\"id\"\r\n            options={options}\r\n            data={{\r\n              labels: labels,\r\n              datasets: [\r\n                {\r\n                  label: \"Gastos\",\r\n                  data: data,\r\n                  backgroundColor: [\r\n                    \"rgba(255, 99, 132, 0.8)\",\r\n                    \"rgba(53, 162, 235, 0.8)\",\r\n                  ],\r\n                },\r\n              ],\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n      {/* <div>\r\n        <ul>\r\n          {expenses &&\r\n            expenses.map((expense) => (\r\n              <>\r\n                <li>{convertDate(expense.date, months)[1]}</li>\r\n                <li>{expense.total}</li>\r\n              </>\r\n            ))}\r\n          <li></li>\r\n        </ul>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteExpense, listExpense } from '../../actions/expenseActions';\r\nimport { getMonths } from '../../actions/utilsActions';\r\nimport MessageBox from '../../components/MessageBox';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\nexport default function ExpenseScreen(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const expenseId = props.match.params.id;\r\n\r\n    const [send, setSend] = useState(false);\r\n\r\n    const expList = useSelector(state => state.expList);\r\n    const { expense, loading, error } = expList;\r\n\r\n    const expenseDelete = useSelector(state => state.expenseDelete);\r\n    const { expense: deleted } = expenseDelete;\r\n\r\n    const monthsGet = useSelector(state => state.monthsGet);\r\n    const { months } = monthsGet;\r\n\r\n    const convertDate = (date) => {\r\n        let month = date.split('-')[1];\r\n        let day = date.split('-')[2];\r\n  \r\n        let result = months.filter(item => item.value === month);\r\n        let newDate = `${day} ${result[0].label}`;\r\n        return newDate;\r\n    }\r\n\r\n    const deleteExp = () => {\r\n        setSend(true);\r\n        dispatch(deleteExpense(expenseId))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        dispatch(listExpense(expenseId));\r\n    }, [dispatch, expenseId]);\r\n\r\n    useEffect(()=> {\r\n        if(!months) dispatch(getMonths());\r\n    },[dispatch, months]);\r\n\r\n    useEffect(() => {\r\n        if (deleted && send) {\r\n            props.history.push('/');\r\n            setSend(false);\r\n        } \r\n    }, [deleted, send, props])\r\n    \r\n    return (\r\n        <div>\r\n            {\r\n                loading ? <LoadingBox />\r\n                :\r\n                error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                : \r\n                (\r\n                <div className=\"card-expense\">\r\n                    <div className=\"card-expense-header\">\r\n                        <div onClick={ () => deleteExp()}> <DeleteIcon /></div>\r\n                        <div>{expense.category.label}</div>\r\n                        <div>{expense.subcategory.label}</div>\r\n                        <div>{expense.description}</div>\r\n                    </div>\r\n                    <div className=\"card-expense-body\">\r\n                        <div>${new Intl.NumberFormat().format(expense.value)}</div>\r\n                        { months && ( \r\n                            <div>{convertDate(expense.date.split('T')[0])}</div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"card-expense-edit\">\r\n                        <Avatar> <EditIcon /> </Avatar>\r\n                    </div>\r\n                </div>\r\n                )\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listExpenses } from \"../actions/expenseActions\";\r\nimport { getMonths, setMonth } from \"../actions/utilsActions\";\r\n\r\nexport default function DateSelect(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const monthsGet = useSelector((state) => state.monthsGet);\r\n  const { months } = monthsGet;\r\n\r\n  const monthsSet = useSelector((state) => state.monthsSet);\r\n  const { monthsStorage } = monthsSet;\r\n\r\n  const { month } = props;\r\n\r\n  const handleSelectMonth = (month) => {\r\n    if (monthsStorage) return monthsStorage.includes(month);\r\n  };\r\n\r\n  const handlePickMonth = (month) => {\r\n\r\n    if(monthsStorage) {\r\n      if (!handleSelectMonth(month)) {\r\n        monthsStorage.push(month);\r\n      } else {\r\n        for (var i = 0; i < monthsStorage.length; i++) {\r\n          if (monthsStorage[i] === month) monthsStorage.splice(i, 1);\r\n        }\r\n      }\r\n      dispatch(setMonth(monthsStorage))\r\n    } else {\r\n      dispatch(setMonth([month]))\r\n    }\r\n\r\n    dispatch(listExpenses(monthsStorage));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!months) dispatch(getMonths());\r\n  }, [months, dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(listExpenses(month));\r\n  }, [dispatch, month]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {months && (\r\n        <div className=\"months-content\">\r\n          {months.map((month) => (\r\n            <div\r\n              onClick={() => handlePickMonth(month.value)}\r\n              key={month.value}\r\n              className={\r\n                handleSelectMonth(month.value) ? \"months-content-selected\" : undefined\r\n              }\r\n            >\r\n              {month.label.slice(0, 3)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setGroup } from \"../actions/utilsActions\";\r\n\r\nexport default function FilterBotton() {\r\n  const dispatch = useDispatch();\r\n  const groupSet = useSelector((state) => state.groupSet);\r\n  const { group } = groupSet;\r\n\r\n  const handlerButton = () => {\r\n    dispatch(setGroup(!group));\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"filter-content\">\r\n        <button onClick={() => handlerButton()} type=\"button\">\r\n          {group ? 'Desagrupar' : 'Agrupar'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { convertValue } from \"../../common/utils\";\r\n\r\nexport default function CategoryDetails(props) {\r\n  const { expenses: expensesProps, props: prop } = props;\r\n  const [expenses, setExpenses] = useState([]);\r\n\r\n  const handleCategoryReduce = (items) => {\r\n    return items.reduce((prev, item) => {\r\n      const head = `${item.category.categoryId}`;\r\n      const value = prev[head] ? prev[head][0] : 0;\r\n      const sub = prev[head] ? prev[head][3] : [];\r\n\r\n      const headSub = item.subcategory.subcategoryId;\r\n      const valueSub = sub[headSub] ? sub[headSub][0] : 0;\r\n      const exp = sub[headSub] ? sub[headSub][2] : [];\r\n\r\n      exp.push({\r\n        expenseId: item.expenseId,\r\n        expense: item.subcategory.subcategory,\r\n        description: item.description,\r\n        value: item.value,\r\n      });\r\n\r\n      sub[headSub] = [\r\n        valueSub + parseInt(item.value),\r\n        item.subcategory.subcategory,\r\n        exp,\r\n      ];\r\n\r\n      prev[head] = [\r\n        value + parseInt(item.value),\r\n        item.category.category,\r\n        item.category.categoryId,\r\n        sub,\r\n      ];\r\n\r\n      console.log(prev);\r\n      return prev;\r\n    }, []);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const result = handleReorder(handleCategoryReduce(expensesProps));\r\n    setExpenses(result);\r\n  }, [expensesProps]);\r\n\r\n  const handleRedirect = (expenseId) => {\r\n    prop.history.push(`/expenses/${expenseId}`);\r\n  };\r\n\r\n  const handleReorder = (items) => {\r\n    return items.sort((a, b) => b[0] - a[0]);\r\n  };\r\n\r\n  return expenses.map((expense) => (\r\n    <Accordion key={expense[2]}>\r\n      <AccordionSummary aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n        <Typography className=\"accordion-title\">\r\n          <div><strong>{expense[1]}</strong></div>\r\n          <div>${convertValue(expense[0])}</div>\r\n        </Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Typography className=\"accordion-body\">\r\n          {handleReorder(expense[3]).map((item) => (\r\n            <Accordion key={item[2]} className=\"custom-accordion\">\r\n              <AccordionSummary\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography className=\"accordion-title\">\r\n                  <div>{item[1][0].toUpperCase() + item[1].substr(1)}</div>\r\n                  <div>${convertValue(item[0])}</div>\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Typography className=\"accordion-body accordion-body-expense\">\r\n                  {handleReorder(item[2]).map((expense) => (\r\n                    <div\r\n                      key={expense.expenseId}\r\n                      className=\"accordion-body-description\"\r\n                      onClick={() => handleRedirect(expense.expenseId)}\r\n                    >\r\n                      <div>{expense.expense}</div>\r\n                      <div>${convertValue(expense.value)}</div>\r\n                    </div>\r\n                  ))}\r\n                </Typography>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          ))}\r\n        </Typography>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  ));\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { convertDate } from \"../common/utils\";\r\n\r\nexport default function ExpenseDetails(props) {\r\n  const monthsGet = useSelector((state) => state.monthsGet);\r\n  const { months } = monthsGet;\r\n  const { expenses, props: prop } = props;\r\n\r\n  const handleRedirect = (expenseId) => {\r\n    prop.history.push(`/expenses/${expenseId}`);\r\n  };\r\n\r\n  return expenses.map((expense) => (\r\n    <div\r\n      key={expense.expenseId}\r\n      className=\"data-table-items\"\r\n      onClick={() => handleRedirect(expense.expenseId)}\r\n    >\r\n      <div className=\"data-date\">\r\n        <div>{expense.date ? convertDate(expense.date, months)[1] : \"\"}</div>\r\n        <div>{expense.date ? convertDate(expense.date, months)[0] : \"\"}</div>\r\n      </div>\r\n\r\n      <div>\r\n        <div className=\"category\">\r\n          {expense.category.category[0].toUpperCase() +\r\n            expense.category.category.substr(1)}\r\n        </div>\r\n        <div className=\"subcategory\">\r\n          {expense.subcategory.subcategory[0].toUpperCase() +\r\n            expense.subcategory.subcategory.substr(1)}\r\n        </div>\r\n      </div>\r\n\r\n      <div>${new Intl.NumberFormat().format(expense.value)}</div>\r\n    </div>\r\n  ));\r\n}\r\n","import React from \"react\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport LoadingBox from \"../components/utils/LoadingBox\";\r\nimport FilterBotton from \"../components/FilterBotton\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { convertValue } from \"../common/utils\";\r\nimport CategoryDetails from \"../components/Accordion/CategoryDetails\";\r\nimport ExpenseDetails from \"../components/ExpenseDetails\";\r\n\r\nexport default function ListScreen(props) {\r\n  const expenseList = useSelector((state) => state.expenseList);\r\n  const { loading, expenses, error } = expenseList;\r\n\r\n  const groupSet = useSelector((state) => state.groupSet);\r\n  const { group } = groupSet;\r\n  return (\r\n    <div>\r\n      <FilterBotton />\r\n\r\n      {loading ? (\r\n        <LoadingBox></LoadingBox>\r\n      ) : error ? (\r\n        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n      ) : (\r\n        <div className=\"datatable\">\r\n          <div className=\"data-info container\">\r\n            <div className=\"data-card\">\r\n              <div>Gastos totales</div>\r\n              <div>\r\n                $\r\n                {convertValue(\r\n                  expenses.reduce((a, c) => a + parseInt(c.value), 0)\r\n                )}\r\n              </div>\r\n              <div>\r\n                <div className=\"data-card-circle\"></div>\r\n              </div>\r\n              <div>\r\n                <div className=\"data-card-circle-2\"></div>\r\n              </div>\r\n              <div>\r\n                <div className=\"data-card-circle-3\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"data-table\">\r\n            <MDBDataTableV5\r\n              hover\r\n              data={datatable}\r\n              searchTop\r\n              paging={false}\r\n              info={false}\r\n              searchBottom={false}\r\n            />\r\n          </div> */}\r\n          <div className=\"data-content\">\r\n            {group ? (\r\n              <CategoryDetails expenses={expenses} props={props} />\r\n            ) : (\r\n              <ExpenseDetails expenses={expenses} props={props} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getMonths, setViewer } from \"../actions/utilsActions\";\r\nimport FloatButton from \"../components/FloatButton\";\r\nimport { getDateUtils } from \"../common/utils\";\r\nimport DateSelect from \"../components/DateSelect\";\r\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\r\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\r\nimport ListScreen from \"./ListScreen\";\r\nimport ChartScreen from \"./ChartScreen\";\r\nimport LoadingBox from \"../components/utils/LoadingBox\";\r\n\r\nexport default function HomeScreen(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [success, setSuccess] = useState(false);\r\n  const [month, setMonth] = useState();\r\n\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n\r\n  const monthsGet = useSelector((state) => state.monthsGet);\r\n  const { months } = monthsGet;\r\n\r\n  const viewerSet = useSelector((state) => state.viewerSet);\r\n  const { view, loading } = viewerSet;\r\n\r\n  const expenseList = useSelector((state) => state.expenseList);\r\n  const { expenses } = expenseList;\r\n\r\n  const getDate = () => {\r\n    let newDate = new Date();\r\n    let month = newDate.getMonth() + 1;\r\n\r\n    month = month < 10 ? `0${month}` : `${month}`;\r\n    return [month];\r\n  };\r\n\r\n  const handlerViewer = (type) => {\r\n    dispatch(setViewer(type));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!months) dispatch(getMonths());\r\n  }, [dispatch, months]);\r\n\r\n  useEffect(() => {\r\n    console.log(view);\r\n  }, [view, dispatch]);\r\n\r\n  // useEffect(()=>{\r\n  //   dispatch(setNotifications({title: 'ojo con eso manito', message: 'pagat internet'}));\r\n  // }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) props.history.push(\"/login\");\r\n\r\n    if (!month) {\r\n      const date = JSON.parse(localStorage.getItem(\"months\"))\r\n        ? JSON.parse(localStorage.getItem(\"months\"))\r\n        : getDate();\r\n      setMonth(date);\r\n    }\r\n    setSuccess(false);\r\n  }, [dispatch, props, userInfo, success, expenses, month]);\r\n\r\n  return (\r\n    <div className=\"home-screen\">\r\n      <div className=\"home-screen-info-content\">\r\n        <div className=\"info-content-title\">\r\n          <div>Mis gastos</div>\r\n          <span>resumen</span>\r\n        </div>\r\n        <div className=\"info-content-date\">\r\n          <div>\r\n            {getDateUtils().day} {getDateUtils().month}, {getDateUtils().year}\r\n          </div>\r\n          <div>\r\n            <div\r\n              onClick={() => handlerViewer(0)}\r\n              className={view < 1 && \"info-content-date-selected\"}\r\n            >\r\n              <FormatListBulletedIcon />\r\n            </div>\r\n            <div\r\n              onClick={() => handlerViewer(1)}\r\n              className={view > 0 && \"info-content-date-selected\"}\r\n            >\r\n              <BarChartIcon />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {month && <DateSelect month={month} />}\r\n\r\n      {loading ? (\r\n        <LoadingBox />\r\n      ) : view > 0 ? (\r\n        <ChartScreen />\r\n      ) : (\r\n        <ListScreen props={props} />\r\n      )}\r\n\r\n      <FloatButton props={props} />\r\n    </div>\r\n  );\r\n}\r\n","export const USER_SIGIN_REQUEST = \"USER_SIGIN_REQUEST\";\r\nexport const USER_SIGIN_SUCCESS = \"USER_SIGIN_SUCCESS\";\r\nexport const USER_SIGIN_FAIL = \"USER_SIGIN_FAIL\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_SUSCRIBE_REQUEST = \"USER_SUSCRIBE_REQUEST\";\r\nexport const USER_SUSCRIBE_SUCCESS = \"USER_SUSCRIBE_SUCCESS\";\r\nexport const USER_SUSCRIBE_FAIL = \"USER_SUSCRIBE_FAIL\";\r\n\r\nexport const USER_SIGNOUT_FAIL = \"USER_SIGNOUT_FAIL\";\r\n\r\nexport const PUBLIC_VAPID_KEY = \"BDDk3ILb3FjIjAvTs9PWMoObhChnrBUYwHAsdplom7fePD36G6ZFJumGgSe6C4M3pOpYvFb38XX2wJRIN4B6V_0\";\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signin } from '../../actions/userActions';\r\nimport { Link, useHistory  } from 'react-router-dom';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport MessageBox from '../../components/MessageBox';\r\n\r\nexport default function LoginScreen(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo, error, loading } = userSignin;\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signin({username: username, password: password}));\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(userInfo) history.push(\"/\");\r\n    }, [userInfo, history])\r\n    \r\n    return (\r\n        <div className=\"home\">\r\n            \r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                \r\n                <div className=\"title\">\r\n                    Iniciar sesión\r\n                </div>\r\n\r\n                <div>\r\n                    <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            placeholder=\"Username\"\r\n                            onChange={ e => setUsername(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={e => setPassword(e.target.value)}\r\n                    ></input>\r\n                    {/* <span><Link to=\"/\">recuperar contraseña</Link></span> */}\r\n                </div>\r\n                <div>\r\n                    {\r\n                        loading ? <LoadingBox />\r\n                        :\r\n                        (\r\n                            <button className=\"btn primary\" type=\"submit\">Iniciar Sesión</button>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n                <div>\r\n                    <Link to=\"/register\">¿Olvidaste tu contraseña?</Link> \r\n                </div>\r\n\r\n                <div>\r\n                    { error && <MessageBox variant=\"danger\">{error}</MessageBox> }\r\n                </div>\r\n            </form>\r\n            <div className=\"box-register\">\r\n                <div>\r\n                    <span>\r\n                        <Link to=\"/register\">Crear una cuenta</Link> \r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {\r\n        USER_REGISTER_FAIL,\r\n        USER_REGISTER_REQUEST,\r\n        USER_REGISTER_SUCCESS,\r\n        USER_SIGIN_FAIL,\r\n        USER_SIGIN_REQUEST,\r\n        USER_SIGIN_SUCCESS,\r\n        USER_SIGNOUT_FAIL,\r\n        USER_SUSCRIBE_FAIL,\r\n        USER_SUSCRIBE_REQUEST,\r\n        USER_SUSCRIBE_SUCCESS \r\n        } from \"../constants/userConstants\";\r\nimport axios from 'axios';\r\n\r\nexport const signin = (userData) => async (dispatch) => {\r\n    dispatch({ type: USER_SIGIN_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.post('/api/users/signin', userData);\r\n        dispatch({type: USER_SIGIN_SUCCESS, payload: data });\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_SIGIN_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });\r\n    }\r\n}\r\n\r\nexport const signout = () => async(dispatch) => {\r\n    localStorage.removeItem('userInfo');;\r\n    dispatch({ type: USER_SIGNOUT_FAIL });\r\n}\r\n\r\nexport const registerUser = (userData) => async(dispatch) => {\r\n    dispatch({ type:USER_REGISTER_REQUEST, payload: userData });\r\n    try {\r\n       const { data } = await axios.post('/api/users/register', userData);\r\n       dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n       dispatch({ type: USER_SIGIN_SUCCESS, payload: data });\r\n       localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });\r\n    }\r\n}\r\n\r\nexport const subscribeUser = (suscription) => async (dispatch, getState) => {\r\n    dispatch({ type: USER_SUSCRIBE_REQUEST });\r\n    try {\r\n        const { userSignin: { userInfo } } = getState();\r\n\r\n        const { data } = await axios.post('/api/users/suscription', {\r\n            suscription: suscription,\r\n            userId: userInfo ? userInfo.id  : 1\r\n        });\r\n        dispatch({ type: USER_SUSCRIBE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_SUSCRIBE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default function ProfileScreen() {\r\n    return (\r\n        <div>\r\n            Profile\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { registerUser } from '../../actions/userActions';\r\nimport MessageBox from '../../components/MessageBox';\r\n\r\nexport default function RegisterScreen(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [error, setError] = useState(null);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        setError(null);\r\n        if (password === confirmPassword) {\r\n            dispatch(registerUser({username: username, password:password, email: email}));\r\n        } else {\r\n            setError('Las contraseñas no coinciden');\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (userInfo) {\r\n            props.history.push(\"/\");\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                <div className=\"title\">\r\n                    Registro\r\n                </div>\r\n\r\n                <div>\r\n                    { error && (<MessageBox variant=\"danger\">{error}</MessageBox>)}\r\n                </div>\r\n\r\n                <div>\r\n                    <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            placeholder=\"Username\"\r\n                            onChange={ e => setUsername(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            placeholder=\"Email\"\r\n                            onChange={ e => setEmail(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={e => setPassword(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={e => setConfirmPassword(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <button className=\"btn primary\" type=\"submit\">Registrarme</button>\r\n                </div>\r\n\r\n                <div>\r\n                    <Link to=\"/login\">Iniciar sesion</Link> \r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","export const CATEGORY_CREATE_REQUEST = \"CATEGORY_CREATE_REQUEST\";\r\nexport const CATEGORY_CREATE_SUCCESS = \"CATEGORY_CREATE_SUCCESS\";\r\nexport const CATEGORY_CREATE_FAIL = \"CATEGORY_CREATE_FAIL\";\r\n\r\nexport const CATEGORY_LIST_REQUEST = \"CATEGORY_LIST_REQUEST\";\r\nexport const CATEGORY_LIST_SUCCESS = \"CATEGORY_LIST_SUCCESS\";\r\nexport const CATEGORY_LIST_FAIL = \"CATEGORY_LIST_FAIL\";","import axios from \"axios\";\r\nimport { CATEGORY_CREATE_FAIL, CATEGORY_CREATE_REQUEST, CATEGORY_CREATE_SUCCESS, CATEGORY_LIST_FAIL, CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS } from \"../constants/categoryConstants\"\r\n\r\nexport const listCategories = () => async(dispatch, useState) => {\r\n    dispatch({type:  CATEGORY_LIST_REQUEST });\r\n    const { userSignin: { userInfo }} = useState();\r\n    try {\r\n        const { data } = await axios.get(`/api/categories/${userInfo.id}`);\r\n        dispatch({ type: CATEGORY_LIST_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CATEGORY_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        }); \r\n    }\r\n}\r\n\r\nexport const createCategory = (name) => async(dispatch, useState) => {\r\n    dispatch({ type: CATEGORY_CREATE_REQUEST, payload: name});\r\n    const { userSignin: { userInfo } } = useState();\r\n    try {\r\n        const { data } = await axios.post('/api/categories/', {\r\n            name: name,\r\n            userId: userInfo.id\r\n        });\r\n        dispatch({ type: CATEGORY_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CATEGORY_CREATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}","export const SUBCATEGORY_LIST_REQUEST = 'SUBCATEGORY_LIST_REQUEST';\r\nexport const SUBCATEGORY_LIST_SUCCESS = 'SUBCATEGORY_LIST_SUCCESS';\r\nexport const SUBCATEGORY_LIST_FAIL = 'SUBCATEGORY_LIST_FAIL';\r\n\r\nexport const SUBCATEGORY_LIST_BY_CATEGORY_REQUEST = 'SUBCATEGORY_LIST_BY_CATEGORY_REQUEST';\r\nexport const SUBCATEGORY_LIST_BY_CATEGORY_SUCCESS = 'SUBCATEGORY_LIST_BY_CATEGORY_SUCCESS';\r\nexport const SUBCATEGORY_LIST_BY_CATEGORY_FAIL = 'SUBCATEGORY_LIST_BY_CATEGORY_FAIL';\r\n\r\nexport const SUBCATEGORY_CREATE_REQUEST = 'SUBCATEGORY_CREATE_REQUEST';\r\nexport const SUBCATEGORY_CREATE_SUCCESS = 'SUBCATEGORY_CREATE_SUCCESS';\r\nexport const SUBCATEGORY_CREATE_FAIL = 'SUBCATEGORY_CREATE_FAIL';","import axios from \"axios\";\r\nimport { SUBCATEGORY_CREATE_FAIL, SUBCATEGORY_CREATE_REQUEST, SUBCATEGORY_CREATE_SUCCESS, SUBCATEGORY_LIST_BY_CATEGORY_FAIL, SUBCATEGORY_LIST_BY_CATEGORY_REQUEST, SUBCATEGORY_LIST_BY_CATEGORY_SUCCESS, SUBCATEGORY_LIST_FAIL, SUBCATEGORY_LIST_REQUEST, SUBCATEGORY_LIST_SUCCESS } from \"../constants/subcategoriesConstants\"\r\n\r\nexport const listSubcategories = (categoryId) => async (dispatch) => {\r\n    dispatch({ type: SUBCATEGORY_LIST_REQUEST });\r\n    try {\r\n        const { data } = await axios.get(`/api/subcategories/${categoryId}`);\r\n        dispatch({ type: SUBCATEGORY_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SUBCATEGORY_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const listSubcategoriesByCategory = (categoryId) => async (dispatch) => {\r\n    dispatch({ type: SUBCATEGORY_LIST_BY_CATEGORY_REQUEST });\r\n    try {\r\n        const { data } = await axios.get(`/api/subcategoriesByCategory/${categoryId}`);\r\n        dispatch({ type: SUBCATEGORY_LIST_BY_CATEGORY_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SUBCATEGORY_LIST_BY_CATEGORY_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createSubcategory = (name, categoryId) => async (dispatch) => {\r\n    dispatch({ type: SUBCATEGORY_CREATE_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.post('/api/subcategories',{\r\n            name: name,\r\n            categoryId: categoryId\r\n        });\r\n        dispatch({ type: SUBCATEGORY_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SUBCATEGORY_CREATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createCategory, listCategories } from '../actions/categoryActions';\r\nimport { createSubcategory, listSubcategories } from '../actions/subcategoriesActions';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nexport default function SubForm(props) {\r\n\r\n    const { type, categoryId, showNew } = props;\r\n    const dispatch = useDispatch('');\r\n\r\n    const categoryCreate = useSelector(state => state.categoryCreate);\r\n    const { category } = categoryCreate;\r\n\r\n    const subcategoryCreate = useSelector(state => state.subcategoryCreate);\r\n    const { subcategory } = subcategoryCreate;\r\n    \r\n    const [name, setname] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [submitCategory, setSubmitCategory] = useState(false);\r\n    const [submitSubcategory, setSubmitSubcategory] = useState(false);\r\n\r\n    const handlerSubmit = () => {\r\n\r\n        switch (type) {\r\n            case 'category':\r\n                dispatch(createCategory(name));\r\n                setSubmitCategory(true);\r\n                break;\r\n            case 'subcategory':\r\n                dispatch(createSubcategory(name, categoryId));\r\n                setSubmitSubcategory(true);\r\n                break\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let title = type === 'category' ? 'categoria' : 'subcategoria';\r\n        setTitle(title);\r\n    }, [type, category]);\r\n\r\n    useEffect(()=>{\r\n        if (category && submitCategory) {\r\n          showNew(false); \r\n          dispatch(listCategories()); \r\n          dispatch(listSubcategories(category.categoryId)); \r\n        }\r\n    }, [submitCategory, category, dispatch, showNew]);\r\n\r\n    useEffect(()=>{\r\n        if (subcategory && submitSubcategory) {\r\n          showNew(false); \r\n          dispatch(listSubcategories(categoryId)); \r\n        }\r\n    }, [submitSubcategory, subcategory, dispatch, showNew, categoryId]);\r\n    return (\r\n        <div className=\"sub-form\">\r\n            <div>\r\n                <input \r\n                    type=\"text\"\r\n                    maxLength=\"20\"\r\n                    onChange={e => setname(e.target.value)}\r\n                    placeholder={`Nueva ${title}`}>\r\n                </input>\r\n            </div>\r\n            <div>\r\n                <CheckIcon onClick={handlerSubmit} />\r\n            </div>\r\n            <div>\r\n                <ClearIcon onClick={() => showNew(false)} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MessageBox from '../../components/MessageBox';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listCategories } from '../../actions/categoryActions';\r\nimport { createExpense, listExpenses } from '../../actions/expenseActions';\r\nimport { listSubcategories } from '../../actions/subcategoriesActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SubForm from '../../components/SubForm';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function ExpenseCreateScreen(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [description, setDescription] = useState('');\r\n    const [value, setValue] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [categorySelect, setCategorySelect] = useState('');\r\n    const [subcategory, setSubcategory] = useState('');\r\n    const [today, setToday] = useState('');\r\n\r\n    const [submit, setSubmit] = useState(false);\r\n    const [showNewCategory, setShowNewCateogry] = useState(false);\r\n    const [showNewSubcategory, setShowNewSubcategory] = useState(false);\r\n    const [state, setState] = useState({ right: true });\r\n\r\n    const categoriesList = useSelector(state => state.categoriesList);\r\n    const { loading, error, categories } = categoriesList;\r\n\r\n    const expenseCreate = useSelector(state => state.expenseCreate);\r\n    const { expense, loading: loadingSuccess, error: errorCreate } = expenseCreate;\r\n\r\n    const subcategoriesList = useSelector(state => state.subcategoriesList);\r\n    const { subcategories, loading: loadingSubcategory, error: errorSubcategory } = subcategoriesList;\r\n\r\n    const toggleDrawer = (open) => {\r\n        props.history.push('/');\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handleClose = useCallback((open) => {\r\n        if (state.right)\r\n            props.history.push('/');\r\n        setState({ ...state, right: open });\r\n    }, [setState, state, props]);\r\n\r\n    const loadCategories = useCallback(() => {\r\n        if (!categories) {\r\n            dispatch(listCategories());\r\n        } else {\r\n            if (categories.length > 0) {\r\n                const cat = localStorage.getItem('category') ? localStorage.getItem('category') : categories[0].value\r\n                setCategory(cat);\r\n            }\r\n        }\r\n    }, [categories, dispatch]);\r\n\r\n    const handlerCategory = (e) => {\r\n        localStorage.setItem('category', e);\r\n        setCategory(e);\r\n    }\r\n\r\n    const handlerSubmit = (e) => {\r\n        e.preventDefault();\r\n        const objExpense = {\r\n            description: description,\r\n            value: value,\r\n            date: date,\r\n            categoryCategoryId: category,\r\n            subcategorySubcategoryId: subcategory\r\n        }\r\n        setSubmit(true);\r\n        dispatch(createExpense(objExpense));\r\n    }\r\n\r\n    const getDate = () => {\r\n        let newDate = new Date()\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n\r\n        date = date < 10 ? `0${date}` : `${date}`;\r\n        month = month < 10 ? `0${month}` : `${month}`;\r\n\r\n        let today = `${year}-${month}-${date}`;\r\n        setToday(today);\r\n        setDate(today);\r\n    }\r\n\r\n    const handletDate = (e) => {\r\n        setToday(e);\r\n        setDate(e);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (category) dispatch(listSubcategories(category));\r\n    }, [category, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (!categorySelect && categories) {\r\n            const cat = localStorage.getItem('category') ? parseInt(localStorage.getItem('category')) : categories[0].value\r\n            setCategorySelect(categories.filter(item => item.value === cat)[0])\r\n        }\r\n    }, [categorySelect, categories])\r\n\r\n    useEffect(() => {\r\n        if (subcategories)\r\n            if (subcategories.length > 0)\r\n                setSubcategory(subcategories[0].value);\r\n    }, [subcategories]);\r\n\r\n    useEffect(() => {\r\n        getDate();\r\n        loadCategories();\r\n    }, [loadCategories]);\r\n\r\n    useEffect(() => {\r\n        if (expense && submit) {\r\n            let month = [today.split('-')[1]];\r\n            dispatch(listExpenses(month));\r\n            handleClose(false);\r\n        }\r\n    }, [expense, dispatch, submit, today, handleClose]);\r\n\r\n    return (\r\n        <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n            <div className=\"drawer-header\">\r\n                <Link to=\"/\">\r\n                    <ArrowBackIcon className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n                </Link>\r\n            </div>\r\n            <div className=\"drawer-body\">\r\n                <form className=\"form-modal\" onSubmit={handlerSubmit}>\r\n                    {errorCreate && <MessageBox variant=\"danger\">{errorCreate}</MessageBox>}\r\n                    <div className=\"form-title\">\r\n                        <div>Registrar gasto</div>\r\n                        <Divider />\r\n                    </div>\r\n\r\n                    <div>\r\n                        {\r\n                            loading ? <LoadingBox></LoadingBox>\r\n                                :\r\n                                error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                                    : (\r\n                                        <div>\r\n\r\n                                            {categorySelect && (<>\r\n                                                <Select\r\n                                                    className=\"select\"\r\n                                                    placeholder=\"Categorias\"\r\n                                                    onChange={e => handlerCategory(e.value)}\r\n                                                    defaultValue={categorySelect}\r\n                                                    options={categories} />\r\n                                                <AddIcon\r\n                                                    onClick={() => setShowNewCateogry(!showNewCategory)}\r\n                                                    className=\"fas fa-plus-circle\"\r\n                                                />\r\n                                            </>)}\r\n                                            {showNewCategory && <SubForm showNew={setShowNewCateogry} type={'category'} />}\r\n                                        </div>\r\n                                    )}\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            loadingSubcategory ? <div\r\n                                className=\"new-category\"\r\n                                onClick={() => setShowNewCateogry(!showNewCategory)}\r\n                            ></div>\r\n                                :\r\n                                errorSubcategory ? <MessageBox variant=\"danger\">{errorSubcategory}</MessageBox>\r\n                                    : (\r\n                                        <div>\r\n                                            <Select\r\n                                                className=\"select\"\r\n                                                placeholder=\"Subcategorias\"\r\n                                                onChange={e => setSubcategory(e.value)}\r\n                                                defaultValue={subcategories[0]}\r\n                                                options={subcategories}\r\n                                            />\r\n                                            <AddIcon\r\n                                                onClick={() => setShowNewSubcategory(!showNewSubcategory)}\r\n                                                className=\"fas fa-plus-circle\"\r\n                                            />\r\n                                            {showNewSubcategory && <SubForm showNew={setShowNewSubcategory} type={'subcategory'} categoryId={category} />}\r\n                                        </div>\r\n                                    )}\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            type=\"number\"\r\n                            onChange={e => setValue(e.target.value)}\r\n                            placeholder=\"Valor\">\r\n                        </input>\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            type=\"text\"\r\n                            onChange={e => setDescription(e.target.value)}\r\n                            placeholder=\"Descripcion\">\r\n                        </input>\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            value={today}\r\n                            type=\"date\"\r\n                            onChange={e => handletDate(e.target.value)}\r\n                            placeholder=\"Fecha\">\r\n                        </input>\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            loadingSuccess ? <LoadingBox />\r\n                                : (\r\n                                    <button className=\"btn secundary\" type=\"submit\">Crear</button>\r\n                                )\r\n                        }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Drawer>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Select from 'react-select';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport { createAlert, listAlerts, listTypeAlerts, updateAlertActive } from '../../actions/alertActions';\r\n\r\nexport default function AlertCreateScreen(props) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { editAlert, edit, state, setState } = props;\r\n  const [days, setDays] = useState([]);\r\n  const [selectDay, setSelectDay] = useState('');\r\n  const [selectType, setSelectType] = useState('');\r\n  const [day, setDay] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [submit, setSubmit] = useState(false);\r\n\r\n  const alertCreate = useSelector(state => state.alertCreate);\r\n  const { alert } = alertCreate;\r\n\r\n  const alertActiveUpdate = useSelector(state => state.alertActiveUpdate);\r\n  const { alert: alertSuccess } = alertActiveUpdate;\r\n\r\n  const alertTypeList = useSelector(state => state.alertTypeList);\r\n  const { typeAlerts, loading: loadingTypes } = alertTypeList;\r\n\r\n    const toggleDrawer = (open) => {\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handleClose = useCallback((open) => {\r\n        if(state.right)\r\n            setState({ ...state, right: open });\r\n    },[setState, state]);\r\n\r\n  const handleSubmit = (e) => { \r\n        e.preventDefault();\r\n        setSubmit(true);\r\n        if (edit) {\r\n            dispatch(updateAlertActive({\r\n                date: day,\r\n                alert: title,\r\n                message,\r\n                id:editAlert.id,\r\n                active:editAlert.active\r\n            }));\r\n        } else {\r\n            dispatch(createAlert({date: day, alert: title, message}));\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (days.length < 1) {\r\n            let days = [];\r\n            [...Array(31).keys()].map(item => days.push({value: item + 1, label: item + 1}));\r\n            setDays(days);\r\n        }\r\n    },[days]);\r\n\r\n    useEffect(()=>{\r\n        dispatch(listTypeAlerts());\r\n    }, [dispatch])\r\n\r\n    useEffect(()=>{\r\n        if ((alert && submit) || (alertSuccess && submit)){\r\n            handleClose(false);\r\n            dispatch(listAlerts());\r\n        }\r\n    },[alert, submit, dispatch, alertSuccess, handleClose]);\r\n\r\n    useEffect(()=>{\r\n        if (editAlert && edit) {\r\n            const type = typeAlerts.filter(type => type.label === editAlert.priority)\r\n            setTitle(editAlert.alert);\r\n            setMessage(editAlert.message);\r\n            setSelectDay({label: editAlert.date, value:editAlert.date});\r\n            setSelectType(type);\r\n            setDay(editAlert.date); \r\n        } else {\r\n            setTitle('');\r\n            setMessage('');\r\n            setSelectDay({ label: 1, value: 1 }); \r\n            setDay(1); \r\n            setSelectType({});\r\n        }\r\n    },[editAlert, edit, typeAlerts]);\r\n\r\n  return (\r\n\r\n    <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n        <div className=\"drawer-header\">\r\n            <ArrowBackIcon id=\"close\" className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n        </div>\r\n        <div className=\"drawer-body\">\r\n        <form className=\"form-modal\" onSubmit={handleSubmit}>\r\n                <div className=\"form-title\">\r\n                    <div>Registar Alerta</div>\r\n                    <Divider />\r\n                </div>\r\n                <div>\r\n                <label>Prioridad</label>\r\n                {\r\n                    loadingTypes ? <LoadingBox />\r\n                    :\r\n                    (\r\n                    <Select\r\n                        placeholder=\"Prioridad de la alerta\"\r\n                        onChange={e => setTitle(e.value)}\r\n                        defaultValue={selectType}\r\n                        options={typeAlerts}\r\n                    />\r\n                    )\r\n                }\r\n\r\n            </div>\r\n            <div>\r\n                <label>Descripcíon alerta</label>\r\n                <textarea\r\n                    type=\"text\"\r\n                    value={message}\r\n                    onChange={e => setMessage(e.target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label>Día de envío</label>\r\n                <Select\r\n                    placeholder=\"Dia\"\r\n                    onChange={e => setDay(e.value)}\r\n                    defaultValue={selectDay}\r\n                    options={days}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button onClick={() => toggleDrawer(false)} className=\"btn secundary\" type=\"submit\">{edit ? 'Actualizar' : 'Crear'}</button>\r\n            </div>\r\n\r\n        </form>\r\n        </div>\r\n    </Drawer>\r\n  );\r\n}\r\n","export const ACTIVITY_CREATE_REQUEST = \"ACTIVITY_CREATE_REQUEST\";\r\nexport const ACTIVITY_CREATE_SUCCESS = \"ACTIVITY_CREATE_SUCCESS\";\r\nexport const ACTIVITY_CREATE_FAIL = \"ACTIVITY_CREATE_FAIL\";\r\n\r\nexport const ACTIVITY_LIST_REQUEST = \"ACTIVITY_LIST_REQUEST\";\r\nexport const ACTIVITY_LIST_SUCCESS = \"ACTIVITY_LIST_SUCCESS\";\r\nexport const ACTIVITY_LIST_FAIL = \"ACTIVITY_LIST_FAIL\";","import { Avatar } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FloatButton from '../../components/FloatButton';\r\nimport { listActivities } from '../../actions/activityActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport MessageBox from '../../components/MessageBox';\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result  = [...list];\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n    return result;\r\n}\r\nexport default function ActivityScreen(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const activitiesList = useSelector(state => state.activitiesList);\r\n    const { loading, activities: activitiesLoad, error } = activitiesList;\r\n\r\n    const [activities, setActivities] = useState();\r\n\r\n    useEffect(()=>{\r\n        if(!activitiesLoad) {\r\n            dispatch(listActivities());\r\n        } else {\r\n            setActivities(activitiesLoad)\r\n        }\r\n    }, [dispatch, activitiesLoad]);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                loading ? <LoadingBox /> \r\n                :\r\n                error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                :\r\n                activities && (\r\n                    <DragDropContext onDragEnd={(result) => {\r\n                        const { source, destination } = result;\r\n                        if (!destination) return;\r\n                        if(source.index === destination.index) return;\r\n                        setActivities(prevActivities => reorder(prevActivities, source.index, destination.index));\r\n                    }}>\r\n                        <div className=\"dragger-title\">Actividades</div>\r\n                        <Droppable droppableId=\"activities\">\r\n                            {(droppableProvided) => (\r\n                                <div \r\n                                    {...droppableProvided.droppableProps}\r\n                                    ref={droppableProvided.innerRef}\r\n                                >\r\n                                    {activities.map((item, index) => (\r\n                                            <Draggable key={item.activityId.toString()} draggableId={item.activityId.toString()} index={index}>\r\n                                                {(draggableProvided) => (\r\n                                                    <div className=\"dragger-container\"\r\n                                                        {...draggableProvided.draggableProps}\r\n                                                        ref={draggableProvided.innerRef}\r\n                                                        {...draggableProvided.dragHandleProps}\r\n                                                    >\r\n                                                        <Avatar className={`avatar-dragger-${item.activity.typeAlert}`}>\r\n                                                            {item.activity.charAt(0)}\r\n                                                        </Avatar>\r\n        \r\n                                                        <div>\r\n                                                            {item.activity}\r\n                                                        </div>\r\n                                                        \r\n                                                        <div>\r\n                                                            <DeleteIcon />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n                                            </Draggable>\r\n                                            \r\n                                    ))}\r\n                                    {droppableProvided.placeholder}\r\n                                </div>\r\n                            )}\r\n        \r\n                        </Droppable>\r\n                    </DragDropContext>\r\n                )\r\n            }\r\n\r\n            <FloatButton props={props} />\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\nimport { ACTIVITY_CREATE_REQUEST, ACTIVITY_CREATE_SUCCESS, ACTIVITY_CREATE_FAIL, ACTIVITY_LIST_REQUEST, ACTIVITY_LIST_FAIL, ACTIVITY_LIST_SUCCESS } from '../constants/activityConstants';\r\n\r\nexport const createActivity = (activity, date) => async (dispatch, useState) => {\r\n    dispatch({ type: ACTIVITY_CREATE_REQUEST });\r\n    const { userSignin: { userInfo }} = useState();\r\n    try {\r\n        const { data } = await axios.post('/api/activities', { activity, date, userId: userInfo.id });\r\n        dispatch({ type: ACTIVITY_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ACTIVITY_CREATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });  \r\n    }\r\n}\r\n\r\nexport const listActivities = () => async (dispatch, useState) => {\r\n    dispatch({ type: ACTIVITY_LIST_REQUEST });\r\n    const { userSignin: { userInfo }} = useState();\r\n    try {\r\n        const { data } = await axios.get(`/api/activities/${userInfo.id}`);\r\n        dispatch({ type: ACTIVITY_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ACTIVITY_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });  \r\n    }\r\n}","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MessageBox from '../../components/MessageBox';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport Select from 'react-select';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listCategories } from '../../actions/categoryActions';\r\nimport { createExpense, listExpenses } from '../../actions/expenseActions';\r\nimport { listSubcategories } from '../../actions/subcategoriesActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SubForm from '../../components/SubForm';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Link } from 'react-router-dom';\r\nimport { createActivity } from '../../actions/activityActions';\r\n\r\nexport default function ActivityCreateScreen(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [state, setState] = useState({ right: true });\r\n    const [activity, setActivity] = useState('');\r\n    const [date, setDate] = useState('');\r\n\r\n    const toggleDrawer = (open) => {\r\n        props.history.push('/activities');\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handlerSubmit = (e) => {\r\n        dispatch(createActivity(activity, date));\r\n    }\r\n\r\n    return (\r\n        <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n            <div className=\"drawer-header\">\r\n                <ArrowBackIcon className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n            </div>\r\n            <div className=\"drawer-body\">\r\n                <div>Crear actividad</div>\r\n                <form className=\"form-modal\" onSubmit={handlerSubmit}>\r\n                    <div>\r\n                        <input\r\n                            type=\"text\"\r\n                            onChange={e => setActivity(e.target.value)}\r\n                            placeholder=\"Actividad\">\r\n                        </input>\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            type=\"date\"\r\n                            onChange={e => setDate(e.target.value)}\r\n                            placeholder=\"Fecha\">\r\n                        </input>\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn secundary\" type=\"submit\">Crear</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Drawer>\r\n    )\r\n}\r\n","export const ENTRY_CREATE_REQUEST = 'ENTRY_CREATE_REQUEST';\r\nexport const ENTRY_CREATE_SUCCESS = 'ENTRY_CREATE_SUCCESS';\r\nexport const ENTRY_CREATE_FAIL = 'ENTRY_CREATE_FAIL';\r\n\r\nexport const ENTRY_GET_REQUEST = 'ENTRY_GET_REQUEST';\r\nexport const ENTRY_GET_SUCCESS = 'ENTRY_GET_SUCCESS';\r\nexport const ENTRY_GET_FAIL = 'ENTRY_GET_FAIL';","import axios from \"axios\"\r\nimport { ENTRY_CREATE_FAIL, ENTRY_CREATE_REQUEST, ENTRY_CREATE_SUCCESS, ENTRY_GET_FAIL, ENTRY_GET_REQUEST, ENTRY_GET_SUCCESS } from \"../constants/entryConstants\"\r\n\r\nexport const createEntry = (entry) => async (dispatch, getState) => {\r\n    dispatch({ type: ENTRY_CREATE_REQUEST })\r\n    const { userSignin: { userInfo } } = getState()\r\n    try {\r\n        const { data } = await axios.post('/api/entries/',\r\n            { ...entry, userUserId: userInfo.id }\r\n        )\r\n        dispatch({ type: ENTRY_CREATE_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ENTRY_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.response\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const listEntries = () => async (dispatch, getState) => {\r\n    dispatch({ type: ENTRY_GET_REQUEST })\r\n    const { userSignin: { userInfo } } = getState()\r\n    try {\r\n        const { data } = await axios.get(`/api/entries/${userInfo.id}`)\r\n        dispatch({ type: ENTRY_GET_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ENTRY_GET_FAIL,\r\n            payload:\r\n                error.response && error.response.data.response\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n}","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listEntries } from \"../../actions/entryActions\";\r\nimport { getMonths } from \"../../actions/utilsActions\";\r\nimport { convertValue } from \"../../common/utils\";\r\nimport FloatButton from \"../../components/FloatButton\";\r\nimport MessageBox from \"../../components/MessageBox\";\r\nimport LoadingBox from \"../../components/utils/LoadingBox\";\r\n\r\nexport default function EntryScreen(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const entriesList = useSelector((state) => state.entriesList);\r\n  const { entries, loading, error } = entriesList;\r\n\r\n  const monthsGet = useSelector((state) => state.monthsGet);\r\n  const { months } = monthsGet;\r\n\r\n  const getMonth = (number) => {\r\n    if (months)\r\n      return months.filter((month) => month.value === number)[0].label;\r\n  };\r\n\r\n  const handleRedirect = (entryId) => {\r\n    props.history.push(`/next-expenses/${entryId}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!entries) dispatch(listEntries());\r\n  }, [entries, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!months) dispatch(getMonths());\r\n  }, [months, dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <LoadingBox />\r\n      ) : error ? (\r\n        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n      ) : (\r\n        entries &&\r\n        entries.map((entry) => (\r\n          <div\r\n            key={entry.entryId}\r\n            className=\"entry-card\"\r\n            onClick={() => handleRedirect(entry.entryId)}\r\n          >\r\n            <div className=\"entry-card-title\">\r\n              <div className=\"entry-card-title-content\">\r\n                {getMonth(entry.date.split(\"-\")[0])}\r\n              </div>\r\n            </div>\r\n            <div className=\"entry-card-info\">\r\n              <div>\r\n                <div>\r\n                  {convertValue(\r\n                    entry.nextExpense.reduce((a, b) => a + parseInt(b.value), 0)\r\n                  )}\r\n                </div>\r\n                <div>Gasto estimado</div>\r\n              </div>\r\n              <div>\r\n                <div>{convertValue(entry.entry)}</div>\r\n                <div>Ingresos</div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div class=\"data-card-circle\"></div>\r\n            </div>\r\n            <div>\r\n              <div class=\"data-card-circle-2\"></div>\r\n            </div>\r\n            <div>\r\n              <div class=\"data-card-circle-3\"></div>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n      <FloatButton props={props} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MessageBox from '../../components/MessageBox';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SubForm from '../../components/SubForm';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Link } from 'react-router-dom';\r\nimport { createEntry, listEntries } from '../../actions/entryActions';\r\nimport { getMonths } from '../../actions/utilsActions';\r\n\r\nexport default function EntryCreateScreen(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const monthsGet = useSelector(state => state.monthsGet);\r\n    const { months } = monthsGet;\r\n\r\n    const entryCreate = useSelector(state => state.entryCreate);\r\n    const { entry, loading: loadingCreate } = entryCreate;\r\n\r\n    const [value, setValue] = useState();\r\n    const [month, setMonth] = useState();\r\n    const [actualMonth, setActualMonth] = useState();\r\n\r\n    const [submit, setSubmit] = useState(false);\r\n    const [state, setState] = useState({ right: true });\r\n\r\n    const toggleDrawer = (open) => {\r\n        props.history.push('/');\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handleClose = useCallback((open) => {\r\n        if (state.right)\r\n            props.history.push('/entries');\r\n        setState({ ...state, right: open });\r\n    }, [setState, state, props]);\r\n\r\n    const handlerSubmit = (e) => {\r\n        e.preventDefault();\r\n        const obj = {\r\n            date: `${month}-${getDate().year}`,\r\n            entry: value,\r\n        }\r\n        setSubmit(true);\r\n        dispatch(createEntry(obj));\r\n    }\r\n\r\n    const getDate = () => {\r\n        let newDate = new Date()\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n\r\n        month = month < 10 ? `0${month}` : `${month}`;\r\n        return ({ month: month, year: year });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (months) {\r\n            setActualMonth(months.filter(month => month.value === getDate().month)[0])\r\n        } else {\r\n            dispatch(getMonths());\r\n        }\r\n    }, [months, dispatch])\r\n\r\n    useEffect(() => {\r\n        if (actualMonth) setMonth(actualMonth.value)\r\n    }, [actualMonth])\r\n\r\n    useEffect(() => {\r\n        if (entry && submit) {\r\n            dispatch(listEntries());\r\n            handleClose(false);\r\n        }\r\n    }, [entry, dispatch, submit, handleClose]);\r\n\r\n    return (\r\n        <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n            <div className=\"drawer-header\">\r\n                <Link to=\"/entries\">\r\n                    <ArrowBackIcon className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n                </Link>\r\n            </div>\r\n            <div className=\"drawer-body\">\r\n                <form className=\"form-modal\" onSubmit={handlerSubmit}>\r\n                    {/* {errorCreate && <MessageBox variant=\"danger\">{errorCreate}</MessageBox>} */}\r\n                    <div className=\"form-title\">\r\n                        <div>Calcular mes</div>\r\n                        <Divider />\r\n                    </div>\r\n\r\n                    <div>\r\n                        {\r\n                            months && actualMonth && (\r\n                                <Select\r\n                                    placeholder=\"Seleccionar mes\"\r\n                                    onChange={e => setMonth(e.value)}\r\n                                    defaultValue={actualMonth}\r\n                                    options={months}\r\n                                />\r\n                            )\r\n                        }\r\n\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            type=\"number\"\r\n                            onChange={e => setValue(e.target.value)}\r\n                            placeholder=\"Ingreso total mes\">\r\n                        </input>\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            loadingCreate ? <LoadingBox /> : (<button className=\"btn secundary\" type=\"submit\">Crear</button>)\r\n                        }\r\n\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Drawer>\r\n    );\r\n}\r\n","export const NEXT_EXPENSE_CREATE_REQUEST = 'NEXT_EXPENSE_CREATE_REQUEST';\r\nexport const NEXT_EXPENSE_CREATE_SUCCESS = 'NEXT_EXPENSE_CREATE_SUCCESS';\r\nexport const NEXT_EXPENSE_CREATE_FAIL = 'NEXT_EXPENSE_CREATE_FAIL';\r\n\r\nexport const NEXT_EXPENSE_GET_REQUEST = 'NEXT_EXPENSE_GET_REQUEST';\r\nexport const NEXT_EXPENSE_GET_SUCCESS = 'NEXT_EXPENSE_GET_SUCCESS';\r\nexport const NEXT_EXPENSE_GET_FAIL = 'NEXT_EXPENSE_GET_FAIL';\r\n\r\nexport const NEXT_EXPENSE_UPDATE_REQUEST = 'NEXT_EXPENSE_UPDATE_REQUEST';\r\nexport const NEXT_EXPENSE_UPDATE_SUCCESS = 'NEXT_EXPENSE_UPDATE_SUCCESS';\r\nexport const NEXT_EXPENSE_UPDATE_FAIL = 'NEXT_EXPENSE_UPDATE_FAIL';","import axios from \"axios\"\r\nimport { NEXT_EXPENSE_CREATE_FAIL, NEXT_EXPENSE_CREATE_REQUEST, NEXT_EXPENSE_CREATE_SUCCESS, NEXT_EXPENSE_GET_FAIL, NEXT_EXPENSE_GET_REQUEST, NEXT_EXPENSE_GET_SUCCESS, NEXT_EXPENSE_UPDATE_FAIL, NEXT_EXPENSE_UPDATE_REQUEST, NEXT_EXPENSE_UPDATE_SUCCESS } from \"../constants/nextExpenseConstants\"\r\n\r\nexport const createNextExpense = (nextExpense) => async (dispatch) => {\r\n    dispatch({ type: NEXT_EXPENSE_CREATE_REQUEST })\r\n    try {\r\n        const { data } = await axios.post('/api/next-expenses/',\r\n            nextExpense\r\n        )\r\n        dispatch({ type: NEXT_EXPENSE_CREATE_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEXT_EXPENSE_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.response\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const listnextExpenses = (entryId) => async (dispatch, getState) => {\r\n    dispatch({ type: NEXT_EXPENSE_GET_REQUEST })\r\n    try {\r\n        const { data } = await axios.get(`/api/next-expenses/${entryId}`)\r\n        dispatch({ type: NEXT_EXPENSE_GET_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEXT_EXPENSE_GET_FAIL,\r\n            payload:\r\n                error.response && error.response.data.response\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateNextExpense = (nextExpenseId, check) => (dispatch) => {\r\n    dispatch({ type: NEXT_EXPENSE_UPDATE_REQUEST })\r\n\r\n    try {\r\n        const { data } = axios.put(`/api/next-expenses/${nextExpenseId}`, {\r\n            check: check\r\n        })\r\n        dispatch({ type: NEXT_EXPENSE_UPDATE_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEXT_EXPENSE_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.response\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listnextExpenses, updateNextExpense } from '../../actions/nextExpenseActions';\r\nimport { convertValue } from '../../common/utils';\r\nimport FloatButton from '../../components/FloatButton';\r\nimport MessageBox from '../../components/MessageBox';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\n\r\nexport default function NextExpenseScreen(props) {\r\n\r\n  const dispatch = useDispatch()\r\n  const entryId = props.match.params.id\r\n\r\n  const [estimated, setEstimated] = useState();\r\n  const [confirmed, setConfirmed] = useState();\r\n\r\n  const nextExpensesList = useSelector(state => state.nextExpensesList)\r\n  const { nextExpenses, loading, error } = nextExpensesList\r\n\r\n  const handleNextExpense = (nextExpenseId, check) => {\r\n    dispatch(updateNextExpense(nextExpenseId, check))\r\n    dispatch(listnextExpenses(entryId))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!nextExpenses) {\r\n      dispatch(listnextExpenses(entryId))\r\n    }\r\n  }, [nextExpenses, entryId, dispatch])\r\n\r\n  useEffect(() => {\r\n    if (nextExpenses) {\r\n      setEstimated(nextExpenses.reduce((a, c) => a + parseInt(c.value), 0))\r\n      setConfirmed(nextExpenses.reduce((a, c) => {\r\n        if (c.check)\r\n          a += parseInt(c.value);\r\n        return a\r\n      }, 0))\r\n    }\r\n\r\n  }, [nextExpenses])\r\n\r\n  useEffect(() => {\r\n    dispatch(listnextExpenses(entryId))\r\n  }, [entryId, dispatch])\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        loading ? <LoadingBox /> :\r\n          error ? <MessageBox variant=\"danger\">{error}</MessageBox> :\r\n            nextExpenses &&\r\n            ( \r\n              <div className=\"next-expense-content\">\r\n                <table className=\"next-expense-table\">\r\n                  <tr>\r\n                    <th>Gasto</th>\r\n                    <th>Valor</th>\r\n                  </tr>\r\n                  {\r\n                    nextExpenses.map(nextExpense => (\r\n                      <tr className={nextExpense.check && \"next-expense-table-confirmated\"} onClick={() => handleNextExpense(nextExpense.nextExpenseId, !nextExpense.check)}>\r\n                        <td>{nextExpense.name}</td>\r\n                        <td>{convertValue(nextExpense.value)}</td>\r\n                      </tr>\r\n                    ))\r\n                  }\r\n                  <tr className='next-expense-table-estimated'>\r\n                    <td ><strong>Estimado</strong></td>\r\n                    <td><strong>{convertValue(estimated)}</strong></td>\r\n                  </tr>\r\n                  <tr className=\"next-expense-table-confirmed\">\r\n                    <td><strong>Confirmado</strong></td>\r\n                    <td><strong>{convertValue(confirmed)}</strong></td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            )\r\n            // :\r\n            // <MessageBox variant=\"danger\">No hay gastos registrados</MessageBox>\r\n      }\r\n      <FloatButton props={props} />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport LoadingBox from \"../../components/utils/LoadingBox\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  createNextExpense,\r\n  listnextExpenses,\r\n} from \"../../actions/nextExpenseActions\";\r\n\r\nexport default function NextExpenseCreateScreen(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const nextExpenseCreate = useSelector((state) => state.nextExpenseCreate);\r\n  const { nextExpense, loading: loadingCreate } = nextExpenseCreate;\r\n\r\n  const [name, setName] = useState();\r\n  const [value, setValue] = useState();\r\n\r\n  const [submit, setSubmit] = useState(false);\r\n  const [state, setState] = useState({ right: true });\r\n\r\n  const toggleDrawer = (open) => {\r\n    props.history.push(\"/next-expenses\");\r\n    setState({ ...state, right: open });\r\n  };\r\n\r\n  const handleClose = useCallback(\r\n    (open) => {\r\n      if (state.right) props.history.push(`/next-expenses/${1}`);\r\n      setState({ ...state, right: open });\r\n    },\r\n    [setState, state, props]\r\n  );\r\n\r\n  const handlerSubmit = (e) => {\r\n    e.preventDefault();\r\n    const obj = {\r\n      value,\r\n      name,\r\n      entryEntryId: 1,\r\n    };\r\n    setSubmit(true);\r\n    dispatch(createNextExpense(obj));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (nextExpense && submit) {\r\n      dispatch(listnextExpenses(1));\r\n      handleClose(false);\r\n    }\r\n  }, [nextExpense, dispatch, submit, handleClose]);\r\n\r\n  return (\r\n    <Drawer\r\n      anchor={\"right\"}\r\n      open={state.right}\r\n      onClose={() => toggleDrawer(false)}\r\n    >\r\n      <div className=\"drawer-header\">\r\n        <Link to=\"/entries\">\r\n          <ArrowBackIcon\r\n            className=\"drawer-back\"\r\n            onClick={() => toggleDrawer(false)}\r\n          />\r\n        </Link>\r\n      </div>\r\n      <div className=\"drawer-body\">\r\n        <form className=\"form-modal\" onSubmit={handlerSubmit}>\r\n          <div className=\"form-title\">\r\n            <div>Ingresar gasto</div>\r\n            <Divider />\r\n          </div>\r\n\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              onChange={(e) => setName(e.target.value)}\r\n              placeholder=\"Nombre del gasto\"\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"number\"\r\n              onChange={(e) => setValue(e.target.value)}\r\n              placeholder=\"Valor\"\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            {loadingCreate ? (\r\n              <LoadingBox />\r\n            ) : (\r\n              <button className=\"btn secundary\" type=\"submit\">\r\n                Crear\r\n              </button>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Drawer>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\r\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\r\nimport UpdateIcon from \"@material-ui/icons/Update\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport { Link, useLocation  } from \"react-router-dom\";\r\n\r\nconst dataList = [\r\n  {\r\n    icon: 'AttachMoneyIcon',\r\n    url: '/income'\r\n  },\r\n  {\r\n    icon: 'UpdateIcon',\r\n    url: '/entries'\r\n  },\r\n  {\r\n    icon: 'HomeIcon',\r\n    url: '/'\r\n  },\r\n  {\r\n    icon: 'NotificationsIcon',\r\n    url: '/alerts'\r\n  },\r\n  {\r\n    icon: 'FormatListBulletedIcon',\r\n    url: '/activities'\r\n  }\r\n]\r\n\r\nexport default function SidebarMenu() {\r\n  const sampleLocation = useLocation();\r\n\r\n  useEffect(() => {\r\n    console.log(sampleLocation.pathname)\r\n  }, [sampleLocation]);\r\n\r\n  return (\r\n    <div className=\"sidebar-menu-container\">\r\n      <ul className=\"sidebar-menu\">\r\n        <li className={ sampleLocation.pathname === '/income' && 'sidebar-menu-selected'}>\r\n          <Link to=\"/income\">\r\n            <AttachMoneyIcon />\r\n          </Link>\r\n        </li>\r\n        <li className={ sampleLocation.pathname === '/entries' && 'sidebar-menu-selected'}>\r\n          <Link to=\"/entries\">\r\n            <UpdateIcon />\r\n          </Link>\r\n        </li>\r\n        <li className={ sampleLocation.pathname === '/' && 'sidebar-menu-selected'}>\r\n          <Link to=\"/\">\r\n            <HomeIcon />\r\n          </Link>\r\n        </li>\r\n        <li className={ sampleLocation.pathname === '/alerts' && 'sidebar-menu-selected'}>\r\n          <Link to=\"/alerts\">\r\n            <NotificationsIcon />\r\n          </Link>\r\n        </li>\r\n        <li className={ sampleLocation.pathname === '/activities' && 'sidebar-menu-selected'}>\r\n          <Link to=\"/activities\">\r\n            <FormatListBulletedIcon />\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import { Route, Switch, useLocation, HashRouter } from 'react-router-dom';\nimport AlertScreen from './screens/Alert/AlertScreen';\nimport ChartScreen from './screens/ChartScreen';\nimport ExpenseScreen from './screens/Expense/ExpenseScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport LoginScreen from './screens/User/LoginScreen';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport ProfileScreen from './screens/User/ProfileScreen';\nimport RegisterScreen from './screens/User/RegisterScreen';\nimport ExpenseCreateScreen from './screens/Expense/ExpenseCreateScreen';\nimport AlertCreateScreen from './screens/Alert/AlertCreateScreen';\nimport ActivityScreen from './screens/Activity/ActivityScreen';\nimport ActivityCreateScreen from './screens/Activity/ActivityCreateScreen';\nimport EntryScreen from './screens/Entry/EntryScreen';\nimport EntryCreateScreen from './screens/Entry/EntryCreateScreen';\nimport NextExpenseScreen from './screens/nextExpense/NextExpenseScreen';\nimport NextExpenseCreateScreen from './screens/nextExpense/NextExpenseCreateScreen';\nimport SidebarMenu from './components/SidebarMenu';\n\nfunction App() {\n\n  return (\n    <HashRouter>\n        <SidebarMenu />\n        <Switch>\n          <Route path=\"*\">\n            <RouteGroup />\n          </Route>\n        </Switch>\n    </HashRouter>\n  );\n}\n\nfunction RouteGroup() {\n\n  let location = useLocation();\n\n  return (\n    <TransitionGroup>\n      <CSSTransition\n        key={location.key}\n        classNames=\"fade\"\n        timeout={300}\n      >\n        <Switch location={location}>\n          <Route path=\"/\" component={HomeScreen} exact></Route>\n\n          <Route path=\"/login\" component={LoginScreen}></Route>\n          <Route path=\"/register\" component={RegisterScreen}></Route>\n          <Route path=\"/profile\" component={ProfileScreen}></Route>\n          <Route path=\"/chart\" component={ChartScreen}></Route>\n\n          <Route path=\"/expenses/:id\" component={ExpenseScreen}></Route>\n          <Route path=\"/expenses-create\" component={ExpenseCreateScreen} exact></Route>\n\n          <Route path=\"/activities\" component={ActivityScreen}></Route>\n          <Route path=\"/activities-create\" component={ActivityCreateScreen}></Route>\n\n          <Route path=\"/alerts\" component={AlertScreen}></Route>\n          <Route path=\"/alerts-create\" component={AlertCreateScreen}></Route>\n\n          <Route path=\"/entries\" component={EntryScreen}></Route>\n          <Route path=\"/entries-create\" component={EntryCreateScreen}></Route>\n\n          <Route path=\"/next-expenses/:id\" component={NextExpenseScreen}></Route>\n          <Route path=\"/next-expenses-create\" component={NextExpenseCreateScreen}></Route>\n        </Switch>\n      </CSSTransition>\n    </TransitionGroup>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, createStore, compose, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {\r\n  createActivityReducer,\r\n  listActivityReducer,\r\n} from \"./reducers/activityReducers\";\r\nimport {\r\n  createAlertReducer,\r\n  listAlertsReducer,\r\n  listTypeAlertsReducer,\r\n  updateAlertReducer,\r\n  deleteAlertReducer,\r\n} from \"./reducers/alertReducers\";\r\nimport {\r\n  createCategoryReducers,\r\n  listCategoriesReducer,\r\n} from \"./reducers/categoryReducers\";\r\nimport {\r\n  createEntryReducer,\r\n  listEntriesReducer,\r\n} from \"./reducers/entryReducer\";\r\nimport {\r\n  createExpenseReducer,\r\n  deleteExpenseReducer,\r\n  listExpenseReducer,\r\n  listExpensesByDateReducer,\r\n  listExpensesReducer,\r\n} from \"./reducers/expenseReducers\";\r\nimport {\r\n  createNextExpenseReducer,\r\n  listNextExpensesReducer,\r\n  updateNextExpenseReducer,\r\n} from \"./reducers/nextExpenseReducer\";\r\nimport {\r\n  createSubcategoryReducer,\r\n  listSubcategoriesReducer,\r\n} from \"./reducers/subcategoryReducers\";\r\nimport {\r\n  registerReducer,\r\n  signinReducer,\r\n  suscribeUserReducer,\r\n} from \"./reducers/userReducer\";\r\nimport {\r\n  getMonthsReducer,\r\n  getMonthsStorageReducer,\r\n  setGroupReducer,\r\n  setMonthReducer,\r\n  setNotificationReducer,\r\n  setViewerReducer,\r\n} from \"./reducers/utilsReducers\";\r\n\r\nconst initialState = {\r\n  userSignin: {\r\n    userInfo: localStorage.getItem(\"userInfo\")\r\n      ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n      : null,\r\n  },\r\n  setNotification: {\r\n    notification: localStorage.getItem(\"notification\")\r\n      ? JSON.parse(localStorage.getItem(\"notification\"))\r\n      : null,\r\n  },\r\n  groupSet: {\r\n    group: localStorage.getItem(\"group\")\r\n      ? JSON.parse(localStorage.getItem(\"group\"))\r\n      : null,\r\n  },\r\n  monthsSet: {\r\n    monthsStorage: localStorage.getItem(\"months\")\r\n      ? JSON.parse(localStorage.getItem(\"months\"))\r\n      : null,\r\n  },\r\n  viewerSet: {\r\n    view: localStorage.getItem(\"viewer\")\r\n      ? localStorage.getItem(\"viewer\")\r\n      : null,\r\n  },\r\n};\r\n\r\nconst reducer = combineReducers({\r\n  userSignin: signinReducer,\r\n  register: registerReducer,\r\n  userSuscribe: suscribeUserReducer,\r\n\r\n  expList: listExpenseReducer,\r\n  expenseList: listExpensesReducer,\r\n  expensesByDateList: listExpensesByDateReducer,\r\n  expenseCreate: createExpenseReducer,\r\n  expenseDelete: deleteExpenseReducer,\r\n\r\n  categoryCreate: createCategoryReducers,\r\n  categoriesList: listCategoriesReducer,\r\n\r\n  subcategoriesList: listSubcategoriesReducer,\r\n  subcategoryCreate: createSubcategoryReducer,\r\n\r\n  alertList: listAlertsReducer,\r\n  alertActiveUpdate: updateAlertReducer,\r\n  alertCreate: createAlertReducer,\r\n  alertTypeList: listTypeAlertsReducer,\r\n  alertDelete: deleteAlertReducer,\r\n\r\n  monthsGet: getMonthsReducer,\r\n  setNotification: setNotificationReducer,\r\n  groupSet: setGroupReducer,\r\n  monthsSet: setMonthReducer,\r\n  viewerSet: setViewerReducer,\r\n\r\n  activityCreate: createActivityReducer,\r\n  activitiesList: listActivityReducer,\r\n\r\n  entryCreate: createEntryReducer,\r\n  entriesList: listEntriesReducer,\r\n\r\n  nextExpenseCreate: createNextExpenseReducer,\r\n  nextExpensesList: listNextExpensesReducer,\r\n  nextExpenseUpdate: updateNextExpenseReducer,\r\n});\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeEnhancer(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGIN_FAIL, USER_SIGIN_REQUEST, USER_SIGIN_SUCCESS, USER_SUSCRIBE_FAIL, USER_SUSCRIBE_REQUEST, USER_SUSCRIBE_SUCCESS } from \"../constants/userConstants\";\r\n\r\nexport const signinReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case USER_SIGIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_SIGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload, success:true };\r\n        case USER_SIGIN_FAIL:\r\n            return { loading: false, error: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const registerReducer = (state = { loading:true }, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true };\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, user: action.payload };\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const suscribeUserReducer = (state = { loading: true }, action) => {\r\n    switch (action.type){\r\n        case USER_SUSCRIBE_REQUEST:\r\n            return {loading: true };\r\n        case USER_SUSCRIBE_SUCCESS:\r\n            return { loading: false, suscribe: action.payload };\r\n        case USER_SUSCRIBE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n  EXPENSE_CREATE_FAIL,\r\n  EXPENSE_CREATE_REQUEST,\r\n  EXPENSE_CREATE_SUCCESS,\r\n  EXPENSE_DELETE_FAIL,\r\n  EXPENSE_DELETE_REQUEST,\r\n  EXPENSE_DELETE_SUCCESS,\r\n  EXPENSE_LIST_BY_DATE_FAIL,\r\n  EXPENSE_LIST_BY_DATE_REQUEST,\r\n  EXPENSE_LIST_BY_DATE_SUCCESS,\r\n  EXPENSE_LIST_FAIL,\r\n  EXPENSE_LIST_REQUEST,\r\n  EXPENSE_LIST_SUCCESS,\r\n  EXP_LIST_FAIL,\r\n  EXP_LIST_REQUEST,\r\n  EXP_LIST_SUCCESS,\r\n} from \"../constants/expenseConstants\";\r\n\r\nexport const listExpensesReducer = (state = { loading: true }, action) => {\r\n  switch (action.type) {\r\n    case EXPENSE_LIST_REQUEST:\r\n      return { loading: true };\r\n    case EXPENSE_LIST_SUCCESS:\r\n      return { loading: false, expenses: action.payload };\r\n    case EXPENSE_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const listExpensesByDateReducer = (\r\n  state = { loading: true },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case EXPENSE_LIST_BY_DATE_REQUEST:\r\n      return { loading: true };\r\n    case EXPENSE_LIST_BY_DATE_SUCCESS:\r\n      return { loading: false, expenses: action.payload };\r\n    case EXPENSE_LIST_BY_DATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const listExpenseReducer = (state = { loading: true }, action) => {\r\n  switch (action.type) {\r\n    case EXP_LIST_REQUEST:\r\n      return { loading: true };\r\n    case EXP_LIST_SUCCESS:\r\n      return { loading: false, expense: action.payload };\r\n    case EXP_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createExpenseReducer = (state = { loading: false }, action) => {\r\n  switch (action.type) {\r\n    case EXPENSE_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case EXPENSE_CREATE_SUCCESS:\r\n      return { loading: false, expense: action.payload };\r\n    case EXPENSE_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const deleteExpenseReducer = (state = { loading: false }, action) => {\r\n  switch (action.type) {\r\n    case EXPENSE_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case EXPENSE_DELETE_SUCCESS:\r\n      return { loading: false, expense: action.payload };\r\n    case EXPENSE_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { CATEGORY_CREATE_FAIL, CATEGORY_CREATE_REQUEST, CATEGORY_CREATE_SUCCESS, CATEGORY_LIST_FAIL, CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS } from \"../constants/categoryConstants\";\r\n\r\nexport const createCategoryReducers = (state = {loading: true }, action) => {\r\n    switch (action.type) {\r\n        case CATEGORY_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case CATEGORY_CREATE_SUCCESS:\r\n            return { loading: false, category: action.payload };\r\n        case CATEGORY_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const listCategoriesReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case CATEGORY_LIST_REQUEST:\r\n            return { loading: true };\r\n        case CATEGORY_LIST_SUCCESS:\r\n            return { loading:false, categories: action.payload };\r\n        case CATEGORY_LIST_FAIL:\r\n            return { loading:false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { SUBCATEGORY_CREATE_FAIL, SUBCATEGORY_CREATE_REQUEST, SUBCATEGORY_CREATE_SUCCESS, SUBCATEGORY_LIST_BY_CATEGORY_FAIL, SUBCATEGORY_LIST_BY_CATEGORY_REQUEST, SUBCATEGORY_LIST_BY_CATEGORY_SUCCESS, SUBCATEGORY_LIST_FAIL, SUBCATEGORY_LIST_REQUEST, SUBCATEGORY_LIST_SUCCESS } from \"../constants/subcategoriesConstants\";\r\n\r\nexport const listSubcategoriesReducer = (state = { loading: true }, action) =>{\r\n    switch (action.type) {\r\n        case SUBCATEGORY_LIST_REQUEST:\r\n            return { loading: true };\r\n        case SUBCATEGORY_LIST_SUCCESS:\r\n            return { loading: false, subcategories: action.payload };\r\n        case SUBCATEGORY_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const listSubcategoriesByCategoriesReducer = ( state = { loading: false }, action) => {\r\n    switch (action.type) {\r\n        case SUBCATEGORY_LIST_BY_CATEGORY_REQUEST:\r\n            return { loading: true };\r\n        case SUBCATEGORY_LIST_BY_CATEGORY_SUCCESS:\r\n            return { loading: false, subcategories: action.payload };\r\n        case SUBCATEGORY_LIST_BY_CATEGORY_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    } \r\n}\r\n\r\nexport const createSubcategoryReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case SUBCATEGORY_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case SUBCATEGORY_CREATE_SUCCESS:\r\n            return { loading: false, subcategory: action.payload };\r\n        case SUBCATEGORY_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { ALERT_CREATE_FAIL, ALERT_CREATE_REQUEST, ALERT_CREATE_SUCCESS, ALERT_DELETE_FAIL, ALERT_DELETE_REQUEST, ALERT_DELETE_SUCCESS, ALERT_LIST_FAIL, ALERT_LIST_REQUEST, ALERT_LIST_SUCCESS, ALERT_UPDATE_FAIL, ALERT_UPDATE_REQUEST, ALERT_UPDATE_SUCCESS, TYPE_ALERT_LIST_FAIL, TYPE_ALERT_LIST_REQUEST, TYPE_ALERT_LIST_SUCCESS } from \"../constants/alertConstants\";\r\n\r\nexport const listAlertsReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ALERT_LIST_REQUEST:\r\n            return { loading: true }\r\n        case ALERT_LIST_SUCCESS:\r\n            return { loading: false, alerts: action.payload };\r\n        case ALERT_LIST_FAIL:\r\n            return { loading: false };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const updateAlertReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ALERT_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case ALERT_UPDATE_SUCCESS:\r\n            return { loading: false, alert: action.payload };\r\n        case ALERT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n} \r\n\r\nexport const createAlertReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ALERT_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case ALERT_CREATE_SUCCESS:\r\n            return { loading: false, alert: action.payload };\r\n        case ALERT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const listTypeAlertsReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case TYPE_ALERT_LIST_REQUEST:\r\n            return { loading: true };\r\n        case TYPE_ALERT_LIST_SUCCESS:\r\n            return { loading: false, typeAlerts: action.payload };\r\n        case TYPE_ALERT_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const deleteAlertReducer = ( state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ALERT_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case ALERT_DELETE_SUCCESS:\r\n            return { loading: false, success: action.payload };\r\n        case ALERT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n  GET_MONTHS_FAIL,\r\n  GET_MONTHS_REQUEST,\r\n  GET_MONTHS_SUCCESS,\r\n  SET_GROUP_FAIL,\r\n  SET_GROUP_REQUEST,\r\n  SET_GROUP_SUCCESS,\r\n  SET_MONTH_FAIL,\r\n  SET_MONTH_REQUEST,\r\n  SET_MONTH_SUCCESS,\r\n  SET_NOTIFICATIONS_FAIL,\r\n  SET_NOTIFICATIONS_REQUEST,\r\n  SET_NOTIFICATIONS_SUCCESS,\r\n  SET_VIEWER_FAIL,\r\n  SET_VIEWER_REQUEST,\r\n  SET_VIEWER_SUCCESS,\r\n} from \"../constants/utilsConstants\";\r\n\r\nexport const getMonthsReducer = (state = { loading: true }, action) => {\r\n  switch (action.type) {\r\n    case GET_MONTHS_REQUEST:\r\n      return { loading: true };\r\n    case GET_MONTHS_SUCCESS:\r\n      return { loading: false, months: action.payload };\r\n    case GET_MONTHS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setNotificationReducer = (state = { loading: true }, action) => {\r\n  switch (action.type) {\r\n    case SET_NOTIFICATIONS_REQUEST:\r\n      return { loading: true };\r\n    case SET_NOTIFICATIONS_SUCCESS:\r\n      return { loading: false, notification: [action.payload] };\r\n    case SET_NOTIFICATIONS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setGroupReducer = (state = { loading: true }, action) => {\r\n  switch (action.type) {\r\n    case SET_GROUP_REQUEST:\r\n      return { loading: true };\r\n    case SET_GROUP_SUCCESS:\r\n      return { loading: false, group: action.payload };\r\n    case SET_GROUP_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setMonthReducer = (state = { loading: true }, action) => {\r\n  switch (action.type) {\r\n    case SET_MONTH_REQUEST:\r\n      return { loading: true };\r\n    case SET_MONTH_SUCCESS:\r\n      return { loading: false, monthsStorage: action.payload };\r\n    case SET_MONTH_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setViewerReducer = (state = { loading: true }, action) => {\r\n  switch (action.type) {\r\n    case SET_VIEWER_REQUEST:\r\n      return { loading: true };\r\n    case SET_VIEWER_SUCCESS:\r\n      return { loading: false, view: action.payload };\r\n    case SET_VIEWER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ACTIVITY_CREATE_FAIL, ACTIVITY_CREATE_REQUEST, ACTIVITY_CREATE_SUCCESS, ACTIVITY_LIST_FAIL, ACTIVITY_LIST_REQUEST, ACTIVITY_LIST_SUCCESS } from \"../constants/activityConstants\";\r\n\r\nexport const createActivityReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ACTIVITY_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case ACTIVITY_CREATE_SUCCESS:\r\n            return { loading: false, activity: action.payload };\r\n        case ACTIVITY_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const listActivityReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ACTIVITY_LIST_REQUEST:\r\n            return { loading: true };\r\n        case ACTIVITY_LIST_SUCCESS:\r\n            return { loading: false, activities: action.payload };\r\n        case ACTIVITY_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { ENTRY_CREATE_FAIL, ENTRY_CREATE_REQUEST, ENTRY_CREATE_SUCCESS, ENTRY_GET_FAIL, ENTRY_GET_REQUEST, ENTRY_GET_SUCCESS } from \"../constants/entryConstants\";\r\n\r\nexport const createEntryReducer = (state = { loading: false }, action) => {\r\n    switch (action.type) {\r\n        case ENTRY_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case ENTRY_CREATE_SUCCESS:\r\n            return { loading: false, entry: action.payload }\r\n        case ENTRY_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const listEntriesReducer = (state = { loading: false }, action) => {\r\n    switch (action.type) {\r\n        case ENTRY_GET_REQUEST:\r\n            return { loading: true }\r\n        case ENTRY_GET_SUCCESS:\r\n            return { loading: false, entries: action.payload }\r\n        case ENTRY_GET_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","import { NEXT_EXPENSE_CREATE_FAIL, NEXT_EXPENSE_CREATE_REQUEST, NEXT_EXPENSE_CREATE_SUCCESS, NEXT_EXPENSE_GET_FAIL, NEXT_EXPENSE_GET_REQUEST, NEXT_EXPENSE_GET_SUCCESS, NEXT_EXPENSE_UPDATE_FAIL, NEXT_EXPENSE_UPDATE_REQUEST, NEXT_EXPENSE_UPDATE_SUCCESS } from \"../constants/nextExpenseConstants\"\r\n\r\nexport const createNextExpenseReducer = (state = { loading: false }, action) => {\r\n    switch (action.type) {\r\n        case NEXT_EXPENSE_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case NEXT_EXPENSE_CREATE_SUCCESS:\r\n            return { loading: false, nextExpense: action.payload }\r\n        case NEXT_EXPENSE_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const listNextExpensesReducer = (state = { loading: false }, action) => {\r\n    switch (action.type) {\r\n        case NEXT_EXPENSE_GET_REQUEST:\r\n            return { loading: true }\r\n        case NEXT_EXPENSE_GET_SUCCESS:\r\n            return { loading: false, nextExpenses: action.payload }\r\n        case NEXT_EXPENSE_GET_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const updateNextExpenseReducer = (state = { loading: false }, action) => {\r\n    switch (action.type) {\r\n        case NEXT_EXPENSE_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case NEXT_EXPENSE_UPDATE_SUCCESS:\r\n            return { loading: false, updated: action.payload }\r\n        case NEXT_EXPENSE_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\nimport { subscribeUser } from \"./actions/userActions\";\nimport store from './store';\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nconst PUBLIC_VAPID_KEY = \"BDDk3ILb3FjIjAvTs9PWMoObhChnrBUYwHAsdplom7fePD36G6ZFJumGgSe6C4M3pOpYvFb38XX2wJRIN4B6V_0\";\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n            serviceSubscribeUser(registration);\n          }\n        };\n      };\n\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction serviceSubscribeUser(registration) {\n\n  var serviceWorker;\n\n  if (registration.installing) {\n      serviceWorker = registration.installing;\n  } else if (registration.waiting) {\n      serviceWorker = registration.waiting;\n  } else if (registration.active) {\n      serviceWorker = registration.active;\n  }\n\n  if (serviceWorker) {\n    if (serviceWorker.state === \"activated\") {\n        console.log(\"sw already activated - Do watever needed here\");\n    }\n    serviceWorker.addEventListener(\"statechange\", function(e) {\n      \n        if (e.target.state ===\"activated\") {\n\n          registration.pushManager.subscribe({\n            userVisibleOnly: true,\n            applicationServerKey: PUBLIC_VAPID_KEY\n          })\n          .then((suscription) => {\n            store.dispatch(subscribeUser(suscription));\n          });\n        }\n    });\n  }\n  return <div></div>\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}