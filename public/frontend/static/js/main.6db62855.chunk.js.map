{"version":3,"sources":["common/utils.js","constants/userConstants.js","components/Drawers/DrawerNotification.js","components/common/Sidebar.js","actions/userActions.js","constants/alertConstants.js","actions/alertActions.js","components/MessageBox.js","components/utils/LoadingBox.js","components/Drawers/DrawerAlert.js","components/FloatButton.js","screens/Alert/AlertScreen.js","constants/expenseConstants.js","actions/expenseActions.js","constants/utilsConstants.js","actions/utilsActions.js","screens/ChartScreen.js","screens/Expense/ExpenseScreen.js","components/ExpenseDetails.js","components/Accordion/CategoryDetails.js","components/DateSelect.js","components/FilterBotton.js","screens/HomeScreen.js","screens/User/LoginScreen.js","screens/User/ProfileScreen.js","screens/User/RegisterScreen.js","constants/categoryConstants.js","actions/categoryActions.js","constants/subcategoriesConstants.js","actions/subcategoriesActions.js","components/SubForm.js","screens/Expense/ExpenseCreateScreen.js","screens/Alert/AlertCreateScreen.js","constants/activityConstants.js","screens/Activity/ActivityScreen.js","actions/activityActions.js","screens/Activity/ActivityCreateScreen.js","constants/entryConstants.js","actions/entryActions.js","screens/Entry/EntryScreen.js","screens/Entry/EntryCreateScreen.js","constants/nextExpenseConstants.js","actions/nextExpenseActions.js","screens/nextExpense/NextExpenseScreen.js","screens/nextExpense/NextExpenseCreateScreen.js","App.js","reportWebVitals.js","store.js","reducers/userReducer.js","reducers/expenseReducers.js","reducers/categoryReducers.js","reducers/subcategoryReducers.js","reducers/alertReducers.js","reducers/utilsReducers.js","reducers/activityReducers.js","reducers/entryReducer.js","reducers/nextExpenseReducer.js","serviceWorkerRegistration.js","index.js"],"names":["module","exports","convertValue","value","Intl","NumberFormat","format","convertDate","date","months","month","split","day","result","filter","expense","label","slice","USER_SIGIN_REQUEST","USER_SIGIN_SUCCESS","USER_SIGIN_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_SUSCRIBE_REQUEST","USER_SUSCRIBE_SUCCESS","USER_SUSCRIBE_FAIL","DrawerNotification","props","state","setState","useSelector","setNotification","notification","useState","title","priority","message","notifications","toggleDrawer","open","item","right","Drawer","anchor","onClose","className","id","onClick","map","Avatar","body","useStyles","makeStyles","theme","menuButton","marginRight","spacing","menuContent","position","menuItems","cursor","hide","display","drawer","width","flexShrink","drawerPaper","drawerHeader","alignItems","justifyContent","height","contentHeader","color","background","backgroundSize","button","icon","accountContent","margin","textAlign","accountIcon","fontSize","iconsSidebar","iconsMenu","list","Sidebar","dispatch","useDispatch","classes","useTheme","React","setOpen","anchorEl","setAnchorEl","userInfo","userSignin","handleDrawerClose","handlerSignout","a","localStorage","removeItem","type","window","location","reload","handleClose","option","root","CssBaseline","AppBar","Toolbar","IconButton","edge","clsx","Typography","to","Badge","badgeContent","event","currentTarget","keepMounted","Boolean","MenuItem","paper","direction","List","username","ListItem","ListItemIcon","ListItemText","primary","Divider","ALERT_LIST_REQUEST","ALERT_LIST_SUCCESS","ALERT_LIST_FAIL","ALERT_UPDATE_REQUEST","ALERT_UPDATE_SUCCESS","ALERT_UPDATE_FAIL","ALERT_CREATE_REQUEST","ALERT_CREATE_SUCCESS","ALERT_CREATE_FAIL","ALERT_DELETE_REQUEST","ALERT_DELETE_SUCCESS","ALERT_DELETE_FAIL","TYPE_ALERT_LIST_REQUEST","TYPE_ALERT_LIST_SUCCESS","TYPE_ALERT_LIST_FAIL","listAlerts","getState","axios","get","data","payload","response","name","updateAlertActive","alert","put","createAlert","post","userId","listTypeAlerts","MessageBox","variant","children","LoadingBox","DrawerAlert","editAlert","edit","days","setDays","selectDay","setSelectDay","selectType","setSelectType","setDay","setTitle","setMessage","submit","setSubmit","alertCreate","alertSuccess","alertActiveUpdate","alertTypeList","typeAlerts","loadingTypes","loading","useCallback","useEffect","length","Array","keys","push","onSubmit","e","preventDefault","active","placeholder","onChange","defaultValue","options","target","FloatButton","url","setUrl","path","pathname","includes","AlertScreen","rows","setRows","send","setSend","setEditAlert","setEdit","submitDelete","setSubmitDelete","alertList","error","alerts","success","alertDelete","handleDelete","alertId","Swal","fire","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","isConfirmed","delete","deleted","deleteAlert","typesalert","typeAlert","checked","handleActive","EXPENSE_LIST_REQUEST","EXPENSE_LIST_SUCCESS","EXPENSE_LIST_FAIL","EXPENSE_LIST_BY_DATE_REQUEST","EXPENSE_LIST_BY_DATE_SUCCESS","EXPENSE_LIST_BY_DATE_FAIL","EXP_LIST_REQUEST","EXP_LIST_SUCCESS","EXP_LIST_FAIL","EXPENSE_CREATE_REQUEST","EXPENSE_CREATE_SUCCESS","EXPENSE_CREATE_FAIL","EXPENSE_DELETE_REQUEST","EXPENSE_DELETE_SUCCESS","EXPENSE_DELETE_FAIL","listExpenses","headers","Authorization","token","GET_MONTHS_REQUEST","GET_MONTHS_SUCCESS","GET_MONTHS_FAIL","SET_NOTIFICATIONS_REQUEST","SET_NOTIFICATIONS_SUCCESS","SET_NOTIFICATIONS_FAIL","SET_FILTERS_REQUEST","SET_FILTERS_SUCCESS","SET_FILTERS_FAIL","SET_GROUP_REQUEST","SET_GROUP_SUCCESS","SET_GROUP_FAIL","getMonths","ChartScreen","labels","setLabels","setData","expenses","expensesByDateList","monthsGet","forEach","parseInt","total","datasetIdKey","elements","bar","borderWidth","responsive","plugins","legend","datasets","backgroundColor","ExpenseScreen","expenseId","match","params","expList","expenseDelete","deleteExp","deleteExpense","listExpense","history","category","subcategory","description","ExpenseDetails","prop","toUpperCase","substr","CategoryDetails","expensesProps","setExpenses","handleReorder","reduce","prev","head","categoryId","sub","headSub","subcategoryId","valueSub","exp","console","log","items","sort","b","Accordion","AccordionSummary","AccordionDetails","DateSelect","monthsStorage","monthsGetStorage","handleSelectMonth","i","splice","setItem","JSON","stringify","handlePickMonth","FilterBotton","group","groupSet","handlerButton","filters","HomeScreen","setSuccess","datatable","setDatatable","setMonth","expenseList","columns","field","attributes","parse","getItem","Date","getMonth","getDate","c","class","hover","searchTop","paging","info","searchBottom","LoginScreen","useHistory","setUsername","password","setPassword","userData","ProfileScreen","RegisterScreen","confirmPassword","setConfirmPassword","email","setEmail","setError","CATEGORY_CREATE_REQUEST","CATEGORY_CREATE_SUCCESS","CATEGORY_CREATE_FAIL","CATEGORY_LIST_REQUEST","CATEGORY_LIST_SUCCESS","CATEGORY_LIST_FAIL","listCategories","SUBCATEGORY_LIST_REQUEST","SUBCATEGORY_LIST_SUCCESS","SUBCATEGORY_LIST_FAIL","SUBCATEGORY_CREATE_REQUEST","SUBCATEGORY_CREATE_SUCCESS","SUBCATEGORY_CREATE_FAIL","listSubcategories","SubForm","showNew","categoryCreate","subcategoryCreate","setname","submitCategory","setSubmitCategory","submitSubcategory","setSubmitSubcategory","maxLength","createCategory","createSubcategory","ExpenseCreateScreen","setDescription","setValue","setDate","setCategory","categorySelect","setCategorySelect","setSubcategory","today","setToday","showNewCategory","setShowNewCateogry","showNewSubcategory","setShowNewSubcategory","categoriesList","categories","expenseCreate","loadingSuccess","errorCreate","subcategoriesList","subcategories","loadingSubcategory","errorSubcategory","loadCategories","cat","newDate","year","getFullYear","objExpense","categoryCategoryId","subcategorySubcategoryId","userUserId","errors","Error","createExpense","handlerCategory","handletDate","AlertCreateScreen","ACTIVITY_CREATE_REQUEST","ACTIVITY_CREATE_SUCCESS","ACTIVITY_CREATE_FAIL","ACTIVITY_LIST_REQUEST","ACTIVITY_LIST_SUCCESS","ACTIVITY_LIST_FAIL","ActivityScreen","activitiesList","activitiesLoad","activities","setActivities","onDragEnd","source","destination","index","prevActivities","startIndex","endIndex","removed","reorder","droppableId","droppableProvided","droppableProps","ref","innerRef","draggableId","activityId","toString","draggableProvided","draggableProps","dragHandleProps","activity","charAt","ActivityCreateScreen","setActivity","createActivity","ENTRY_CREATE_REQUEST","ENTRY_CREATE_SUCCESS","ENTRY_CREATE_FAIL","ENTRY_GET_REQUEST","ENTRY_GET_SUCCESS","ENTRY_GET_FAIL","listEntries","EntryScreen","entriesList","entries","number","entry","entryId","nextExpense","EntryCreateScreen","entryCreate","loadingCreate","actualMonth","setActualMonth","obj","createEntry","NEXT_EXPENSE_CREATE_REQUEST","NEXT_EXPENSE_CREATE_SUCCESS","NEXT_EXPENSE_CREATE_FAIL","NEXT_EXPENSE_GET_REQUEST","NEXT_EXPENSE_GET_SUCCESS","NEXT_EXPENSE_GET_FAIL","NEXT_EXPENSE_UPDATE_REQUEST","NEXT_EXPENSE_UPDATE_SUCCESS","NEXT_EXPENSE_UPDATE_FAIL","listnextExpenses","NextExpenseScreen","estimated","setEstimated","confirmed","setConfirmed","nextExpensesList","nextExpenses","handleNextExpense","nextExpenseId","check","updateNextExpense","NextExpenseCreateScreen","nextExpenseCreate","setName","entryEntryId","createNextExpense","RouteGroup","useLocation","TransitionGroup","CSSTransition","classNames","timeout","component","exact","key","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","combineReducers","action","register","user","userSuscribe","suscribe","activityCreate","nextExpenseUpdate","updated","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","isLocalhost","hostname","PUBLIC_VAPID_KEY","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","waiting","addEventListener","pushManager","subscribe","userVisibleOnly","applicationServerKey","suscription","subscribeUser","serviceSubscribeUser","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","fetch","contentType","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.6db62855.chunk.js","sourcesContent":["const convertValue = (value) => {\r\n    return new Intl.NumberFormat().format(value)\r\n}\r\n\r\nconst convertDate = (date, months) => {\r\n    date = date.split('T')[0]\r\n    let month = date.split('-')[1];\r\n    let day = date.split('-')[2];\r\n\r\n    let result = months.filter(expense => expense.value === month);\r\n    let newDate = `${day} ${result[0].label}`;\r\n    return newDate.slice(0, 6).split(' ');\r\n}\r\n\r\nconst splitDate = () => {\r\n    \r\n}\r\n\r\nmodule.exports = { convertValue, convertDate }","export const USER_SIGIN_REQUEST = \"USER_SIGIN_REQUEST\";\r\nexport const USER_SIGIN_SUCCESS = \"USER_SIGIN_SUCCESS\";\r\nexport const USER_SIGIN_FAIL = \"USER_SIGIN_FAIL\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_SUSCRIBE_REQUEST = \"USER_SUSCRIBE_REQUEST\";\r\nexport const USER_SUSCRIBE_SUCCESS = \"USER_SUSCRIBE_SUCCESS\";\r\nexport const USER_SUSCRIBE_FAIL = \"USER_SUSCRIBE_FAIL\";\r\n\r\nexport const USER_SIGNOUT_FAIL = \"USER_SIGNOUT_FAIL\";\r\n\r\nexport const PUBLIC_VAPID_KEY = \"BDDk3ILb3FjIjAvTs9PWMoObhChnrBUYwHAsdplom7fePD36G6ZFJumGgSe6C4M3pOpYvFb38XX2wJRIN4B6V_0\";\r\n","import { Avatar, Drawer } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function DrawerNotification(props) {\r\n\r\n    const { state, setState } = props;\r\n\r\n    const setNotification = useSelector(state => state.setNotification);\r\n    const { notification } = setNotification;\r\n\r\n    const [notifications, setNotifications] = useState([\r\n        {\r\n            title: 'Pilas, parce',\r\n            priority: 'Alta',\r\n            message: 'Pagar el arriendo'\r\n        },\r\n        {\r\n            title: 'Ojo, papi..',\r\n            priority: 'Media',\r\n            message: 'Pagar el internet rapido'\r\n        }\r\n    ]);\r\n\r\n    const toggleDrawer = (open, item) => {\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    // useEffect(()=>{\r\n        // var notifications = [];\r\n        // if(notification){\r\n        //   notification.map(item => notifications.push({\r\n        //       title: item.title,\r\n        //       body: item.body,\r\n        //       watched: 1\r\n        //   }));\r\n        // }\r\n        // localStorage.setItem('notification', JSON.stringify(notifications));\r\n        // setNotifications(notification);\r\n    //   }, [notification, setNotification]);\r\n\r\n    return (\r\n        <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n            <div className=\"drawer-header\">\r\n              <ArrowBackIcon id=\"close\" className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n              <NotificationsIcon />\r\n            </div>\r\n            <div className=\"drawer-body\">\r\n                {\r\n                    notifications.map(item => (\r\n                        <div className=\"card-notifcation\" key={item.title}>\r\n                            <div>\r\n                                <Avatar>\r\n                                    R\r\n                                </Avatar>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div>{item.title}</div>\r\n                                <div>{item.body}</div>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </Drawer>\r\n    )\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signout } from \"../../actions/userActions\";\r\nimport { Menu, MenuItem } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport InsertChartIcon from \"@material-ui/icons/InsertChart\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\r\nimport UpdateIcon from \"@material-ui/icons/Update\";\r\nimport DrawerNotification from \"../Drawers/DrawerNotification\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  menuContent: {\r\n    position: \"absolute\",\r\n    right: \"2%\",\r\n  },\r\n  menuItems: {\r\n    marginRight: \"1rem\",\r\n    cursor: \"pointer\",\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    height: \"10vh\",\r\n  },\r\n  contentHeader: {\r\n    color: \"white\",\r\n    background: \"url(images/background/sidebar-2.jpg)\",\r\n    backgroundSize: \"100%\",\r\n  },\r\n  button: {\r\n    color: \"white\",\r\n  },\r\n  icon: {\r\n    color: \"#B2002E\",\r\n  },\r\n  accountContent: {\r\n    width: \"5rem\",\r\n    margin: \"0.5rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  accountIcon: {\r\n    fontSize: \"4rem\",\r\n  },\r\n  iconsSidebar: {\r\n    color: \"#FFFFFF\",\r\n  },\r\n  iconsMenu: {\r\n    color: \"#000000\",\r\n  },\r\n  list: {\r\n    color: \"#000000\",\r\n  },\r\n}));\r\n\r\nexport default function Sidebar() {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [notifications, setNotifications] = React.useState(0);\r\n\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n\r\n  const setNotification = useSelector((state) => state.setNotification);\r\n  const { notification } = setNotification;\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handlerSignout = () => {\r\n    dispatch(signout());\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (option) => {\r\n    setAnchorEl(null);\r\n\r\n    switch (option) {\r\n      case \"logout\":\r\n        handlerSignout();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const [state, setState] = React.useState({ right: false });\r\n\r\n  const toggleDrawer = (open) => {\r\n    setState({ ...state, right: open });\r\n  };\r\n\r\n  // useEffect(()=>{\r\n  //   var total = 0;\r\n  //   if(notification){\r\n  //     total = notification.map(function(item) {\r\n  //       var tl = 0;\r\n  //       if(!item.watched) tl++;\r\n  //       return tl;\r\n  //     });\r\n  //   }\r\n  //   setNotifications(total);\r\n  // }, [notification, setNotification]);\r\n\r\n  return (\r\n    <div>\r\n      {userInfo && (\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <AppBar position=\"relative\">\r\n            <Toolbar>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={handleDrawerOpen}\r\n                edge=\"start\"\r\n                className={clsx(classes.menuButton, open && classes.hide)}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n\r\n              <Typography className={classes.menuContent}>\r\n                <Link className={classes.iconsSidebar} to=\"#\">\r\n                  <Badge\r\n                    className={classes.menuItems}\r\n                    onClick={() => toggleDrawer(true)}\r\n                    badgeContent={notifications}\r\n                    color=\"primary\"\r\n                  >\r\n                    <NotificationsIcon />\r\n                  </Badge>\r\n                </Link>\r\n                <span\r\n                  to=\"/#\"\r\n                  onClick={handleClick}\r\n                  className={classes.iconsSidebar}\r\n                >\r\n                  <PersonIcon />\r\n                  <ArrowDropDownIcon />\r\n                </span>\r\n                <Menu\r\n                  id=\"simple-menu\"\r\n                  anchorEl={anchorEl}\r\n                  keepMounted\r\n                  open={Boolean(anchorEl)}\r\n                  onClose={() => handleClose()}\r\n                >\r\n                  <Link to=\"/profile\">\r\n                    <MenuItem\r\n                      onClick={() => handleClose()}\r\n                      className={classes.iconsMenu}\r\n                    >\r\n                      Perfil\r\n                    </MenuItem>\r\n                  </Link>\r\n                  <MenuItem onClick={() => handleClose(\"logout\")}>\r\n                    Cerrar sesión\r\n                  </MenuItem>\r\n                </Menu>\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n\r\n          <DrawerNotification state={state} setState={setState} />\r\n\r\n          <Drawer\r\n            className={classes.drawer}\r\n            anchor=\"left\"\r\n            open={open}\r\n            onClose={handleDrawerClose}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n          >\r\n            <div className={classes.contentHeader}>\r\n              <div className={classes.drawerHeader}>\r\n                <IconButton\r\n                  className={classes.button}\r\n                  onClick={handleDrawerClose}\r\n                >\r\n                  {theme.direction === \"ltr\" ? (\r\n                    <ChevronLeftIcon />\r\n                  ) : (\r\n                    <ChevronRightIcon />\r\n                  )}\r\n                </IconButton>\r\n              </div>\r\n\r\n              <List className={classes.accountContent}>\r\n                <AccountCircleIcon className={classes.accountIcon} />\r\n                {userInfo.username}\r\n              </List>\r\n            </div>\r\n\r\n            <List>\r\n              <Link className={classes.list} to=\"/\">\r\n                <ListItem onClick={handleDrawerClose} button>\r\n                  <ListItemIcon>\r\n                    <HomeIcon className={classes.icon} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Inicio\" />\r\n                </ListItem>\r\n              </Link>\r\n\r\n              <Link className={classes.list} to=\"/chart\">\r\n                <ListItem onClick={handleDrawerClose} button>\r\n                  <ListItemIcon>\r\n                    <InsertChartIcon className={classes.icon} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Graficos\" />\r\n                </ListItem>\r\n              </Link>\r\n\r\n              <Link className={classes.list} to=\"/alerts\">\r\n                <ListItem onClick={handleDrawerClose} button>\r\n                  <ListItemIcon>\r\n                    <NotificationsIcon className={classes.icon} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Alertas\" />\r\n                </ListItem>\r\n              </Link>\r\n\r\n              <ListItem\r\n                className={classes.list}\r\n                onClick={handleDrawerClose}\r\n                button\r\n              >\r\n                <ListItemIcon>\r\n                  <AttachMoneyIcon className={classes.icon} />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Ingresos\" />\r\n              </ListItem>\r\n\r\n              <Link className={classes.list} to=\"/entries\">\r\n                <ListItem\r\n                  className={classes.list}\r\n                  onClick={handleDrawerClose}\r\n                  button\r\n                >\r\n                  <ListItemIcon>\r\n                    <UpdateIcon className={classes.icon} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Proximos gastos\" />\r\n                </ListItem>\r\n              </Link>\r\n\r\n              <Link className={classes.list} to=\"/activities\">\r\n                <ListItem\r\n                  className={classes.list}\r\n                  onClick={handleDrawerClose}\r\n                  button\r\n                >\r\n                  <ListItemIcon>\r\n                    <FormatListBulletedIcon className={classes.icon} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Pendientes\" />\r\n                </ListItem>\r\n              </Link>\r\n            </List>\r\n            <Divider />\r\n          </Drawer>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n        USER_REGISTER_FAIL,\r\n        USER_REGISTER_REQUEST,\r\n        USER_REGISTER_SUCCESS,\r\n        USER_SIGIN_FAIL,\r\n        USER_SIGIN_REQUEST,\r\n        USER_SIGIN_SUCCESS,\r\n        USER_SIGNOUT_FAIL,\r\n        USER_SUSCRIBE_FAIL,\r\n        USER_SUSCRIBE_REQUEST,\r\n        USER_SUSCRIBE_SUCCESS \r\n        } from \"../constants/userConstants\";\r\nimport axios from 'axios';\r\n\r\nexport const signin = (userData) => async (dispatch) => {\r\n    dispatch({ type: USER_SIGIN_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.post('/api/users/signin', userData);\r\n        dispatch({type: USER_SIGIN_SUCCESS, payload: data });\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_SIGIN_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });\r\n    }\r\n}\r\n\r\nexport const signout = () => async(dispatch) => {\r\n    localStorage.removeItem('userInfo');;\r\n    dispatch({ type: USER_SIGNOUT_FAIL });\r\n}\r\n\r\nexport const registerUser = (userData) => async(dispatch) => {\r\n    dispatch({ type:USER_REGISTER_REQUEST, payload: userData });\r\n    try {\r\n       const { data } = await axios.post('/api/users/register', userData);\r\n       dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n       dispatch({ type: USER_SIGIN_SUCCESS, payload: data });\r\n       localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });\r\n    }\r\n}\r\n\r\nexport const subscribeUser = (suscription) => async (dispatch, getState) => {\r\n    dispatch({ type: USER_SUSCRIBE_REQUEST });\r\n    try {\r\n        const { userSignin: { userInfo } } = getState();\r\n\r\n        const { data } = await axios.post('/api/users/suscription', {\r\n            suscription: suscription,\r\n            userId: userInfo ? userInfo.id  : 1\r\n        });\r\n        dispatch({ type: USER_SUSCRIBE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_SUSCRIBE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });\r\n    }\r\n}","export const ALERT_LIST_REQUEST = \"ALERT_LIST_REQUEST\";\r\nexport const ALERT_LIST_SUCCESS = \"ALERT_LIST_SUCCESS\";\r\nexport const ALERT_LIST_FAIL = \"ALERT_LIST_FAIL\";\r\n\r\nexport const ALERT_UPDATE_REQUEST = \"ALERT_UPDATE_REQUEST\";\r\nexport const ALERT_UPDATE_SUCCESS = \"ALERT_UPDATE_SUCCESS\";\r\nexport const ALERT_UPDATE_FAIL = \"ALERT_UPDATE_FAIL\";\r\n\r\nexport const ALERT_CREATE_REQUEST = \"ALERT_CREATE_REQUEST\";\r\nexport const ALERT_CREATE_SUCCESS = \"ALERT_CREATE_SUCCESS\";\r\nexport const ALERT_CREATE_FAIL = \"ALERT_CREATE_FAIL\";\r\n\r\nexport const ALERT_DELETE_REQUEST = \"ALERT_DELETE_REQUEST\";\r\nexport const ALERT_DELETE_SUCCESS = \"ALERT_DELETE_SUCCESS\";\r\nexport const ALERT_DELETE_FAIL = \"ALERT_DELETE_FAIL\";\r\n\r\nexport const TYPE_ALERT_LIST_REQUEST = \"TYPE_ALERT_LIST_REQUEST\";\r\nexport const TYPE_ALERT_LIST_SUCCESS = \"TYPE_ALERT_LIST_SUCCESS\";\r\nexport const TYPE_ALERT_LIST_FAIL = \"TYPE_ALERT_LIST_FAIL\";","import axios from \"axios\";\r\nimport { ALERT_CREATE_FAIL, ALERT_CREATE_REQUEST, ALERT_CREATE_SUCCESS, ALERT_DELETE_FAIL, ALERT_DELETE_REQUEST, ALERT_DELETE_SUCCESS, ALERT_LIST_FAIL, ALERT_LIST_REQUEST, ALERT_LIST_SUCCESS, ALERT_UPDATE_FAIL, ALERT_UPDATE_REQUEST, ALERT_UPDATE_SUCCESS, TYPE_ALERT_LIST_FAIL, TYPE_ALERT_LIST_REQUEST, TYPE_ALERT_LIST_SUCCESS } from '../constants/alertConstants';\r\n\r\nexport const listAlerts = () => async (dispatch, getState) => {\r\n    dispatch({ type: ALERT_LIST_REQUEST });\r\n    const {userSignin: { userInfo }} = getState(); \r\n    try {\r\n        const { data } = await axios.get(`/api/alerts/${userInfo.id}`);\r\n        dispatch({ type: ALERT_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALERT_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        }); \r\n    }\r\n}\r\n\r\nexport const updateAlertActive = (alert) => async (dispatch) => {\r\n    dispatch({ type: ALERT_UPDATE_REQUEST });\r\n    try {\r\n        const { data } = await axios.put(`/api/alerts`, alert);\r\n        dispatch({ type: ALERT_UPDATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALERT_UPDATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });    \r\n    }\r\n}\r\n\r\nexport const createAlert = (alert) => async (dispatch, getState) => {\r\n    dispatch({ type: ALERT_CREATE_REQUEST });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n        const { data } = await axios.post('/api/alerts', {\r\n            alert: alert,\r\n            userId: userInfo.id\r\n        });\r\n        dispatch({ type: ALERT_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALERT_CREATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        }); \r\n    }\r\n}\r\n\r\nexport const listTypeAlerts = () => async (dispatch) => {\r\n    dispatch({ type: TYPE_ALERT_LIST_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.post('/api/alerts/types');\r\n        dispatch({ type: TYPE_ALERT_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: TYPE_ALERT_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        }); \r\n    }\r\n}\r\n\r\nexport const deleteAlert = (alertId) => async (dispatch) => {\r\n    dispatch({ type: ALERT_DELETE_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.delete(`/api/alerts/${alertId}`);\r\n        dispatch({ type: ALERT_DELETE_SUCCESS, payload: data.deleted });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALERT_DELETE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });   \r\n    }\r\n}\r\n","import React from 'react';\r\n// import Alert from '@material-ui/lab/Alert';\r\n\r\nexport default function MessageBox(props) {\r\n    return (\r\n        // <Alert severity=\"error\">Error</Alert>\r\n        <div className={`alert alert-${props.variant || 'info'}`}>\r\n            {props.children} \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function LoadingBox() {\r\n    return (\r\n        <div>\r\n            <div className='spinner'></div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Select from 'react-select';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport LoadingBox from '../utils/LoadingBox';\r\nimport { createAlert, listAlerts, listTypeAlerts, updateAlertActive } from '../../actions/alertActions';\r\n\r\nexport default function DrawerAlert(props) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { editAlert, edit, state, setState } = props;\r\n  const [days, setDays] = useState([]);\r\n  const [selectDay, setSelectDay] = useState('');\r\n  const [selectType, setSelectType] = useState('');\r\n  const [day, setDay] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [submit, setSubmit] = useState(false);\r\n\r\n  const alertCreate = useSelector(state => state.alertCreate);\r\n  const { alert } = alertCreate;\r\n\r\n  const alertActiveUpdate = useSelector(state => state.alertActiveUpdate);\r\n  const { alert: alertSuccess } = alertActiveUpdate;\r\n\r\n  const alertTypeList = useSelector(state => state.alertTypeList);\r\n  const { typeAlerts, loading: loadingTypes } = alertTypeList;\r\n\r\n    const toggleDrawer = (open) => {\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handleClose = useCallback((open) => {\r\n        if(state.right)\r\n            setState({ ...state, right: open });\r\n    },[setState, state]);\r\n\r\n  const handleSubmit = (e) => { \r\n        e.preventDefault();\r\n        setSubmit(true);\r\n        if (edit) {\r\n            dispatch(updateAlertActive({\r\n                date: day,\r\n                alert: title,\r\n                message,\r\n                id:editAlert.id,\r\n                active:editAlert.active\r\n            }));\r\n        } else {\r\n            dispatch(createAlert({date: day, alert: title, message}));\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (days.length < 1) {\r\n            let days = [];\r\n            [...Array(31).keys()].map(item => days.push({value: item + 1, label: item + 1}));\r\n            setDays(days);\r\n        }\r\n    },[days]);\r\n\r\n    useEffect(()=>{\r\n        dispatch(listTypeAlerts());\r\n    }, [dispatch])\r\n\r\n    useEffect(()=>{\r\n        if ((alert && submit) || (alertSuccess && submit)){\r\n            handleClose(false);\r\n            dispatch(listAlerts());\r\n        }\r\n    },[alert, submit, dispatch, alertSuccess, handleClose]);\r\n\r\n    useEffect(()=>{\r\n        if (editAlert && edit) {\r\n            const type = typeAlerts.filter(type => type.label === editAlert.priority)\r\n            setTitle(editAlert.alert);\r\n            setMessage(editAlert.message);\r\n            setSelectDay({label: editAlert.date, value:editAlert.date});\r\n            setSelectType(type);\r\n            setDay(editAlert.date); \r\n        } else {\r\n            setTitle('');\r\n            setMessage('');\r\n            setSelectDay({ label: 1, value: 1 }); \r\n            setDay(1); \r\n            setSelectType({});\r\n        }\r\n    },[editAlert, edit, typeAlerts]);\r\n\r\n  return (\r\n\r\n    <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n        <div className=\"drawer-header\">\r\n            <ArrowBackIcon id=\"close\" className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n        </div>\r\n        <div className=\"drawer-body\">\r\n        <form className=\"form-modal\" onSubmit={handleSubmit}>\r\n                <div className=\"form-title\">\r\n                    <div>Registar Alerta</div>\r\n                    <Divider />\r\n                </div>\r\n                <div>\r\n                <label>Prioridad</label>\r\n                {\r\n                    loadingTypes ? <LoadingBox />\r\n                    :\r\n                    (\r\n                    <Select\r\n                        placeholder=\"Prioridad de la alerta\"\r\n                        onChange={e => setTitle(e.value)}\r\n                        defaultValue={selectType}\r\n                        options={typeAlerts}\r\n                    />\r\n                    )\r\n                }\r\n\r\n            </div>\r\n            <div>\r\n                <label>Descripcíon alerta</label>\r\n                <textarea\r\n                    type=\"text\"\r\n                    value={message}\r\n                    onChange={e => setMessage(e.target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label>Día de envío</label>\r\n                <Select\r\n                    placeholder=\"Dia\"\r\n                    onChange={e => setDay(e.value)}\r\n                    defaultValue={selectDay}\r\n                    options={days}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button onClick={() => toggleDrawer(false)} className=\"btn secundary\" type=\"submit\">{edit ? 'Actualizar' : 'Crear'}</button>\r\n            </div>\r\n\r\n        </form>\r\n        </div>\r\n    </Drawer>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function FloatButton(props) {\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const [url, setUrl] = useState('');\r\n\r\n    useEffect(() => {\r\n        const path = props.props.location.pathname;\r\n\r\n        switch (path) {\r\n            case '/':\r\n                setUrl('/expenses-create');\r\n                break;\r\n            case '/activities':\r\n                setUrl('/activities-create');\r\n                break;\r\n            case '/alerts':\r\n                setUrl('/alerts-create');\r\n                break;\r\n            case '/entries':\r\n                setUrl('/entries-create');\r\n                break;\r\n\r\n            default:\r\n                if(path.includes('/next-expenses')){\r\n                    setUrl('/next-expenses-create');\r\n                } \r\n                break;\r\n        }\r\n\r\n    }, [props]);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                userInfo &&\r\n                (\r\n                    <Link to={url}>\r\n                        <div className=\"floating-button\">\r\n                            <button className=\"btoncito\">\r\n                                <AddIcon />\r\n                            </button>\r\n                        </div>\r\n                    </Link>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteAlert, listAlerts, updateAlertActive } from '../../actions/alertActions';\r\nimport MessageBox from '../../components/MessageBox';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport DrawerAlert from '../../components/Drawers/DrawerAlert';\r\nimport Swal from 'sweetalert2'\r\nimport FloatButton from '../../components/FloatButton';\r\n\r\nexport default function AlertScreen(props) {\r\n    const dispatch = useDispatch();\r\n    const [rows, setRows] = useState([]);\r\n    const [send, setSend] = useState(false);\r\n    const [editAlert, setEditAlert] = useState();\r\n    const [edit, setEdit] = useState(false);\r\n    const [submitDelete, setSubmitDelete] = useState(false);\r\n\r\n    const alertList = useSelector(state => state.alertList);\r\n    const { error, loading, alerts } = alertList;\r\n\r\n    const alertActiveUpdate = useSelector(state => state.alertActiveUpdate);\r\n    const { alert } = alertActiveUpdate;\r\n\r\n    const alertDelete = useSelector(state => state.alertDelete);\r\n    const { success } = alertDelete;\r\n\r\n    const [state, setState] = React.useState({ right: false });\r\n\r\n    const handleActive = (e, item) => {\r\n        dispatch(updateAlertActive({...item, active: e.target.checked}));\r\n        setSend(true);\r\n    }\r\n\r\n    const toggleDrawer = (open, item) => {\r\n\r\n        if(item){\r\n            setEditAlert(item);\r\n            setEdit(true);\r\n        } else {\r\n            setEditAlert({});\r\n        }\r\n\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handleDelete = (alertId) => {\r\n        Swal.fire({\r\n            title: '¿Eliminar alerta?',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Sí, eliminar'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              dispatch(deleteAlert(alertId));\r\n              setSubmitDelete(true);\r\n            }\r\n          })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(success && submitDelete){\r\n            Swal.fire(\r\n                'Eliminado!',\r\n                'Alerta eliminada correctamente',\r\n                'success'\r\n            ).then(()=>{\r\n                setSubmitDelete(false);\r\n                dispatch(listAlerts());\r\n            });  \r\n        }\r\n    },[success, submitDelete, dispatch])\r\n\r\n    useEffect(()=>{\r\n        if (alerts) {\r\n            let rows = [];\r\n            alerts.map(item => rows.push({\r\n                id: item.alertId,\r\n                priority: item.typesalert.typeAlert,\r\n                message: item.message,\r\n                date: item.date,\r\n                active: item.active\r\n            }));\r\n\r\n            setRows(rows);\r\n        } else {\r\n            dispatch(listAlerts());\r\n        }\r\n    }, [alerts, dispatch]);\r\n\r\n    useEffect(()=>{\r\n        if (alert && send){\r\n            dispatch(listAlerts());\r\n        }\r\n    },[dispatch, alert, send]);\r\n\r\n    return (\r\n        <div>\r\n            <DrawerAlert \r\n                state={state}\r\n                setState={setState}\r\n                editAlert={editAlert}\r\n                edit={edit}\r\n            />\r\n\r\n            <div className=\"container page-container page\">\r\n                <h2>Alertas<small></small></h2>\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={() => toggleDrawer(true)}\r\n                    className=\"btn primary\"\r\n                >\r\n                    Crear alerta\r\n                </button>\r\n\r\n                {\r\n                loading ? <LoadingBox />\r\n                :\r\n                error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                :(\r\n                <div className=\"container-table\">\r\n                    <ul className=\"responsive-table\">\r\n                        <li className=\"table-header\">\r\n                            <div className=\"col col-2\">Activo</div>\r\n                            <div className=\"col col-2\">Prioridad</div>\r\n                            <div className=\"col col-4\">Mensaje</div>\r\n                            <div className=\"col col-4\">Dia de envio</div>\r\n                            <div className=\"col col-2\">Acciones</div>\r\n                        </li>\r\n                        {\r\n                            rows.map(item => (\r\n                                <li className=\"table-row\" key={item.id}>\r\n                                    <div className=\"col col-2\" data-label=\"Payment Status\">\r\n                                        <input type=\"checkbox\" checked={item.active} value={false} onChange={ e => handleActive(e, item)} />\r\n                                    </div>\r\n                                    <div className=\"col col-2\" data-label=\"Customer Name\">{item.priority}</div>\r\n                                    <div className=\"col col-4\" data-label=\"Amount\">{item.message}</div>\r\n                                    <div className=\"col col-4\" data-label=\"Payment Status\">Día {item.date} de cada mes</div>\r\n                                    <div className=\"col col-2\" data-label=\"Payment Status\">\r\n                                        <EditIcon onClick={() => toggleDrawer(true, item)} className=\"cursor-pointer\" />\r\n                                        <DeleteIcon onClick={() => handleDelete(item.id)} className=\"cursor-pointer\" />\r\n                                    </div>\r\n                                </li> \r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                )}\r\n            </div>\r\n            <FloatButton props={props} />\r\n        </div>\r\n    )\r\n}\r\n","export const EXPENSE_LIST_REQUEST = 'EXPENSE_LIST_REQUEST';\r\nexport const EXPENSE_LIST_SUCCESS = 'EXPENSE_LIST_SUCCESS';\r\nexport const EXPENSE_LIST_FAIL = 'EXPENSE_LIST_FAIL';\r\n\r\nexport const EXPENSE_LIST_BY_DATE_REQUEST = 'EXPENSE_LIST_BY_DATE_REQUEST';\r\nexport const EXPENSE_LIST_BY_DATE_SUCCESS = 'EXPENSE_LIST_BY_DATE_SUCCESS';\r\nexport const EXPENSE_LIST_BY_DATE_FAIL = 'EXPENSE_LIST_BY_DATE_FAIL';\r\n\r\nexport const EXP_LIST_REQUEST = 'EXP_LIST_REQUEST';\r\nexport const EXP_LIST_SUCCESS = 'EXP_LIST_SUCCESS';\r\nexport const EXP_LIST_FAIL = 'EXP_LIST_FAIL';\r\n\r\nexport const EXPENSE_CREATE_REQUEST = 'EXPENSE_CREATE_REQUEST';\r\nexport const EXPENSE_CREATE_SUCCESS = 'EXPENSE_CREATE_SUCCESS';\r\nexport const EXPENSE_CREATE_FAIL = 'EXPENSE_CREATE_FAIL';\r\n\r\nexport const EXPENSE_DELETE_REQUEST = 'EXPENSE_DELETE_REQUEST';\r\nexport const EXPENSE_DELETE_SUCCESS = 'EXPENSE_DELETE_SUCCESS';\r\nexport const EXPENSE_DELETE_FAIL = 'EXPENSE_DELETE_FAIL';","import axios from \"axios\";\r\nimport {\r\n  EXPENSE_CREATE_FAIL,\r\n  EXPENSE_CREATE_REQUEST,\r\n  EXPENSE_CREATE_SUCCESS,\r\n  EXPENSE_DELETE_FAIL,\r\n  EXPENSE_DELETE_REQUEST,\r\n  EXPENSE_DELETE_SUCCESS,\r\n  EXPENSE_LIST_BY_DATE_FAIL,\r\n  EXPENSE_LIST_BY_DATE_REQUEST,\r\n  EXPENSE_LIST_BY_DATE_SUCCESS,\r\n  EXPENSE_LIST_FAIL,\r\n  EXPENSE_LIST_REQUEST,\r\n  EXPENSE_LIST_SUCCESS,\r\n  EXP_LIST_FAIL,\r\n  EXP_LIST_REQUEST,\r\n  EXP_LIST_SUCCESS,\r\n} from \"../constants/expenseConstants\";\r\n\r\nexport const listExpenses = (months) => async (dispatch, getState) => {\r\n  dispatch({ type: EXPENSE_LIST_REQUEST });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await axios.post(\r\n      `/api/expenses/${userInfo.id}`,\r\n      {\r\n        months: months,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n    );\r\n    dispatch({ type: EXPENSE_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: EXPENSE_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.response\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listExpensesByDate = () => async (dispatch, getState) => {\r\n  dispatch({ type: EXPENSE_LIST_BY_DATE_REQUEST });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await axios.get(`/api/expenses/byDate/${userInfo.id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    });\r\n    dispatch({ type: EXPENSE_LIST_BY_DATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: EXPENSE_LIST_BY_DATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.response\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listExpense = (expenseId) => async (dispatch) => {\r\n  dispatch({ type: EXP_LIST_REQUEST });\r\n  try {\r\n    const { data } = await axios.get(`/api/expenses/${expenseId}`);\r\n    dispatch({ type: EXP_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: EXP_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.response\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createExpense = (objExpense) => async (dispatch, getState) => {\r\n  dispatch({ type: EXPENSE_CREATE_REQUEST });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n\r\n  try {\r\n    const { data } = await axios.post(\"/api/expenses/\", {\r\n      ...objExpense,\r\n      userUserId: userInfo.id,\r\n    });\r\n\r\n    if (data.errors) {\r\n      throw new Error(data.errors[0].message);\r\n    }\r\n    dispatch({ type: EXPENSE_CREATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: EXPENSE_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.response\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteExpense = (expenseId) => async (dispatch) => {\r\n  dispatch({ type: EXPENSE_DELETE_REQUEST });\r\n\r\n  try {\r\n    const { data } = await axios.delete(`/api/expenses/${expenseId}`, {\r\n      expenseId: expenseId,\r\n    });\r\n\r\n    dispatch({ type: EXPENSE_DELETE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: EXPENSE_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.response\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","export const GET_MONTHS_REQUEST = \"GET_MONTHS_REQUEST\";\r\nexport const GET_MONTHS_SUCCESS = \"GET_MONTHS_SUCCESS\";\r\nexport const GET_MONTHS_FAIL = \"GET_MONTHS_FAIL\";\r\n\r\nexport const SET_NOTIFICATIONS_REQUEST = \"SET_NOTIFICATIONS_REQUEST\";\r\nexport const SET_NOTIFICATIONS_SUCCESS = \"SET_NOTIFICATIONS_SUCCESS\";\r\nexport const SET_NOTIFICATIONS_FAIL = \"SET_NOTIFICATIONS_FAIL\";\r\n\r\nexport const SET_FILTERS_REQUEST = \"SET_FILTERS_REQUEST\";\r\nexport const SET_FILTERS_SUCCESS = \"SET_FILTERS_SUCCESS\";\r\nexport const SET_FILTERS_FAIL = \"SET_FILTERS_FAIL\";\r\n\r\nexport const SET_GROUP_REQUEST = \"SET_GROUP_REQUEST\";\r\nexport const SET_GROUP_SUCCESS = \"SET_GROUP_SUCCESS\";\r\nexport const SET_GROUP_FAIL = \"SET_GROUP_FAIL\";","import axios from \"axios\";\r\nimport {\r\n  GET_MONTHS_FAIL,\r\n  GET_MONTHS_REQUEST,\r\n  GET_MONTHS_SUCCESS,\r\n  SET_GROUP_FAIL,\r\n  SET_GROUP_REQUEST,\r\n  SET_GROUP_SUCCESS,\r\n  SET_NOTIFICATIONS_FAIL,\r\n  SET_NOTIFICATIONS_REQUEST,\r\n  SET_NOTIFICATIONS_SUCCESS,\r\n} from \"../constants/utilsConstants\";\r\n\r\nexport const getMonths = () => async (dispatch) => {\r\n  dispatch({ type: GET_MONTHS_REQUEST });\r\n\r\n  try {\r\n    const { data } = await axios.get(\"/api/utils/months\");\r\n    dispatch({ type: GET_MONTHS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_MONTHS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.response\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const setGroup = (filters) => async (dispatch) => {\r\n  dispatch({ type: SET_GROUP_REQUEST });\r\n\r\n  try {\r\n    localStorage.setItem(\"group\", JSON.stringify(filters));\r\n    dispatch({ type: SET_GROUP_SUCCESS, payload: filters });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SET_GROUP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.response\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const setNotifications = (data) => (dispatch) => {\r\n  dispatch({ type: SET_NOTIFICATIONS_REQUEST });\r\n  try {\r\n    console.log(data);\r\n    let notification = [\r\n      { title: \"ojo con eso\", body: data.message, watched: false },\r\n    ];\r\n    localStorage.setItem(\"notification\", JSON.stringify(notification));\r\n    dispatch({ type: SET_NOTIFICATIONS_SUCCESS, payload: notification });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SET_NOTIFICATIONS_FAIL,\r\n      payload: \"Error getting notifications\",\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listExpensesByDate } from \"../actions/expenseActions\";\r\nimport { getMonths } from \"../actions/utilsActions\";\r\nimport { convertDate } from \"../common/utils\";\r\n\r\nexport default function ChartScreen() {\r\n  const dispatch = useDispatch();\r\n  const [labels, setLabels] = useState([]);\r\n  const [data, setData] = useState([]);\r\n\r\n  const expensesByDateList = useSelector((state) => state.expensesByDateList);\r\n  const { expenses } = expensesByDateList;\r\n\r\n  const monthsGet = useSelector((state) => state.monthsGet);\r\n  const { months } = monthsGet;\r\n\r\n  const options = {\r\n    elements: {\r\n      bar: {\r\n        borderWidth: 2,\r\n      },\r\n    },\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!expenses) {\r\n      dispatch(listExpensesByDate());\r\n    } else {\r\n      if (months) {\r\n        let labels = [];\r\n        let data = [];\r\n        expenses.forEach((item) => {\r\n          labels.push(convertDate(item.date, months)[1]);\r\n          data.push(parseInt(item.total));\r\n        });\r\n        setLabels(labels);\r\n        setData(data);\r\n      } else {\r\n        dispatch(getMonths());\r\n      }\r\n    }\r\n  }, [dispatch, expenses, months]);\r\n\r\n  return (\r\n    <div>\r\n      {labels && data && (\r\n        <Bar\r\n          datasetIdKey=\"id\"\r\n          options={options}\r\n          data={{\r\n            labels: labels,\r\n            datasets: [\r\n              {\r\n                label: \"Gastos\",\r\n                data: data,\r\n                backgroundColor: [\r\n                  \"rgba(255, 99, 132, 0.8)\",\r\n                  \"rgba(53, 162, 235, 0.8)\",\r\n                ],\r\n              },\r\n            ],\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteExpense, listExpense } from '../../actions/expenseActions';\r\nimport { getMonths } from '../../actions/utilsActions';\r\nimport MessageBox from '../../components/MessageBox';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\nexport default function ExpenseScreen(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const expenseId = props.match.params.id;\r\n\r\n    const [send, setSend] = useState(false);\r\n\r\n    const expList = useSelector(state => state.expList);\r\n    const { expense, loading, error } = expList;\r\n\r\n    const expenseDelete = useSelector(state => state.expenseDelete);\r\n    const { expense: deleted } = expenseDelete;\r\n\r\n    const monthsGet = useSelector(state => state.monthsGet);\r\n    const { months } = monthsGet;\r\n\r\n    const convertDate = (date) => {\r\n        let month = date.split('-')[1];\r\n        let day = date.split('-')[2];\r\n  \r\n        let result = months.filter(item => item.value === month);\r\n        let newDate = `${day} ${result[0].label}`;\r\n        return newDate;\r\n    }\r\n\r\n    const deleteExp = () => {\r\n        setSend(true);\r\n        dispatch(deleteExpense(expenseId))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        dispatch(listExpense(expenseId));\r\n    }, [dispatch, expenseId]);\r\n\r\n    useEffect(()=> {\r\n        if(!months) dispatch(getMonths());\r\n    },[dispatch, months]);\r\n\r\n    useEffect(() => {\r\n        if (deleted && send) {\r\n            props.history.push('/');\r\n            setSend(false);\r\n        } \r\n    }, [deleted, send, props])\r\n    \r\n    return (\r\n        <div>\r\n            {\r\n                loading ? <LoadingBox />\r\n                :\r\n                error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                : \r\n                (\r\n                <div className=\"card-expense\">\r\n                    <div className=\"card-expense-header\">\r\n                        <div onClick={ () => deleteExp()}> <DeleteIcon /></div>\r\n                        <div>{expense.category.label}</div>\r\n                        <div>{expense.subcategory.label}</div>\r\n                        <div>{expense.description}</div>\r\n                    </div>\r\n                    <div className=\"card-expense-body\">\r\n                        <div>${new Intl.NumberFormat().format(expense.value)}</div>\r\n                        { months && ( \r\n                            <div>{convertDate(expense.date.split('T')[0])}</div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"card-expense-edit\">\r\n                        <Avatar> <EditIcon /> </Avatar>\r\n                    </div>\r\n                </div>\r\n                )\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { convertDate } from \"../common/utils\";\r\n\r\nexport default function ExpenseDetails(props) {\r\n  const monthsGet = useSelector((state) => state.monthsGet);\r\n  const { months } = monthsGet;\r\n  const { expenses, props: prop } = props;\r\n\r\n  const handleRedirect = (expenseId) => {\r\n    prop.history.push(`/expenses/${expenseId}`);\r\n  };\r\n\r\n  return expenses.map((expense) => (\r\n    <div\r\n      key={expense.expenseId}\r\n      className=\"data-table-items\"\r\n      onClick={() => handleRedirect(expense.expenseId)}\r\n    >\r\n      <div className=\"data-date\">\r\n        <div>{expense.date ? convertDate(expense.date, months)[1] : \"\"}</div>\r\n        <div>{expense.date ? convertDate(expense.date, months)[0] : \"\"}</div>\r\n      </div>\r\n\r\n      <div>\r\n        <div className=\"category\">\r\n          {expense.category.category[0].toUpperCase() +\r\n            expense.category.category.substr(1)}\r\n        </div>\r\n        <div className=\"subcategory\">\r\n          {expense.subcategory.subcategory[0].toUpperCase() +\r\n            expense.subcategory.subcategory.substr(1)}\r\n        </div>\r\n      </div>\r\n\r\n      <div>${new Intl.NumberFormat().format(expense.value)}</div>\r\n    </div>\r\n  ));\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { convertValue } from \"../../common/utils\";\r\n\r\nexport default function CategoryDetails(props) {\r\n  const { expenses: expensesProps, props: prop } = props;\r\n  const [expenses, setExpenses] = useState([]);\r\n\r\n  const handleCategoryReduce = (items) => {\r\n    return items.reduce((prev, item) => {\r\n      const head = `${item.category.categoryId}`;\r\n      const value = prev[head] ? prev[head][0] : 0;\r\n      const sub = prev[head] ? prev[head][3] : [];\r\n\r\n      const headSub = item.subcategory.subcategoryId;\r\n      const valueSub = sub[headSub] ? sub[headSub][0] : 0;\r\n      const exp = sub[headSub] ? sub[headSub][2] : [];\r\n\r\n      exp.push({\r\n        expenseId: item.expenseId,\r\n        expense: item.subcategory.subcategory,\r\n        description: item.description,\r\n        value: item.value,\r\n      });\r\n\r\n      sub[headSub] = [\r\n        valueSub + parseInt(item.value),\r\n        item.subcategory.subcategory,\r\n        exp,\r\n      ];\r\n\r\n      prev[head] = [\r\n        value + parseInt(item.value),\r\n        item.category.category,\r\n        item.category.categoryId,\r\n        sub,\r\n      ];\r\n\r\n      console.log(prev);\r\n      return prev;\r\n    }, []);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const result = handleReorder(handleCategoryReduce(expensesProps));\r\n    setExpenses(result);\r\n  }, [expensesProps]);\r\n\r\n  const handleRedirect = (expenseId) => {\r\n    prop.history.push(`/expenses/${expenseId}`);\r\n  };\r\n\r\n  const handleReorder = (items) => {\r\n    return items.sort((a, b) => b[0] - a[0]);\r\n  };\r\n\r\n  return expenses.map((expense) => (\r\n    <Accordion key={expense[2]}>\r\n      <AccordionSummary aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n        <Typography className=\"accordion-title\">\r\n          <div><strong>{expense[1]}</strong></div>\r\n          <div>${convertValue(expense[0])}</div>\r\n        </Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Typography className=\"accordion-body\">\r\n          {handleReorder(expense[3]).map((item) => (\r\n            <Accordion key={item[2]} className=\"custom-accordion\">\r\n              <AccordionSummary\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography className=\"accordion-title\">\r\n                  <div>{item[1][0].toUpperCase() + item[1].substr(1)}</div>\r\n                  <div>${convertValue(item[0])}</div>\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Typography className=\"accordion-body accordion-body-expense\">\r\n                  {handleReorder(item[2]).map((expense) => (\r\n                    <div\r\n                      key={expense.expenseId}\r\n                      className=\"accordion-body-description\"\r\n                      onClick={() => handleRedirect(expense.expenseId)}\r\n                    >\r\n                      <div>{expense.expense}</div>\r\n                      <div>${convertValue(expense.value)}</div>\r\n                    </div>\r\n                  ))}\r\n                </Typography>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          ))}\r\n        </Typography>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  ));\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listExpenses } from \"../actions/expenseActions\";\r\nimport { getMonths } from \"../actions/utilsActions\";\r\n\r\nexport default function DateSelect(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const monthsGet = useSelector((state) => state.monthsGet);\r\n  const { months } = monthsGet;\r\n\r\n  const monthsGetStorage = useSelector((state) => state.monthsGetStorage);\r\n  const { months: monthsStorage } = monthsGetStorage;\r\n\r\n  const { month } = props;\r\n\r\n  const handleSelectMonth = (month) => {\r\n    return monthsStorage.includes(month);\r\n  };\r\n\r\n  const handlePickMonth = (month) => {\r\n    if(!handleSelectMonth(month)) {\r\n        monthsStorage.push(month)\r\n    } else {\r\n        for( var i = 0; i < monthsStorage.length; i++){ \r\n            if ( monthsStorage[i] === month) monthsStorage.splice(i, 1)\r\n        }\r\n    }\r\n\r\n    localStorage.setItem(\"months\", JSON.stringify(monthsStorage));\r\n    dispatch(listExpenses(monthsStorage));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!months) dispatch(getMonths());\r\n  }, [months, monthsStorage, dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(listExpenses(month));\r\n  }, [dispatch, month]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {months && (\r\n        <div className=\"months-content\">\r\n          {months.map((month) => (\r\n            <div\r\n            onClick={() => handlePickMonth(month.value)}\r\n              key={month.value}\r\n              className={\r\n                handleSelectMonth(month.value) ? \"months-content-selected\" : \"\"\r\n              }\r\n            >\r\n              {month.label.slice(0, 3)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setGroup } from \"../actions/utilsActions\";\r\n\r\nexport default function FilterBotton() {\r\n  const dispatch = useDispatch();\r\n  const groupSet = useSelector((state) => state.groupSet);\r\n  const { group } = groupSet;\r\n\r\n  const handlerButton = () => {\r\n    dispatch(setGroup(!group));\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"filter-content\">\r\n        <button onClick={() => handlerButton()} type=\"button\">\r\n          {group ? 'Desagrupar' : 'Agrupar'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport LoadingBox from \"../components/utils/LoadingBox\";\r\nimport { MDBDataTableV5 } from \"mdbreact\";\r\nimport { getMonths, setNotifications } from \"../actions/utilsActions\";\r\nimport FloatButton from \"../components/FloatButton\";\r\nimport ExpenseDetails from \"../components/ExpenseDetails\";\r\nimport CategoryDetails from \"../components/Accordion/CategoryDetails\";\r\nimport { convertValue } from \"../common/utils\";\r\nimport DateSelect from \"../components/DateSelect\";\r\nimport FilterBotton from \"../components/FilterBotton\";\r\n\r\nexport default function HomeScreen(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [success, setSuccess] = useState(false);\r\n  const [datatable, setDatatable] = useState({});\r\n  const [month, setMonth] = useState();\r\n\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n\r\n  const monthsGet = useSelector((state) => state.monthsGet);\r\n  const { months } = monthsGet;\r\n\r\n  const expenseList = useSelector((state) => state.expenseList);\r\n  const { loading, expenses, error } = expenseList;\r\n\r\n  const groupSet = useSelector((state) => state.groupSet);\r\n  const { group } = groupSet;\r\n\r\n  const convertDate = (date) => {\r\n    let month = date.split(\"-\")[1];\r\n    let day = date.split(\"-\")[2];\r\n\r\n    let result = months.filter((item) => item.value === month);\r\n    let newDate = `${day} ${result[0].label}`;\r\n    return newDate;\r\n  };\r\n\r\n  const getDate = () => {\r\n    let newDate = new Date();\r\n    let month = newDate.getMonth() + 1;\r\n\r\n    month = month < 10 ? `0${month}` : `${month}`;\r\n    return [month];\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!months) dispatch(getMonths());\r\n  }, [dispatch, months]);\r\n\r\n  // useEffect(()=>{\r\n  //   dispatch(setNotifications({title: 'ojo con eso manito', message: 'pagat internet'}));\r\n  // }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) props.history.push(\"/login\");\r\n\r\n    if (expenses) {\r\n      let columns = [\r\n        {\r\n          label: \"Categoria\",\r\n          field: \"category\",\r\n          width: 150,\r\n          attributes: {\r\n            \"aria-controls\": \"DataTable\",\r\n            \"aria-label\": \"Gasto\",\r\n          },\r\n        },\r\n        {\r\n          label: \"Subcategoria\",\r\n          field: \"subcategory\",\r\n          width: 270,\r\n        },\r\n        {\r\n          label: \"Valor\",\r\n          field: \"value\",\r\n          width: 270,\r\n        },\r\n      ];\r\n\r\n      let rows = [];\r\n\r\n      if (expenses.length) {\r\n        if (expenses[0].description)\r\n          columns.push({\r\n            label: \"Descripción\",\r\n            field: \"description\",\r\n            width: 270,\r\n          });\r\n\r\n        if (expenses[0].date)\r\n          columns.push({\r\n            label: \"Fecha\",\r\n            field: \"date\",\r\n            width: 270,\r\n          });\r\n        expenses.forEach((item) =>\r\n          rows.push({\r\n            category: item.category.category[0],\r\n            subcategory: item.subcategory.subcategory,\r\n            description: item.description ? item.description : \"\",\r\n            value: new Intl.NumberFormat().format(item.value),\r\n            date: item.date ? convertDate(item.date.split(\"T\")[0]) : \"\",\r\n          })\r\n        );\r\n      }\r\n      setDatatable({ columns, rows });\r\n    }\r\n    if (!month) {\r\n      const date = JSON.parse(localStorage.getItem(\"months\"))\r\n        ? JSON.parse(localStorage.getItem(\"months\"))\r\n        : getDate();\r\n      setMonth(date);\r\n    }\r\n    setSuccess(false);\r\n  }, [dispatch, props, userInfo, success, expenses, month]);\r\n\r\n  return (\r\n    <div className=\"home-screen\">\r\n      <div className=\"title\">Mis gastos</div>\r\n\r\n      {month && <DateSelect month={month} />}\r\n\r\n      <FilterBotton />\r\n\r\n      {loading ? (\r\n        <LoadingBox></LoadingBox>\r\n      ) : error ? (\r\n        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n      ) : (\r\n        <div className=\"datatable\">\r\n          <div className=\"data-info container\">\r\n            <div className=\"data-card\">\r\n              <div>Gastos totales</div>\r\n              <div>\r\n                $\r\n                {convertValue(\r\n                  expenses.reduce((a, c) => a + parseInt(c.value), 0)\r\n                )}\r\n              </div>\r\n              <div>\r\n                <div class=\"data-card-circle\"></div>\r\n              </div>\r\n              <div>\r\n                <div class=\"data-card-circle-2\"></div>\r\n              </div>\r\n              <div>\r\n                <div class=\"data-card-circle-3\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"data-table\">\r\n            <MDBDataTableV5\r\n              hover\r\n              data={datatable}\r\n              searchTop\r\n              paging={false}\r\n              info={false}\r\n              searchBottom={false}\r\n            />\r\n          </div>\r\n          <div className=\"data-content\">\r\n            {group ? (\r\n              <CategoryDetails expenses={expenses} props={props} />\r\n            ) : (\r\n              <ExpenseDetails expenses={expenses} props={props} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n      <FloatButton props={props} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signin } from '../../actions/userActions';\r\nimport { Link, useHistory  } from 'react-router-dom';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport MessageBox from '../../components/MessageBox';\r\n\r\nexport default function LoginScreen(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo, error, loading } = userSignin;\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signin({username: username, password: password}));\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(userInfo) history.push(\"/\");\r\n    }, [userInfo, history])\r\n    \r\n    return (\r\n        <div className=\"home\">\r\n            \r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                \r\n                <div className=\"title\">\r\n                    Iniciar sesión\r\n                </div>\r\n\r\n                <div>\r\n                    <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            placeholder=\"Username\"\r\n                            onChange={ e => setUsername(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={e => setPassword(e.target.value)}\r\n                    ></input>\r\n                    {/* <span><Link to=\"/\">recuperar contraseña</Link></span> */}\r\n                </div>\r\n                <div>\r\n                    {\r\n                        loading ? <LoadingBox />\r\n                        :\r\n                        (\r\n                            <button className=\"btn primary\" type=\"submit\">Iniciar Sesión</button>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n                <div>\r\n                    <Link to=\"/register\">¿Olvidaste tu contraseña?</Link> \r\n                </div>\r\n\r\n                <div>\r\n                    { error && <MessageBox variant=\"danger\">{error}</MessageBox> }\r\n                </div>\r\n            </form>\r\n            <div className=\"box-register\">\r\n                <div>\r\n                    <span>\r\n                        <Link to=\"/register\">Crear una cuenta</Link> \r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ProfileScreen() {\r\n    return (\r\n        <div>\r\n            Profile\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { registerUser } from '../../actions/userActions';\r\nimport MessageBox from '../../components/MessageBox';\r\n\r\nexport default function RegisterScreen(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [error, setError] = useState(null);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        setError(null);\r\n        if (password === confirmPassword) {\r\n            dispatch(registerUser({username: username, password:password, email: email}));\r\n        } else {\r\n            setError('Las contraseñas no coinciden');\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (userInfo) {\r\n            props.history.push(\"/\");\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                <div className=\"title\">\r\n                    Registro\r\n                </div>\r\n\r\n                <div>\r\n                    { error && (<MessageBox variant=\"danger\">{error}</MessageBox>)}\r\n                </div>\r\n\r\n                <div>\r\n                    <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            placeholder=\"Username\"\r\n                            onChange={ e => setUsername(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            placeholder=\"Email\"\r\n                            onChange={ e => setEmail(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={e => setPassword(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={e => setConfirmPassword(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <button className=\"btn primary\" type=\"submit\">Registrarme</button>\r\n                </div>\r\n\r\n                <div>\r\n                    <Link to=\"/login\">Iniciar sesion</Link> \r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","export const CATEGORY_CREATE_REQUEST = \"CATEGORY_CREATE_REQUEST\";\r\nexport const CATEGORY_CREATE_SUCCESS = \"CATEGORY_CREATE_SUCCESS\";\r\nexport const CATEGORY_CREATE_FAIL = \"CATEGORY_CREATE_FAIL\";\r\n\r\nexport const CATEGORY_LIST_REQUEST = \"CATEGORY_LIST_REQUEST\";\r\nexport const CATEGORY_LIST_SUCCESS = \"CATEGORY_LIST_SUCCESS\";\r\nexport const CATEGORY_LIST_FAIL = \"CATEGORY_LIST_FAIL\";","import axios from \"axios\";\r\nimport { CATEGORY_CREATE_FAIL, CATEGORY_CREATE_REQUEST, CATEGORY_CREATE_SUCCESS, CATEGORY_LIST_FAIL, CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS } from \"../constants/categoryConstants\"\r\n\r\nexport const listCategories = () => async(dispatch, useState) => {\r\n    dispatch({type:  CATEGORY_LIST_REQUEST });\r\n    const { userSignin: { userInfo }} = useState();\r\n    try {\r\n        const { data } = await axios.get(`/api/categories/${userInfo.id}`);\r\n        dispatch({ type: CATEGORY_LIST_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CATEGORY_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        }); \r\n    }\r\n}\r\n\r\nexport const createCategory = (name) => async(dispatch, useState) => {\r\n    dispatch({ type: CATEGORY_CREATE_REQUEST, payload: name});\r\n    const { userSignin: { userInfo } } = useState();\r\n    try {\r\n        const { data } = await axios.post('/api/categories/', {\r\n            name: name,\r\n            userId: userInfo.id\r\n        });\r\n        dispatch({ type: CATEGORY_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CATEGORY_CREATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}","export const SUBCATEGORY_LIST_REQUEST = 'SUBCATEGORY_LIST_REQUEST';\r\nexport const SUBCATEGORY_LIST_SUCCESS = 'SUBCATEGORY_LIST_SUCCESS';\r\nexport const SUBCATEGORY_LIST_FAIL = 'SUBCATEGORY_LIST_FAIL';\r\n\r\nexport const SUBCATEGORY_LIST_BY_CATEGORY_REQUEST = 'SUBCATEGORY_LIST_BY_CATEGORY_REQUEST';\r\nexport const SUBCATEGORY_LIST_BY_CATEGORY_SUCCESS = 'SUBCATEGORY_LIST_BY_CATEGORY_SUCCESS';\r\nexport const SUBCATEGORY_LIST_BY_CATEGORY_FAIL = 'SUBCATEGORY_LIST_BY_CATEGORY_FAIL';\r\n\r\nexport const SUBCATEGORY_CREATE_REQUEST = 'SUBCATEGORY_CREATE_REQUEST';\r\nexport const SUBCATEGORY_CREATE_SUCCESS = 'SUBCATEGORY_CREATE_SUCCESS';\r\nexport const SUBCATEGORY_CREATE_FAIL = 'SUBCATEGORY_CREATE_FAIL';","import axios from \"axios\";\r\nimport { SUBCATEGORY_CREATE_FAIL, SUBCATEGORY_CREATE_REQUEST, SUBCATEGORY_CREATE_SUCCESS, SUBCATEGORY_LIST_BY_CATEGORY_FAIL, SUBCATEGORY_LIST_BY_CATEGORY_REQUEST, SUBCATEGORY_LIST_BY_CATEGORY_SUCCESS, SUBCATEGORY_LIST_FAIL, SUBCATEGORY_LIST_REQUEST, SUBCATEGORY_LIST_SUCCESS } from \"../constants/subcategoriesConstants\"\r\n\r\nexport const listSubcategories = (categoryId) => async (dispatch) => {\r\n    dispatch({ type: SUBCATEGORY_LIST_REQUEST });\r\n    try {\r\n        const { data } = await axios.get(`/api/subcategories/${categoryId}`);\r\n        dispatch({ type: SUBCATEGORY_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SUBCATEGORY_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const listSubcategoriesByCategory = (categoryId) => async (dispatch) => {\r\n    dispatch({ type: SUBCATEGORY_LIST_BY_CATEGORY_REQUEST });\r\n    try {\r\n        const { data } = await axios.get(`/api/subcategoriesByCategory/${categoryId}`);\r\n        dispatch({ type: SUBCATEGORY_LIST_BY_CATEGORY_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SUBCATEGORY_LIST_BY_CATEGORY_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createSubcategory = (name, categoryId) => async (dispatch) => {\r\n    dispatch({ type: SUBCATEGORY_CREATE_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.post('/api/subcategories',{\r\n            name: name,\r\n            categoryId: categoryId\r\n        });\r\n        dispatch({ type: SUBCATEGORY_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SUBCATEGORY_CREATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createCategory, listCategories } from '../actions/categoryActions';\r\nimport { createSubcategory, listSubcategories } from '../actions/subcategoriesActions';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nexport default function SubForm(props) {\r\n\r\n    const { type, categoryId, showNew } = props;\r\n    const dispatch = useDispatch('');\r\n\r\n    const categoryCreate = useSelector(state => state.categoryCreate);\r\n    const { category } = categoryCreate;\r\n\r\n    const subcategoryCreate = useSelector(state => state.subcategoryCreate);\r\n    const { subcategory } = subcategoryCreate;\r\n    \r\n    const [name, setname] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [submitCategory, setSubmitCategory] = useState(false);\r\n    const [submitSubcategory, setSubmitSubcategory] = useState(false);\r\n\r\n    const handlerSubmit = () => {\r\n\r\n        switch (type) {\r\n            case 'category':\r\n                dispatch(createCategory(name));\r\n                setSubmitCategory(true);\r\n                break;\r\n            case 'subcategory':\r\n                dispatch(createSubcategory(name, categoryId));\r\n                setSubmitSubcategory(true);\r\n                break\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let title = type === 'category' ? 'categoria' : 'subcategoria';\r\n        setTitle(title);\r\n    }, [type, category]);\r\n\r\n    useEffect(()=>{\r\n        if (category && submitCategory) {\r\n          showNew(false); \r\n          dispatch(listCategories()); \r\n          dispatch(listSubcategories(category.categoryId)); \r\n        }\r\n    }, [submitCategory, category, dispatch, showNew]);\r\n\r\n    useEffect(()=>{\r\n        if (subcategory && submitSubcategory) {\r\n          showNew(false); \r\n          dispatch(listSubcategories(categoryId)); \r\n        }\r\n    }, [submitSubcategory, subcategory, dispatch, showNew, categoryId]);\r\n    return (\r\n        <div className=\"sub-form\">\r\n            <div>\r\n                <input \r\n                    type=\"text\"\r\n                    maxLength=\"20\"\r\n                    onChange={e => setname(e.target.value)}\r\n                    placeholder={`Nueva ${title}`}>\r\n                </input>\r\n            </div>\r\n            <div>\r\n                <CheckIcon onClick={handlerSubmit} />\r\n            </div>\r\n            <div>\r\n                <ClearIcon onClick={() => showNew(false)} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MessageBox from '../../components/MessageBox';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listCategories } from '../../actions/categoryActions';\r\nimport { createExpense, listExpenses } from '../../actions/expenseActions';\r\nimport { listSubcategories } from '../../actions/subcategoriesActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SubForm from '../../components/SubForm';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function ExpenseCreateScreen(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [description, setDescription] = useState('');\r\n    const [value, setValue] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [categorySelect, setCategorySelect] = useState('');\r\n    const [subcategory, setSubcategory] = useState('');\r\n    const [today, setToday] = useState('');\r\n\r\n    const [submit, setSubmit] = useState(false);\r\n    const [showNewCategory, setShowNewCateogry] = useState(false);\r\n    const [showNewSubcategory, setShowNewSubcategory] = useState(false);\r\n    const [state, setState] = useState({ right: true });\r\n\r\n    const categoriesList = useSelector(state => state.categoriesList);\r\n    const { loading, error, categories } = categoriesList;\r\n\r\n    const expenseCreate = useSelector(state => state.expenseCreate);\r\n    const { expense, loading: loadingSuccess, error: errorCreate } = expenseCreate;\r\n\r\n    const subcategoriesList = useSelector(state => state.subcategoriesList);\r\n    const { subcategories, loading: loadingSubcategory, error: errorSubcategory } = subcategoriesList;\r\n\r\n    const toggleDrawer = (open) => {\r\n        props.history.push('/');\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handleClose = useCallback((open) => {\r\n        if (state.right)\r\n            props.history.push('/');\r\n        setState({ ...state, right: open });\r\n    }, [setState, state, props]);\r\n\r\n    const loadCategories = useCallback(() => {\r\n        if (!categories) {\r\n            dispatch(listCategories());\r\n        } else {\r\n            if (categories.length > 0) {\r\n                const cat = localStorage.getItem('category') ? localStorage.getItem('category') : categories[0].value\r\n                setCategory(cat);\r\n            }\r\n        }\r\n    }, [categories, dispatch]);\r\n\r\n    const handlerCategory = (e) => {\r\n        localStorage.setItem('category', e);\r\n        setCategory(e);\r\n    }\r\n\r\n    const handlerSubmit = (e) => {\r\n        e.preventDefault();\r\n        const objExpense = {\r\n            description: description,\r\n            value: value,\r\n            date: date,\r\n            categoryCategoryId: category,\r\n            subcategorySubcategoryId: subcategory\r\n        }\r\n        setSubmit(true);\r\n        dispatch(createExpense(objExpense));\r\n    }\r\n\r\n    const getDate = () => {\r\n        let newDate = new Date()\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n\r\n        date = date < 10 ? `0${date}` : `${date}`;\r\n        month = month < 10 ? `0${month}` : `${month}`;\r\n\r\n        let today = `${year}-${month}-${date}`;\r\n        setToday(today);\r\n        setDate(today);\r\n    }\r\n\r\n    const handletDate = (e) => {\r\n        setToday(e);\r\n        setDate(e);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (category) dispatch(listSubcategories(category));\r\n    }, [category, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (!categorySelect && categories) {\r\n            const cat = localStorage.getItem('category') ? parseInt(localStorage.getItem('category')) : categories[0].value\r\n            setCategorySelect(categories.filter(item => item.value === cat)[0])\r\n        }\r\n    }, [categorySelect, categories])\r\n\r\n    useEffect(() => {\r\n        if (subcategories)\r\n            if (subcategories.length > 0)\r\n                setSubcategory(subcategories[0].value);\r\n    }, [subcategories]);\r\n\r\n    useEffect(() => {\r\n        getDate();\r\n        loadCategories();\r\n    }, [loadCategories]);\r\n\r\n    useEffect(() => {\r\n        if (expense && submit) {\r\n            let month = [today.split('-')[1]];\r\n            dispatch(listExpenses(month));\r\n            handleClose(false);\r\n        }\r\n    }, [expense, dispatch, submit, today, handleClose]);\r\n\r\n    return (\r\n        <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n            <div className=\"drawer-header\">\r\n                <Link to=\"/\">\r\n                    <ArrowBackIcon className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n                </Link>\r\n            </div>\r\n            <div className=\"drawer-body\">\r\n                <form className=\"form-modal\" onSubmit={handlerSubmit}>\r\n                    {errorCreate && <MessageBox variant=\"danger\">{errorCreate}</MessageBox>}\r\n                    <div className=\"form-title\">\r\n                        <div>Registrar gasto</div>\r\n                        <Divider />\r\n                    </div>\r\n\r\n                    <div>\r\n                        {\r\n                            loading ? <LoadingBox></LoadingBox>\r\n                                :\r\n                                error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                                    : (\r\n                                        <div>\r\n\r\n                                            {categorySelect && (<>\r\n                                                <Select\r\n                                                    className=\"select\"\r\n                                                    placeholder=\"Categorias\"\r\n                                                    onChange={e => handlerCategory(e.value)}\r\n                                                    defaultValue={categorySelect}\r\n                                                    options={categories} />\r\n                                                <AddIcon\r\n                                                    onClick={() => setShowNewCateogry(!showNewCategory)}\r\n                                                    className=\"fas fa-plus-circle\"\r\n                                                />\r\n                                            </>)}\r\n                                            {showNewCategory && <SubForm showNew={setShowNewCateogry} type={'category'} />}\r\n                                        </div>\r\n                                    )}\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            loadingSubcategory ? <div\r\n                                className=\"new-category\"\r\n                                onClick={() => setShowNewCateogry(!showNewCategory)}\r\n                            ></div>\r\n                                :\r\n                                errorSubcategory ? <MessageBox variant=\"danger\">{errorSubcategory}</MessageBox>\r\n                                    : (\r\n                                        <div>\r\n                                            <Select\r\n                                                className=\"select\"\r\n                                                placeholder=\"Subcategorias\"\r\n                                                onChange={e => setSubcategory(e.value)}\r\n                                                defaultValue={subcategories[0]}\r\n                                                options={subcategories}\r\n                                            />\r\n                                            <AddIcon\r\n                                                onClick={() => setShowNewSubcategory(!showNewSubcategory)}\r\n                                                className=\"fas fa-plus-circle\"\r\n                                            />\r\n                                            {showNewSubcategory && <SubForm showNew={setShowNewSubcategory} type={'subcategory'} categoryId={category} />}\r\n                                        </div>\r\n                                    )}\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            type=\"number\"\r\n                            onChange={e => setValue(e.target.value)}\r\n                            placeholder=\"Valor\">\r\n                        </input>\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            type=\"text\"\r\n                            onChange={e => setDescription(e.target.value)}\r\n                            placeholder=\"Descripcion\">\r\n                        </input>\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            value={today}\r\n                            type=\"date\"\r\n                            onChange={e => handletDate(e.target.value)}\r\n                            placeholder=\"Fecha\">\r\n                        </input>\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            loadingSuccess ? <LoadingBox />\r\n                                : (\r\n                                    <button className=\"btn secundary\" type=\"submit\">Crear</button>\r\n                                )\r\n                        }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Drawer>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Select from 'react-select';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport { createAlert, listAlerts, listTypeAlerts, updateAlertActive } from '../../actions/alertActions';\r\n\r\nexport default function AlertCreateScreen(props) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { editAlert, edit, state, setState } = props;\r\n  const [days, setDays] = useState([]);\r\n  const [selectDay, setSelectDay] = useState('');\r\n  const [selectType, setSelectType] = useState('');\r\n  const [day, setDay] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [submit, setSubmit] = useState(false);\r\n\r\n  const alertCreate = useSelector(state => state.alertCreate);\r\n  const { alert } = alertCreate;\r\n\r\n  const alertActiveUpdate = useSelector(state => state.alertActiveUpdate);\r\n  const { alert: alertSuccess } = alertActiveUpdate;\r\n\r\n  const alertTypeList = useSelector(state => state.alertTypeList);\r\n  const { typeAlerts, loading: loadingTypes } = alertTypeList;\r\n\r\n    const toggleDrawer = (open) => {\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handleClose = useCallback((open) => {\r\n        if(state.right)\r\n            setState({ ...state, right: open });\r\n    },[setState, state]);\r\n\r\n  const handleSubmit = (e) => { \r\n        e.preventDefault();\r\n        setSubmit(true);\r\n        if (edit) {\r\n            dispatch(updateAlertActive({\r\n                date: day,\r\n                alert: title,\r\n                message,\r\n                id:editAlert.id,\r\n                active:editAlert.active\r\n            }));\r\n        } else {\r\n            dispatch(createAlert({date: day, alert: title, message}));\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (days.length < 1) {\r\n            let days = [];\r\n            [...Array(31).keys()].map(item => days.push({value: item + 1, label: item + 1}));\r\n            setDays(days);\r\n        }\r\n    },[days]);\r\n\r\n    useEffect(()=>{\r\n        dispatch(listTypeAlerts());\r\n    }, [dispatch])\r\n\r\n    useEffect(()=>{\r\n        if ((alert && submit) || (alertSuccess && submit)){\r\n            handleClose(false);\r\n            dispatch(listAlerts());\r\n        }\r\n    },[alert, submit, dispatch, alertSuccess, handleClose]);\r\n\r\n    useEffect(()=>{\r\n        if (editAlert && edit) {\r\n            const type = typeAlerts.filter(type => type.label === editAlert.priority)\r\n            setTitle(editAlert.alert);\r\n            setMessage(editAlert.message);\r\n            setSelectDay({label: editAlert.date, value:editAlert.date});\r\n            setSelectType(type);\r\n            setDay(editAlert.date); \r\n        } else {\r\n            setTitle('');\r\n            setMessage('');\r\n            setSelectDay({ label: 1, value: 1 }); \r\n            setDay(1); \r\n            setSelectType({});\r\n        }\r\n    },[editAlert, edit, typeAlerts]);\r\n\r\n  return (\r\n\r\n    <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n        <div className=\"drawer-header\">\r\n            <ArrowBackIcon id=\"close\" className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n        </div>\r\n        <div className=\"drawer-body\">\r\n        <form className=\"form-modal\" onSubmit={handleSubmit}>\r\n                <div className=\"form-title\">\r\n                    <div>Registar Alerta</div>\r\n                    <Divider />\r\n                </div>\r\n                <div>\r\n                <label>Prioridad</label>\r\n                {\r\n                    loadingTypes ? <LoadingBox />\r\n                    :\r\n                    (\r\n                    <Select\r\n                        placeholder=\"Prioridad de la alerta\"\r\n                        onChange={e => setTitle(e.value)}\r\n                        defaultValue={selectType}\r\n                        options={typeAlerts}\r\n                    />\r\n                    )\r\n                }\r\n\r\n            </div>\r\n            <div>\r\n                <label>Descripcíon alerta</label>\r\n                <textarea\r\n                    type=\"text\"\r\n                    value={message}\r\n                    onChange={e => setMessage(e.target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label>Día de envío</label>\r\n                <Select\r\n                    placeholder=\"Dia\"\r\n                    onChange={e => setDay(e.value)}\r\n                    defaultValue={selectDay}\r\n                    options={days}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button onClick={() => toggleDrawer(false)} className=\"btn secundary\" type=\"submit\">{edit ? 'Actualizar' : 'Crear'}</button>\r\n            </div>\r\n\r\n        </form>\r\n        </div>\r\n    </Drawer>\r\n  );\r\n}\r\n","export const ACTIVITY_CREATE_REQUEST = \"ACTIVITY_CREATE_REQUEST\";\r\nexport const ACTIVITY_CREATE_SUCCESS = \"ACTIVITY_CREATE_SUCCESS\";\r\nexport const ACTIVITY_CREATE_FAIL = \"ACTIVITY_CREATE_FAIL\";\r\n\r\nexport const ACTIVITY_LIST_REQUEST = \"ACTIVITY_LIST_REQUEST\";\r\nexport const ACTIVITY_LIST_SUCCESS = \"ACTIVITY_LIST_SUCCESS\";\r\nexport const ACTIVITY_LIST_FAIL = \"ACTIVITY_LIST_FAIL\";","import { Avatar } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FloatButton from '../../components/FloatButton';\r\nimport { listActivities } from '../../actions/activityActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport MessageBox from '../../components/MessageBox';\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result  = [...list];\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n    return result;\r\n}\r\nexport default function ActivityScreen(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const activitiesList = useSelector(state => state.activitiesList);\r\n    const { loading, activities: activitiesLoad, error } = activitiesList;\r\n\r\n    const [activities, setActivities] = useState();\r\n\r\n    useEffect(()=>{\r\n        if(!activitiesLoad) {\r\n            dispatch(listActivities());\r\n        } else {\r\n            setActivities(activitiesLoad)\r\n        }\r\n    }, [dispatch, activitiesLoad]);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                loading ? <LoadingBox /> \r\n                :\r\n                error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                :\r\n                activities && (\r\n                    <DragDropContext onDragEnd={(result) => {\r\n                        const { source, destination } = result;\r\n                        if (!destination) return;\r\n                        if(source.index === destination.index) return;\r\n                        setActivities(prevActivities => reorder(prevActivities, source.index, destination.index));\r\n                    }}>\r\n                        <div className=\"dragger-title\">Actividades</div>\r\n                        <Droppable droppableId=\"activities\">\r\n                            {(droppableProvided) => (\r\n                                <div \r\n                                    {...droppableProvided.droppableProps}\r\n                                    ref={droppableProvided.innerRef}\r\n                                >\r\n                                    {activities.map((item, index) => (\r\n                                            <Draggable key={item.activityId.toString()} draggableId={item.activityId.toString()} index={index}>\r\n                                                {(draggableProvided) => (\r\n                                                    <div className=\"dragger-container\"\r\n                                                        {...draggableProvided.draggableProps}\r\n                                                        ref={draggableProvided.innerRef}\r\n                                                        {...draggableProvided.dragHandleProps}\r\n                                                    >\r\n                                                        <Avatar className={`avatar-dragger-${item.activity.typeAlert}`}>\r\n                                                            {item.activity.charAt(0)}\r\n                                                        </Avatar>\r\n        \r\n                                                        <div>\r\n                                                            {item.activity}\r\n                                                        </div>\r\n                                                        \r\n                                                        <div>\r\n                                                            <DeleteIcon />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n                                            </Draggable>\r\n                                            \r\n                                    ))}\r\n                                    {droppableProvided.placeholder}\r\n                                </div>\r\n                            )}\r\n        \r\n                        </Droppable>\r\n                    </DragDropContext>\r\n                )\r\n            }\r\n\r\n            <FloatButton props={props} />\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\nimport { ACTIVITY_CREATE_REQUEST, ACTIVITY_CREATE_SUCCESS, ACTIVITY_CREATE_FAIL, ACTIVITY_LIST_REQUEST, ACTIVITY_LIST_FAIL, ACTIVITY_LIST_SUCCESS } from '../constants/activityConstants';\r\n\r\nexport const createActivity = (activity, date) => async (dispatch, useState) => {\r\n    dispatch({ type: ACTIVITY_CREATE_REQUEST });\r\n    const { userSignin: { userInfo }} = useState();\r\n    try {\r\n        const { data } = await axios.post('/api/activities', { activity, date, userId: userInfo.id });\r\n        dispatch({ type: ACTIVITY_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ACTIVITY_CREATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });  \r\n    }\r\n}\r\n\r\nexport const listActivities = () => async (dispatch, useState) => {\r\n    dispatch({ type: ACTIVITY_LIST_REQUEST });\r\n    const { userSignin: { userInfo }} = useState();\r\n    try {\r\n        const { data } = await axios.get(`/api/activities/${userInfo.id}`);\r\n        dispatch({ type: ACTIVITY_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ACTIVITY_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });  \r\n    }\r\n}","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MessageBox from '../../components/MessageBox';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport Select from 'react-select';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listCategories } from '../../actions/categoryActions';\r\nimport { createExpense, listExpenses } from '../../actions/expenseActions';\r\nimport { listSubcategories } from '../../actions/subcategoriesActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SubForm from '../../components/SubForm';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Link } from 'react-router-dom';\r\nimport { createActivity } from '../../actions/activityActions';\r\n\r\nexport default function ActivityCreateScreen(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [state, setState] = useState({ right: true });\r\n    const [activity, setActivity] = useState('');\r\n    const [date, setDate] = useState('');\r\n\r\n    const toggleDrawer = (open) => {\r\n        props.history.push('/activities');\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handlerSubmit = (e) => {\r\n        dispatch(createActivity(activity, date));\r\n    }\r\n\r\n    return (\r\n        <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n            <div className=\"drawer-header\">\r\n                <ArrowBackIcon className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n            </div>\r\n            <div className=\"drawer-body\">\r\n                <div>Crear actividad</div>\r\n                <form className=\"form-modal\" onSubmit={handlerSubmit}>\r\n                    <div>\r\n                        <input\r\n                            type=\"text\"\r\n                            onChange={e => setActivity(e.target.value)}\r\n                            placeholder=\"Actividad\">\r\n                        </input>\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            type=\"date\"\r\n                            onChange={e => setDate(e.target.value)}\r\n                            placeholder=\"Fecha\">\r\n                        </input>\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn secundary\" type=\"submit\">Crear</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Drawer>\r\n    )\r\n}\r\n","export const ENTRY_CREATE_REQUEST = 'ENTRY_CREATE_REQUEST';\r\nexport const ENTRY_CREATE_SUCCESS = 'ENTRY_CREATE_SUCCESS';\r\nexport const ENTRY_CREATE_FAIL = 'ENTRY_CREATE_FAIL';\r\n\r\nexport const ENTRY_GET_REQUEST = 'ENTRY_GET_REQUEST';\r\nexport const ENTRY_GET_SUCCESS = 'ENTRY_GET_SUCCESS';\r\nexport const ENTRY_GET_FAIL = 'ENTRY_GET_FAIL';","import axios from \"axios\"\r\nimport { ENTRY_CREATE_FAIL, ENTRY_CREATE_REQUEST, ENTRY_CREATE_SUCCESS, ENTRY_GET_FAIL, ENTRY_GET_REQUEST, ENTRY_GET_SUCCESS } from \"../constants/entryConstants\"\r\n\r\nexport const createEntry = (entry) => async (dispatch, getState) => {\r\n    dispatch({ type: ENTRY_CREATE_REQUEST })\r\n    const { userSignin: { userInfo } } = getState()\r\n    try {\r\n        const { data } = await axios.post('/api/entries/',\r\n            { ...entry, userUserId: userInfo.id }\r\n        )\r\n        dispatch({ type: ENTRY_CREATE_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ENTRY_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.response\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const listEntries = () => async (dispatch, getState) => {\r\n    dispatch({ type: ENTRY_GET_REQUEST })\r\n    const { userSignin: { userInfo } } = getState()\r\n    try {\r\n        const { data } = await axios.get(`/api/entries/${userInfo.id}`)\r\n        dispatch({ type: ENTRY_GET_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ENTRY_GET_FAIL,\r\n            payload:\r\n                error.response && error.response.data.response\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n}","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listEntries } from \"../../actions/entryActions\";\r\nimport { getMonths } from \"../../actions/utilsActions\";\r\nimport { convertValue } from \"../../common/utils\";\r\nimport FloatButton from \"../../components/FloatButton\";\r\nimport MessageBox from \"../../components/MessageBox\";\r\nimport LoadingBox from \"../../components/utils/LoadingBox\";\r\n\r\nexport default function EntryScreen(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const entriesList = useSelector((state) => state.entriesList);\r\n  const { entries, loading, error } = entriesList;\r\n\r\n  const monthsGet = useSelector((state) => state.monthsGet);\r\n  const { months } = monthsGet;\r\n\r\n  const getMonth = (number) => {\r\n    if (months)\r\n      return months.filter((month) => month.value === number)[0].label;\r\n  };\r\n\r\n  const handleRedirect = (entryId) => {\r\n    props.history.push(`/next-expenses/${entryId}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!entries) dispatch(listEntries());\r\n  }, [entries, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!months) dispatch(getMonths());\r\n  }, [months, dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <LoadingBox />\r\n      ) : error ? (\r\n        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n      ) : (\r\n        entries &&\r\n        entries.map((entry) => (\r\n          <div\r\n            key={entry.entryId}\r\n            className=\"entry-card\"\r\n            onClick={() => handleRedirect(entry.entryId)}\r\n          >\r\n            <div className=\"entry-card-title\">\r\n              <div className=\"entry-card-title-content\">\r\n                {getMonth(entry.date.split(\"-\")[0])}\r\n              </div>\r\n            </div>\r\n            <div className=\"entry-card-info\">\r\n              <div>\r\n                <div>\r\n                  {convertValue(\r\n                    entry.nextExpense.reduce((a, b) => a + parseInt(b.value), 0)\r\n                  )}\r\n                </div>\r\n                <div>Gasto estimado</div>\r\n              </div>\r\n              <div>\r\n                <div>{convertValue(entry.entry)}</div>\r\n                <div>Ingresos</div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div class=\"data-card-circle\"></div>\r\n            </div>\r\n            <div>\r\n              <div class=\"data-card-circle-2\"></div>\r\n            </div>\r\n            <div>\r\n              <div class=\"data-card-circle-3\"></div>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n      <FloatButton props={props} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MessageBox from '../../components/MessageBox';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SubForm from '../../components/SubForm';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Link } from 'react-router-dom';\r\nimport { createEntry, listEntries } from '../../actions/entryActions';\r\nimport { getMonths } from '../../actions/utilsActions';\r\n\r\nexport default function EntryCreateScreen(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const monthsGet = useSelector(state => state.monthsGet);\r\n    const { months } = monthsGet;\r\n\r\n    const entryCreate = useSelector(state => state.entryCreate);\r\n    const { entry, loading: loadingCreate } = entryCreate;\r\n\r\n    const [value, setValue] = useState();\r\n    const [month, setMonth] = useState();\r\n    const [actualMonth, setActualMonth] = useState();\r\n\r\n    const [submit, setSubmit] = useState(false);\r\n    const [state, setState] = useState({ right: true });\r\n\r\n    const toggleDrawer = (open) => {\r\n        props.history.push('/');\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handleClose = useCallback((open) => {\r\n        if (state.right)\r\n            props.history.push('/entries');\r\n        setState({ ...state, right: open });\r\n    }, [setState, state, props]);\r\n\r\n    const handlerSubmit = (e) => {\r\n        e.preventDefault();\r\n        const obj = {\r\n            date: `${month}-${getDate().year}`,\r\n            entry: value,\r\n        }\r\n        setSubmit(true);\r\n        dispatch(createEntry(obj));\r\n    }\r\n\r\n    const getDate = () => {\r\n        let newDate = new Date()\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n\r\n        month = month < 10 ? `0${month}` : `${month}`;\r\n        return ({ month: month, year: year });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (months) {\r\n            setActualMonth(months.filter(month => month.value === getDate().month)[0])\r\n        } else {\r\n            dispatch(getMonths());\r\n        }\r\n    }, [months, dispatch])\r\n\r\n    useEffect(() => {\r\n        if (actualMonth) setMonth(actualMonth.value)\r\n    }, [actualMonth])\r\n\r\n    useEffect(() => {\r\n        if (entry && submit) {\r\n            dispatch(listEntries());\r\n            handleClose(false);\r\n        }\r\n    }, [entry, dispatch, submit, handleClose]);\r\n\r\n    return (\r\n        <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n            <div className=\"drawer-header\">\r\n                <Link to=\"/entries\">\r\n                    <ArrowBackIcon className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n                </Link>\r\n            </div>\r\n            <div className=\"drawer-body\">\r\n                <form className=\"form-modal\" onSubmit={handlerSubmit}>\r\n                    {/* {errorCreate && <MessageBox variant=\"danger\">{errorCreate}</MessageBox>} */}\r\n                    <div className=\"form-title\">\r\n                        <div>Calcular mes</div>\r\n                        <Divider />\r\n                    </div>\r\n\r\n                    <div>\r\n                        {\r\n                            months && actualMonth && (\r\n                                <Select\r\n                                    placeholder=\"Seleccionar mes\"\r\n                                    onChange={e => setMonth(e.value)}\r\n                                    defaultValue={actualMonth}\r\n                                    options={months}\r\n                                />\r\n                            )\r\n                        }\r\n\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            type=\"number\"\r\n                            onChange={e => setValue(e.target.value)}\r\n                            placeholder=\"Ingreso total mes\">\r\n                        </input>\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            loadingCreate ? <LoadingBox /> : (<button className=\"btn secundary\" type=\"submit\">Crear</button>)\r\n                        }\r\n\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Drawer>\r\n    );\r\n}\r\n","export const NEXT_EXPENSE_CREATE_REQUEST = 'NEXT_EXPENSE_CREATE_REQUEST';\r\nexport const NEXT_EXPENSE_CREATE_SUCCESS = 'NEXT_EXPENSE_CREATE_SUCCESS';\r\nexport const NEXT_EXPENSE_CREATE_FAIL = 'NEXT_EXPENSE_CREATE_FAIL';\r\n\r\nexport const NEXT_EXPENSE_GET_REQUEST = 'NEXT_EXPENSE_GET_REQUEST';\r\nexport const NEXT_EXPENSE_GET_SUCCESS = 'NEXT_EXPENSE_GET_SUCCESS';\r\nexport const NEXT_EXPENSE_GET_FAIL = 'NEXT_EXPENSE_GET_FAIL';\r\n\r\nexport const NEXT_EXPENSE_UPDATE_REQUEST = 'NEXT_EXPENSE_UPDATE_REQUEST';\r\nexport const NEXT_EXPENSE_UPDATE_SUCCESS = 'NEXT_EXPENSE_UPDATE_SUCCESS';\r\nexport const NEXT_EXPENSE_UPDATE_FAIL = 'NEXT_EXPENSE_UPDATE_FAIL';","import axios from \"axios\"\r\nimport { NEXT_EXPENSE_CREATE_FAIL, NEXT_EXPENSE_CREATE_REQUEST, NEXT_EXPENSE_CREATE_SUCCESS, NEXT_EXPENSE_GET_FAIL, NEXT_EXPENSE_GET_REQUEST, NEXT_EXPENSE_GET_SUCCESS, NEXT_EXPENSE_UPDATE_FAIL, NEXT_EXPENSE_UPDATE_REQUEST, NEXT_EXPENSE_UPDATE_SUCCESS } from \"../constants/nextExpenseConstants\"\r\n\r\nexport const createNextExpense = (nextExpense) => async (dispatch) => {\r\n    dispatch({ type: NEXT_EXPENSE_CREATE_REQUEST })\r\n    try {\r\n        const { data } = await axios.post('/api/next-expenses/',\r\n            nextExpense\r\n        )\r\n        dispatch({ type: NEXT_EXPENSE_CREATE_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEXT_EXPENSE_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.response\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const listnextExpenses = (entryId) => async (dispatch, getState) => {\r\n    dispatch({ type: NEXT_EXPENSE_GET_REQUEST })\r\n    try {\r\n        const { data } = await axios.get(`/api/next-expenses/${entryId}`)\r\n        dispatch({ type: NEXT_EXPENSE_GET_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEXT_EXPENSE_GET_FAIL,\r\n            payload:\r\n                error.response && error.response.data.response\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateNextExpense = (nextExpenseId, check) => (dispatch) => {\r\n    dispatch({ type: NEXT_EXPENSE_UPDATE_REQUEST })\r\n\r\n    try {\r\n        const { data } = axios.put(`/api/next-expenses/${nextExpenseId}`, {\r\n            check: check\r\n        })\r\n        dispatch({ type: NEXT_EXPENSE_UPDATE_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEXT_EXPENSE_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.response\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listnextExpenses, updateNextExpense } from '../../actions/nextExpenseActions';\r\nimport { convertValue } from '../../common/utils';\r\nimport FloatButton from '../../components/FloatButton';\r\nimport MessageBox from '../../components/MessageBox';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\n\r\nexport default function NextExpenseScreen(props) {\r\n\r\n  const dispatch = useDispatch()\r\n  const entryId = props.match.params.id\r\n\r\n  const [estimated, setEstimated] = useState();\r\n  const [confirmed, setConfirmed] = useState();\r\n\r\n  const nextExpensesList = useSelector(state => state.nextExpensesList)\r\n  const { nextExpenses, loading, error } = nextExpensesList\r\n\r\n  const handleNextExpense = (nextExpenseId, check) => {\r\n    dispatch(updateNextExpense(nextExpenseId, check))\r\n    dispatch(listnextExpenses(entryId))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!nextExpenses) {\r\n      dispatch(listnextExpenses(entryId))\r\n    }\r\n  }, [nextExpenses, entryId, dispatch])\r\n\r\n  useEffect(() => {\r\n    if (nextExpenses) {\r\n      setEstimated(nextExpenses.reduce((a, c) => a + parseInt(c.value), 0))\r\n      setConfirmed(nextExpenses.reduce((a, c) => {\r\n        if (c.check)\r\n          a += parseInt(c.value);\r\n        return a\r\n      }, 0))\r\n    }\r\n\r\n  }, [nextExpenses])\r\n\r\n  useEffect(() => {\r\n    dispatch(listnextExpenses(entryId))\r\n  }, [entryId, dispatch])\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        loading ? <LoadingBox /> :\r\n          error ? <MessageBox variant=\"danger\">{error}</MessageBox> :\r\n            nextExpenses &&\r\n            ( \r\n              <div className=\"next-expense-content\">\r\n                <table className=\"next-expense-table\">\r\n                  <tr>\r\n                    <th>Gasto</th>\r\n                    <th>Valor</th>\r\n                  </tr>\r\n                  {\r\n                    nextExpenses.map(nextExpense => (\r\n                      <tr className={nextExpense.check && \"next-expense-table-confirmated\"} onClick={() => handleNextExpense(nextExpense.nextExpenseId, !nextExpense.check)}>\r\n                        <td>{nextExpense.name}</td>\r\n                        <td>{convertValue(nextExpense.value)}</td>\r\n                      </tr>\r\n                    ))\r\n                  }\r\n                  <tr className='next-expense-table-estimated'>\r\n                    <td ><strong>Estimado</strong></td>\r\n                    <td><strong>{convertValue(estimated)}</strong></td>\r\n                  </tr>\r\n                  <tr className=\"next-expense-table-confirmed\">\r\n                    <td><strong>Confirmado</strong></td>\r\n                    <td><strong>{convertValue(confirmed)}</strong></td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            )\r\n            // :\r\n            // <MessageBox variant=\"danger\">No hay gastos registrados</MessageBox>\r\n      }\r\n      <FloatButton props={props} />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport LoadingBox from \"../../components/utils/LoadingBox\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  createNextExpense,\r\n  listnextExpenses,\r\n} from \"../../actions/nextExpenseActions\";\r\n\r\nexport default function NextExpenseCreateScreen(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const nextExpenseCreate = useSelector((state) => state.nextExpenseCreate);\r\n  const { nextExpense, loading: loadingCreate } = nextExpenseCreate;\r\n\r\n  const [name, setName] = useState();\r\n  const [value, setValue] = useState();\r\n\r\n  const [submit, setSubmit] = useState(false);\r\n  const [state, setState] = useState({ right: true });\r\n\r\n  const toggleDrawer = (open) => {\r\n    props.history.push(\"/next-expenses\");\r\n    setState({ ...state, right: open });\r\n  };\r\n\r\n  const handleClose = useCallback(\r\n    (open) => {\r\n      if (state.right) props.history.push(`/next-expenses/${1}`);\r\n      setState({ ...state, right: open });\r\n    },\r\n    [setState, state, props]\r\n  );\r\n\r\n  const handlerSubmit = (e) => {\r\n    e.preventDefault();\r\n    const obj = {\r\n      value,\r\n      name,\r\n      entryEntryId: 1,\r\n    };\r\n    setSubmit(true);\r\n    dispatch(createNextExpense(obj));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (nextExpense && submit) {\r\n      dispatch(listnextExpenses(1));\r\n      handleClose(false);\r\n    }\r\n  }, [nextExpense, dispatch, submit, handleClose]);\r\n\r\n  return (\r\n    <Drawer\r\n      anchor={\"right\"}\r\n      open={state.right}\r\n      onClose={() => toggleDrawer(false)}\r\n    >\r\n      <div className=\"drawer-header\">\r\n        <Link to=\"/entries\">\r\n          <ArrowBackIcon\r\n            className=\"drawer-back\"\r\n            onClick={() => toggleDrawer(false)}\r\n          />\r\n        </Link>\r\n      </div>\r\n      <div className=\"drawer-body\">\r\n        <form className=\"form-modal\" onSubmit={handlerSubmit}>\r\n          <div className=\"form-title\">\r\n            <div>Ingresar gasto</div>\r\n            <Divider />\r\n          </div>\r\n\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              onChange={(e) => setName(e.target.value)}\r\n              placeholder=\"Nombre del gasto\"\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"number\"\r\n              onChange={(e) => setValue(e.target.value)}\r\n              placeholder=\"Valor\"\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            {loadingCreate ? (\r\n              <LoadingBox />\r\n            ) : (\r\n              <button className=\"btn secundary\" type=\"submit\">\r\n                Crear\r\n              </button>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Drawer>\r\n  );\r\n}\r\n","import {BrowserRouter, Route, Switch, useLocation, HashRouter } from 'react-router-dom';\nimport Sidebar from './components/common/Sidebar';\nimport AlertScreen from './screens/Alert/AlertScreen';\nimport ChartScreen from './screens/ChartScreen';\nimport ExpenseScreen from './screens/Expense/ExpenseScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport LoginScreen from './screens/User/LoginScreen';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport ProfileScreen from './screens/User/ProfileScreen';\nimport RegisterScreen from './screens/User/RegisterScreen';\nimport ExpenseCreateScreen from './screens/Expense/ExpenseCreateScreen';\nimport AlertCreateScreen from './screens/Alert/AlertCreateScreen';\nimport ActivityScreen from './screens/Activity/ActivityScreen';\nimport ActivityCreateScreen from './screens/Activity/ActivityCreateScreen';\nimport EntryScreen from './screens/Entry/EntryScreen';\nimport EntryCreateScreen from './screens/Entry/EntryCreateScreen';\nimport NextExpenseScreen from './screens/nextExpense/NextExpenseScreen';\nimport NextExpenseCreateScreen from './screens/nextExpense/NextExpenseCreateScreen';\n\nfunction App() {\n\n  return (\n    <HashRouter>\n        <Sidebar />\n        <Switch>\n          <Route path=\"*\">\n            <RouteGroup />\n          </Route>\n        </Switch>\n    </HashRouter>\n  );\n}\n\nfunction RouteGroup() {\n\n  let location = useLocation();\n\n  return (\n    <TransitionGroup>\n      <CSSTransition\n        key={location.key}\n        classNames=\"fade\"\n        timeout={300}\n      >\n        <Switch location={location}>\n          <Route path=\"/\" component={HomeScreen} exact></Route>\n\n          <Route path=\"/login\" component={LoginScreen}></Route>\n          <Route path=\"/register\" component={RegisterScreen}></Route>\n          <Route path=\"/profile\" component={ProfileScreen}></Route>\n          <Route path=\"/chart\" component={ChartScreen}></Route>\n\n          <Route path=\"/expenses/:id\" component={ExpenseScreen}></Route>\n          <Route path=\"/expenses-create\" component={ExpenseCreateScreen} exact></Route>\n\n          <Route path=\"/activities\" component={ActivityScreen}></Route>\n          <Route path=\"/activities-create\" component={ActivityCreateScreen}></Route>\n\n          <Route path=\"/alerts\" component={AlertScreen}></Route>\n          <Route path=\"/alerts-create\" component={AlertCreateScreen}></Route>\n\n          <Route path=\"/entries\" component={EntryScreen}></Route>\n          <Route path=\"/entries-create\" component={EntryCreateScreen}></Route>\n\n          <Route path=\"/next-expenses/:id\" component={NextExpenseScreen}></Route>\n          <Route path=\"/next-expenses-create\" component={NextExpenseCreateScreen}></Route>\n        </Switch>\n      </CSSTransition>\n    </TransitionGroup>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, createStore, compose, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {\r\n  createActivityReducer,\r\n  listActivityReducer,\r\n} from \"./reducers/activityReducers\";\r\nimport {\r\n  createAlertReducer,\r\n  listAlertsReducer,\r\n  listTypeAlertsReducer,\r\n  updateAlertReducer,\r\n  deleteAlertReducer,\r\n} from \"./reducers/alertReducers\";\r\nimport {\r\n  createCategoryReducers,\r\n  listCategoriesReducer,\r\n} from \"./reducers/categoryReducers\";\r\nimport {\r\n  createEntryReducer,\r\n  listEntriesReducer,\r\n} from \"./reducers/entryReducer\";\r\nimport {\r\n  createExpenseReducer,\r\n  deleteExpenseReducer,\r\n  listExpenseReducer,\r\n  listExpensesByDateReducer,\r\n  listExpensesReducer,\r\n} from \"./reducers/expenseReducers\";\r\nimport {\r\n  createNextExpenseReducer,\r\n  listNextExpensesReducer,\r\n  updateNextExpenseReducer,\r\n} from \"./reducers/nextExpenseReducer\";\r\nimport {\r\n  createSubcategoryReducer,\r\n  listSubcategoriesReducer,\r\n} from \"./reducers/subcategoryReducers\";\r\nimport {\r\n  registerReducer,\r\n  signinReducer,\r\n  suscribeUserReducer,\r\n} from \"./reducers/userReducer\";\r\nimport {\r\n  getMonthsReducer,\r\n  getMonthsStorageReducer,\r\n  setGroupReducer,\r\n  setNotificationReducer,\r\n} from \"./reducers/utilsReducers\";\r\n\r\nconst initialState = {\r\n  userSignin: {\r\n    userInfo: localStorage.getItem(\"userInfo\")\r\n      ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n      : null,\r\n  },\r\n  setNotification: {\r\n    notification: localStorage.getItem(\"notification\")\r\n      ? JSON.parse(localStorage.getItem(\"notification\"))\r\n      : null,\r\n  },\r\n  groupSet: {\r\n    group: localStorage.getItem(\"group\")\r\n      ? JSON.parse(localStorage.getItem(\"group\"))\r\n      : null,\r\n  },\r\n  monthsGetStorage: {\r\n    months: localStorage.getItem(\"months\")\r\n      ? JSON.parse(localStorage.getItem(\"months\"))\r\n      : null,\r\n  },\r\n};\r\n\r\nconst reducer = combineReducers({\r\n  userSignin: signinReducer,\r\n  register: registerReducer,\r\n  userSuscribe: suscribeUserReducer,\r\n\r\n  expList: listExpenseReducer,\r\n  expenseList: listExpensesReducer,\r\n  expensesByDateList: listExpensesByDateReducer,\r\n  expenseCreate: createExpenseReducer,\r\n  expenseDelete: deleteExpenseReducer,\r\n\r\n  categoryCreate: createCategoryReducers,\r\n  categoriesList: listCategoriesReducer,\r\n\r\n  subcategoriesList: listSubcategoriesReducer,\r\n  subcategoryCreate: createSubcategoryReducer,\r\n\r\n  alertList: listAlertsReducer,\r\n  alertActiveUpdate: updateAlertReducer,\r\n  alertCreate: createAlertReducer,\r\n  alertTypeList: listTypeAlertsReducer,\r\n  alertDelete: deleteAlertReducer,\r\n\r\n  monthsGet: getMonthsReducer,\r\n  monthsGetStorage: getMonthsStorageReducer,\r\n  setNotification: setNotificationReducer,\r\n  groupSet: setGroupReducer,\r\n\r\n  activityCreate: createActivityReducer,\r\n  activitiesList: listActivityReducer,\r\n\r\n  entryCreate: createEntryReducer,\r\n  entriesList: listEntriesReducer,\r\n\r\n  nextExpenseCreate: createNextExpenseReducer,\r\n  nextExpensesList: listNextExpensesReducer,\r\n  nextExpenseUpdate: updateNextExpenseReducer,\r\n});\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeEnhancer(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGIN_FAIL, USER_SIGIN_REQUEST, USER_SIGIN_SUCCESS, USER_SUSCRIBE_FAIL, USER_SUSCRIBE_REQUEST, USER_SUSCRIBE_SUCCESS } from \"../constants/userConstants\";\r\n\r\nexport const signinReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case USER_SIGIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_SIGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload, success:true };\r\n        case USER_SIGIN_FAIL:\r\n            return { loading: false, error: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const registerReducer = (state = { loading:true }, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true };\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, user: action.payload };\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const suscribeUserReducer = (state = { loading: true }, action) => {\r\n    switch (action.type){\r\n        case USER_SUSCRIBE_REQUEST:\r\n            return {loading: true };\r\n        case USER_SUSCRIBE_SUCCESS:\r\n            return { loading: false, suscribe: action.payload };\r\n        case USER_SUSCRIBE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n  EXPENSE_CREATE_FAIL,\r\n  EXPENSE_CREATE_REQUEST,\r\n  EXPENSE_CREATE_SUCCESS,\r\n  EXPENSE_DELETE_FAIL,\r\n  EXPENSE_DELETE_REQUEST,\r\n  EXPENSE_DELETE_SUCCESS,\r\n  EXPENSE_LIST_BY_DATE_FAIL,\r\n  EXPENSE_LIST_BY_DATE_REQUEST,\r\n  EXPENSE_LIST_BY_DATE_SUCCESS,\r\n  EXPENSE_LIST_FAIL,\r\n  EXPENSE_LIST_REQUEST,\r\n  EXPENSE_LIST_SUCCESS,\r\n  EXP_LIST_FAIL,\r\n  EXP_LIST_REQUEST,\r\n  EXP_LIST_SUCCESS,\r\n} from \"../constants/expenseConstants\";\r\n\r\nexport const listExpensesReducer = (state = { loading: true }, action) => {\r\n  switch (action.type) {\r\n    case EXPENSE_LIST_REQUEST:\r\n      return { loading: true };\r\n    case EXPENSE_LIST_SUCCESS:\r\n      return { loading: false, expenses: action.payload };\r\n    case EXPENSE_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const listExpensesByDateReducer = (\r\n  state = { loading: true },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case EXPENSE_LIST_BY_DATE_REQUEST:\r\n      return { loading: true };\r\n    case EXPENSE_LIST_BY_DATE_SUCCESS:\r\n      return { loading: false, expenses: action.payload };\r\n    case EXPENSE_LIST_BY_DATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const listExpenseReducer = (state = { loading: true }, action) => {\r\n  switch (action.type) {\r\n    case EXP_LIST_REQUEST:\r\n      return { loading: true };\r\n    case EXP_LIST_SUCCESS:\r\n      return { loading: false, expense: action.payload };\r\n    case EXP_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createExpenseReducer = (state = { loading: false }, action) => {\r\n  switch (action.type) {\r\n    case EXPENSE_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case EXPENSE_CREATE_SUCCESS:\r\n      return { loading: false, expense: action.payload };\r\n    case EXPENSE_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const deleteExpenseReducer = (state = { loading: false }, action) => {\r\n  switch (action.type) {\r\n    case EXPENSE_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case EXPENSE_DELETE_SUCCESS:\r\n      return { loading: false, expense: action.payload };\r\n    case EXPENSE_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { CATEGORY_CREATE_FAIL, CATEGORY_CREATE_REQUEST, CATEGORY_CREATE_SUCCESS, CATEGORY_LIST_FAIL, CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS } from \"../constants/categoryConstants\";\r\n\r\nexport const createCategoryReducers = (state = {loading: true }, action) => {\r\n    switch (action.type) {\r\n        case CATEGORY_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case CATEGORY_CREATE_SUCCESS:\r\n            return { loading: false, category: action.payload };\r\n        case CATEGORY_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const listCategoriesReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case CATEGORY_LIST_REQUEST:\r\n            return { loading: true };\r\n        case CATEGORY_LIST_SUCCESS:\r\n            return { loading:false, categories: action.payload };\r\n        case CATEGORY_LIST_FAIL:\r\n            return { loading:false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { SUBCATEGORY_CREATE_FAIL, SUBCATEGORY_CREATE_REQUEST, SUBCATEGORY_CREATE_SUCCESS, SUBCATEGORY_LIST_BY_CATEGORY_FAIL, SUBCATEGORY_LIST_BY_CATEGORY_REQUEST, SUBCATEGORY_LIST_BY_CATEGORY_SUCCESS, SUBCATEGORY_LIST_FAIL, SUBCATEGORY_LIST_REQUEST, SUBCATEGORY_LIST_SUCCESS } from \"../constants/subcategoriesConstants\";\r\n\r\nexport const listSubcategoriesReducer = (state = { loading: true }, action) =>{\r\n    switch (action.type) {\r\n        case SUBCATEGORY_LIST_REQUEST:\r\n            return { loading: true };\r\n        case SUBCATEGORY_LIST_SUCCESS:\r\n            return { loading: false, subcategories: action.payload };\r\n        case SUBCATEGORY_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const listSubcategoriesByCategoriesReducer = ( state = { loading: false }, action) => {\r\n    switch (action.type) {\r\n        case SUBCATEGORY_LIST_BY_CATEGORY_REQUEST:\r\n            return { loading: true };\r\n        case SUBCATEGORY_LIST_BY_CATEGORY_SUCCESS:\r\n            return { loading: false, subcategories: action.payload };\r\n        case SUBCATEGORY_LIST_BY_CATEGORY_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    } \r\n}\r\n\r\nexport const createSubcategoryReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case SUBCATEGORY_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case SUBCATEGORY_CREATE_SUCCESS:\r\n            return { loading: false, subcategory: action.payload };\r\n        case SUBCATEGORY_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { ALERT_CREATE_FAIL, ALERT_CREATE_REQUEST, ALERT_CREATE_SUCCESS, ALERT_DELETE_FAIL, ALERT_DELETE_REQUEST, ALERT_DELETE_SUCCESS, ALERT_LIST_FAIL, ALERT_LIST_REQUEST, ALERT_LIST_SUCCESS, ALERT_UPDATE_FAIL, ALERT_UPDATE_REQUEST, ALERT_UPDATE_SUCCESS, TYPE_ALERT_LIST_FAIL, TYPE_ALERT_LIST_REQUEST, TYPE_ALERT_LIST_SUCCESS } from \"../constants/alertConstants\";\r\n\r\nexport const listAlertsReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ALERT_LIST_REQUEST:\r\n            return { loading: true }\r\n        case ALERT_LIST_SUCCESS:\r\n            return { loading: false, alerts: action.payload };\r\n        case ALERT_LIST_FAIL:\r\n            return { loading: false };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const updateAlertReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ALERT_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case ALERT_UPDATE_SUCCESS:\r\n            return { loading: false, alert: action.payload };\r\n        case ALERT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n} \r\n\r\nexport const createAlertReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ALERT_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case ALERT_CREATE_SUCCESS:\r\n            return { loading: false, alert: action.payload };\r\n        case ALERT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const listTypeAlertsReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case TYPE_ALERT_LIST_REQUEST:\r\n            return { loading: true };\r\n        case TYPE_ALERT_LIST_SUCCESS:\r\n            return { loading: false, typeAlerts: action.payload };\r\n        case TYPE_ALERT_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const deleteAlertReducer = ( state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ALERT_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case ALERT_DELETE_SUCCESS:\r\n            return { loading: false, success: action.payload };\r\n        case ALERT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n  GET_MONTHS_FAIL,\r\n  GET_MONTHS_REQUEST,\r\n  GET_MONTHS_SUCCESS,\r\n  SET_FILTERS_FAIL,\r\n  SET_FILTERS_REQUEST,\r\n  SET_FILTERS_SUCCESS,\r\n  SET_GROUP_FAIL,\r\n  SET_GROUP_REQUEST,\r\n  SET_GROUP_SUCCESS,\r\n  SET_NOTIFICATIONS_FAIL,\r\n  SET_NOTIFICATIONS_REQUEST,\r\n  SET_NOTIFICATIONS_SUCCESS,\r\n} from \"../constants/utilsConstants\";\r\n\r\nexport const getMonthsReducer = (state = { loading: true }, action) => {\r\n  switch (action.type) {\r\n    case GET_MONTHS_REQUEST:\r\n      return { loading: true };\r\n    case GET_MONTHS_SUCCESS:\r\n      return { loading: false, months: action.payload };\r\n    case GET_MONTHS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setNotificationReducer = (state = { loading: true }, action) => {\r\n  switch (action.type) {\r\n    case SET_NOTIFICATIONS_REQUEST:\r\n      return { loading: true };\r\n    case SET_NOTIFICATIONS_SUCCESS:\r\n      return { loading: false, notification: [action.payload] };\r\n    case SET_NOTIFICATIONS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setGroupReducer = (state = { loading: true }, action) => {\r\n  switch (action.type) {\r\n    case SET_GROUP_REQUEST:\r\n      return { loading: true };\r\n    case SET_GROUP_SUCCESS:\r\n      return { loading: false, group: action.payload };\r\n    case SET_GROUP_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getMonthsStorageReducer = (state = { loading: true }, action) => {\r\n  switch (action.type) {\r\n    case SET_FILTERS_REQUEST:\r\n      return { loading: true };\r\n    case SET_FILTERS_SUCCESS:\r\n      return { loading: false, filters: action.payload };\r\n    case SET_FILTERS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ACTIVITY_CREATE_FAIL, ACTIVITY_CREATE_REQUEST, ACTIVITY_CREATE_SUCCESS, ACTIVITY_LIST_FAIL, ACTIVITY_LIST_REQUEST, ACTIVITY_LIST_SUCCESS } from \"../constants/activityConstants\";\r\n\r\nexport const createActivityReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ACTIVITY_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case ACTIVITY_CREATE_SUCCESS:\r\n            return { loading: false, activity: action.payload };\r\n        case ACTIVITY_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const listActivityReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ACTIVITY_LIST_REQUEST:\r\n            return { loading: true };\r\n        case ACTIVITY_LIST_SUCCESS:\r\n            return { loading: false, activities: action.payload };\r\n        case ACTIVITY_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { ENTRY_CREATE_FAIL, ENTRY_CREATE_REQUEST, ENTRY_CREATE_SUCCESS, ENTRY_GET_FAIL, ENTRY_GET_REQUEST, ENTRY_GET_SUCCESS } from \"../constants/entryConstants\";\r\n\r\nexport const createEntryReducer = (state = { loading: false }, action) => {\r\n    switch (action.type) {\r\n        case ENTRY_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case ENTRY_CREATE_SUCCESS:\r\n            return { loading: false, entry: action.payload }\r\n        case ENTRY_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const listEntriesReducer = (state = { loading: false }, action) => {\r\n    switch (action.type) {\r\n        case ENTRY_GET_REQUEST:\r\n            return { loading: true }\r\n        case ENTRY_GET_SUCCESS:\r\n            return { loading: false, entries: action.payload }\r\n        case ENTRY_GET_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","import { NEXT_EXPENSE_CREATE_FAIL, NEXT_EXPENSE_CREATE_REQUEST, NEXT_EXPENSE_CREATE_SUCCESS, NEXT_EXPENSE_GET_FAIL, NEXT_EXPENSE_GET_REQUEST, NEXT_EXPENSE_GET_SUCCESS, NEXT_EXPENSE_UPDATE_FAIL, NEXT_EXPENSE_UPDATE_REQUEST, NEXT_EXPENSE_UPDATE_SUCCESS } from \"../constants/nextExpenseConstants\"\r\n\r\nexport const createNextExpenseReducer = (state = { loading: false }, action) => {\r\n    switch (action.type) {\r\n        case NEXT_EXPENSE_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case NEXT_EXPENSE_CREATE_SUCCESS:\r\n            return { loading: false, nextExpense: action.payload }\r\n        case NEXT_EXPENSE_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const listNextExpensesReducer = (state = { loading: false }, action) => {\r\n    switch (action.type) {\r\n        case NEXT_EXPENSE_GET_REQUEST:\r\n            return { loading: true }\r\n        case NEXT_EXPENSE_GET_SUCCESS:\r\n            return { loading: false, nextExpenses: action.payload }\r\n        case NEXT_EXPENSE_GET_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const updateNextExpenseReducer = (state = { loading: false }, action) => {\r\n    switch (action.type) {\r\n        case NEXT_EXPENSE_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case NEXT_EXPENSE_UPDATE_SUCCESS:\r\n            return { loading: false, updated: action.payload }\r\n        case NEXT_EXPENSE_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\nimport { subscribeUser } from \"./actions/userActions\";\nimport store from './store';\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nconst PUBLIC_VAPID_KEY = \"BDDk3ILb3FjIjAvTs9PWMoObhChnrBUYwHAsdplom7fePD36G6ZFJumGgSe6C4M3pOpYvFb38XX2wJRIN4B6V_0\";\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n            serviceSubscribeUser(registration);\n          }\n        };\n      };\n\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction serviceSubscribeUser(registration) {\n\n  var serviceWorker;\n\n  if (registration.installing) {\n      serviceWorker = registration.installing;\n  } else if (registration.waiting) {\n      serviceWorker = registration.waiting;\n  } else if (registration.active) {\n      serviceWorker = registration.active;\n  }\n\n  if (serviceWorker) {\n    if (serviceWorker.state === \"activated\") {\n        console.log(\"sw already activated - Do watever needed here\");\n    }\n    serviceWorker.addEventListener(\"statechange\", function(e) {\n      \n        if (e.target.state ===\"activated\") {\n\n          registration.pushManager.subscribe({\n            userVisibleOnly: true,\n            applicationServerKey: PUBLIC_VAPID_KEY\n          })\n          .then((suscription) => {\n            store.dispatch(subscribeUser(suscription));\n          });\n        }\n    });\n  }\n  return <div></div>\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}