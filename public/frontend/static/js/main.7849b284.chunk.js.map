{"version":3,"sources":["constants/userConstants.js","components/Drawers/DrawerNotification.js","components/common/Sidebar.js","actions/userActions.js","components/MessageBox.js","components/utils/LoadingBox.js","constants/categoryConstants.js","actions/categoryActions.js","constants/expenseConstants.js","actions/expenseActions.js","constants/subcategoriesConstants.js","actions/subcategoriesActions.js","components/SubForm.js","components/Drawers/DrawerExpense.js","components/FloatButton.js","constants/alertConstants.js","actions/alertActions.js","components/Drawers/DrawerAlert.js","screens/AlertScreen.js","screens/ChartScreen.js","constants/utilsConstants.js","actions/utilsActions.js","components/SelectDate.js","screens/HomeScreen.js","screens/LoginScreen.js","screens/ProfileScreen.js","screens/RegisterScreen.js","App.js","reportWebVitals.js","store.js","reducers/userReducer.js","reducers/expenseReducers.js","reducers/categoryReducers.js","reducers/subcategoryReducers.js","reducers/alertReducers.js","reducers/utilsReducers.js","serviceWorkerRegistration.js","index.js"],"names":["USER_SIGIN_REQUEST","USER_SIGIN_SUCCESS","USER_SIGIN_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_SUSCRIBE_REQUEST","USER_SUSCRIBE_SUCCESS","USER_SUSCRIBE_FAIL","DrawerNotification","props","state","setState","useState","title","priority","message","notifications","toggleDrawer","open","item","right","Drawer","anchor","onClose","className","id","onClick","map","Avatar","useStyles","makeStyles","theme","menuButton","marginRight","spacing","menuContent","position","menuItems","cursor","hide","display","drawer","width","flexShrink","drawerPaper","drawerHeader","alignItems","justifyContent","height","contentHeader","color","background","backgroundSize","button","icon","accountContent","margin","textAlign","accountIcon","fontSize","iconsSidebar","list","Sidebar","dispatch","useDispatch","classes","useTheme","React","setOpen","anchorEl","setAnchorEl","userInfo","useSelector","userSignin","handleDrawerClose","handlerSignout","a","localStorage","removeItem","type","window","location","reload","handleClose","option","root","CssBaseline","AppBar","Toolbar","IconButton","edge","clsx","Typography","to","Badge","badgeContent","event","currentTarget","keepMounted","Boolean","MenuItem","variant","paper","direction","List","username","ListItem","ListItemIcon","ListItemText","primary","Divider","MessageBox","children","LoadingBox","CATEGORY_CREATE_REQUEST","CATEGORY_CREATE_SUCCESS","CATEGORY_CREATE_FAIL","CATEGORY_LIST_REQUEST","CATEGORY_LIST_SUCCESS","CATEGORY_LIST_FAIL","listCategories","axios","get","data","payload","response","EXPENSE_LIST_REQUEST","EXPENSE_LIST_SUCCESS","EXPENSE_LIST_FAIL","EXPENSE_CREATE_REQUEST","EXPENSE_CREATE_SUCCESS","EXPENSE_CREATE_FAIL","listExpenses","months","groupers","getState","post","headers","Authorization","token","SUBCATEGORY_LIST_REQUEST","SUBCATEGORY_LIST_SUCCESS","SUBCATEGORY_LIST_FAIL","SUBCATEGORY_CREATE_REQUEST","SUBCATEGORY_CREATE_SUCCESS","SUBCATEGORY_CREATE_FAIL","listSubcategories","categoryId","SubForm","showNew","category","categoryCreate","subcategory","subcategoryCreate","name","setname","setTitle","submitCategory","setSubmitCategory","submitSubcategory","setSubmitSubcategory","useEffect","maxLength","onChange","e","target","value","placeholder","userId","createCategory","createSubcategory","DrawerExpense","description","setDescription","setValue","date","setDate","setCategory","setSubcategory","today","setToday","submit","setSubmit","load","setLoad","showNewCategory","setShowNewCateogry","showNewSubcategory","setShowNewSubcategory","categoriesList","loading","error","categories","expenseCreate","expense","loadingSuccess","errorCreate","subcategoriesList","subcategories","loadingSubcategory","errorSubcategory","loadCategories","useCallback","length","newDate","Date","getDate","month","getMonth","year","getFullYear","split","onSubmit","preventDefault","objExpense","categoryCategoryId","subcategorySubcategoryId","userUserId","createExpense","handlerCategory","defaultValue","options","handletDate","FloatButton","ALERT_LIST_REQUEST","ALERT_LIST_SUCCESS","ALERT_LIST_FAIL","ALERT_UPDATE_REQUEST","ALERT_UPDATE_SUCCESS","ALERT_UPDATE_FAIL","ALERT_CREATE_REQUEST","ALERT_CREATE_SUCCESS","ALERT_CREATE_FAIL","ALERT_DELETE_REQUEST","ALERT_DELETE_SUCCESS","ALERT_DELETE_FAIL","TYPE_ALERT_LIST_REQUEST","TYPE_ALERT_LIST_SUCCESS","TYPE_ALERT_LIST_FAIL","listAlerts","updateAlertActive","alert","put","DrawerAlert","editAlert","edit","days","setDays","selectDay","setSelectDay","selectType","setSelectType","day","setDay","setMessage","alertCreate","alertSuccess","alertActiveUpdate","alertTypeList","typeAlerts","loadingTypes","Array","keys","push","label","filter","Fragment","active","createAlert","AlertScreen","rows","setRows","send","setSend","setEditAlert","setEdit","submitDelete","setSubmitDelete","alertList","alerts","success","alertDelete","handleDelete","alertId","Swal","fire","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","delete","deleted","deleteAlert","typesalert","typeAlert","checked","handleActive","ChartScreen","labels","setLabels","setData","expenses","expenseList","datasets","backgroundColor","borderColor","borderWidth","maintainAspectRatio","GET_MONTHS_REQUEST","GET_MONTHS_SUCCESS","GET_MONTHS_FAIL","getMonths","SelectDate","monthsGet","monthSelect","setMonthSelect","monthsSelect","setMonthsSelect","agrupadores","setAgrupadores","groupesSelect","setSelectGroupes","isMulti","items","handlerMonth","handlerGrouper","HomeScreen","setSuccess","datatable","setDatatable","setMonth","convertDate","history","columns","field","attributes","Intl","NumberFormat","format","reduce","c","parseInt","hover","searchTop","paging","info","searchBottom","slice","expenseId","LoginScreen","setUsername","password","setPassword","userData","setItem","JSON","stringify","ProfileScreen","RegisterScreen","confirmPassword","setConfirmPassword","email","setEmail","setError","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","getItem","parse","reducer","combineReducers","action","register","user","userSuscribe","suscribe","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","isLocalhost","hostname","match","PUBLIC_VAPID_KEY","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","waiting","addEventListener","pushManager","subscribe","userVisibleOnly","applicationServerKey","suscription","subscribeUser","serviceSubscribeUser","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","fetch","contentType","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.7849b284.chunk.js","sourcesContent":["export const USER_SIGIN_REQUEST = \"USER_SIGIN_REQUEST\";\r\nexport const USER_SIGIN_SUCCESS = \"USER_SIGIN_SUCCESS\";\r\nexport const USER_SIGIN_FAIL = \"USER_SIGIN_FAIL\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_SUSCRIBE_REQUEST = \"USER_SUSCRIBE_REQUEST\";\r\nexport const USER_SUSCRIBE_SUCCESS = \"USER_SUSCRIBE_SUCCESS\";\r\nexport const USER_SUSCRIBE_FAIL = \"USER_SUSCRIBE_FAIL\";\r\n\r\nexport const USER_SIGNOUT_FAIL = \"USER_SIGNOUT_FAIL\";\r\n\r\nexport const PUBLIC_VAPID_KEY = \"BDDk3ILb3FjIjAvTs9PWMoObhChnrBUYwHAsdplom7fePD36G6ZFJumGgSe6C4M3pOpYvFb38XX2wJRIN4B6V_0\";\r\n","import { Avatar, Drawer } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\nexport default function DrawerNotification(props) {\r\n\r\n    const { state, setState } = props;\r\n\r\n    const [notifications, setNotifications] = useState([\r\n        {\r\n            title: 'Pilas, parce',\r\n            priority: 'Alta',\r\n            message: 'Pagar el arriendo'\r\n        },\r\n        {\r\n            title: 'Ojo, papi..',\r\n            priority: 'Media',\r\n            message: 'Pagar el internet rapido'\r\n        }\r\n    ]);\r\n\r\n    const toggleDrawer = (open, item) => {\r\n        setState({ ...state, right: open });\r\n    };\r\n    return (\r\n        <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n            <div className=\"drawer-header\">\r\n              <ArrowBackIcon id=\"close\" className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n              <NotificationsIcon />\r\n            </div>\r\n            <div className=\"drawer-body\">\r\n                {\r\n                    notifications.map(item => (\r\n                        <div className=\"card-notifcation\">\r\n                            <div>\r\n                                <Avatar className={`card-alert-${item.priority}`}>\r\n                                    R\r\n                                </Avatar>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div>{item.title}</div>\r\n                                <div>{item.message}</div>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </Drawer>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signout } from '../../actions/userActions';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChart';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport DrawerNotification from '../Drawers/DrawerNotification';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  menuContent: {\r\n    position: 'absolute',\r\n    right: '2%',\r\n  },\r\n  menuItems: {\r\n    marginRight: '1rem',\r\n    cursor: 'pointer'\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    height: '10vh'\r\n  },\r\n  contentHeader:{\r\n    color: 'white',\r\n    background: 'url(images/background/sidebar.jpg)',\r\n    backgroundSize: '100%'\r\n  },\r\n  button:{\r\n    color: 'white'\r\n  },\r\n  icon:{\r\n    color: '#080058'\r\n  },\r\n  accountContent:{\r\n    width: '5rem',\r\n    margin: '0.5rem',\r\n    // marginTop: '-2.5rem',\r\n    // marginBottom: '2.5rem',\r\n    textAlign: 'center',\r\n    // margin: '0 auto',\r\n    // border: '1px solid black'\r\n  },\r\n  accountIcon:{\r\n    fontSize: '4rem'\r\n  },\r\n  iconsSidebar:{\r\n    color: '#FFFFFF'\r\n  },\r\n  list:{\r\n    color: '#000000'\r\n  }\r\n}));\r\n\r\nexport default function Sidebar() {\r\n\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const userSignin = useSelector(state => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handlerSignout = () => {\r\n    dispatch(signout());\r\n    window.location.reload();\r\n  }\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (option) => {\r\n\r\n    setAnchorEl(null);\r\n\r\n    switch (option) {\r\n      case 'logout':\r\n        handlerSignout();\r\n        break;\r\n    \r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const [state, setState] = React.useState({ right: false });\r\n\r\n  const toggleDrawer = (open) => {\r\n      setState({ ...state, right: open });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        userInfo && (\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <AppBar\r\n            position=\"relative\"\r\n          >\r\n            <Toolbar>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={handleDrawerOpen}\r\n                edge=\"start\"\r\n                className={clsx(classes.menuButton, open && classes.hide)}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n\r\n              <Typography className={classes.menuContent}>\r\n                <Link className={classes.iconsSidebar} to=\"#\">\r\n                <Badge className={classes.menuItems} onClick={() => toggleDrawer(true)} badgeContent={4} color=\"primary\">\r\n                  <NotificationsIcon  />\r\n                </Badge>\r\n                </Link>\r\n                <Link to=\"#\" onClick={handleClick} className={classes.iconsSidebar}>\r\n                  <PersonIcon />\r\n                  <ArrowDropDownIcon />\r\n                </Link>\r\n                <Menu\r\n                  id=\"simple-menu\"\r\n                  anchorEl={anchorEl}\r\n                  keepMounted\r\n                  open={Boolean(anchorEl)}\r\n                  onClose={() => handleClose()}\r\n                >\r\n                  <Link to=\"/profile\">\r\n                    <MenuItem onClick={() => handleClose()}>Perfil</MenuItem>\r\n                  </Link>\r\n                  <MenuItem onClick={() => handleClose('logout')}>Cerrar sesión</MenuItem>\r\n                </Menu>\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n\r\n          <DrawerNotification\r\n                state={state}\r\n                setState={setState}\r\n          />\r\n          \r\n          <Drawer\r\n            className={classes.drawer}\r\n            variant=\"persistent\"\r\n            anchor=\"left\"\r\n            open={open}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n          >\r\n            <div className={classes.contentHeader}>\r\n              <div className={classes.drawerHeader}>\r\n                <IconButton className={classes.button} onClick={handleDrawerClose}>\r\n                  {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                </IconButton>\r\n              </div>\r\n\r\n\r\n              <List className={classes.accountContent}>\r\n                <AccountCircleIcon className={classes.accountIcon}  />\r\n                {userInfo.username}\r\n              </List>\r\n            </div>\r\n\r\n            <List>\r\n                <Link className={classes.list} to=\"/\">\r\n                  <ListItem onClick={handleDrawerClose} button>\r\n                    <ListItemIcon><HomeIcon className={classes.icon} /></ListItemIcon>\r\n                    <ListItemText primary=\"Inicio\" />\r\n                  </ListItem>\r\n                </Link>\r\n                <Link className={classes.list} to=\"/chart\">\r\n                  <ListItem onClick={handleDrawerClose} button>\r\n                    <ListItemIcon><InsertChartIcon className={classes.icon} /></ListItemIcon>\r\n                    <ListItemText primary=\"Graficos\" />\r\n                  </ListItem>\r\n                </Link>\r\n                <Link className={classes.list} to=\"/alert\">\r\n                  <ListItem onClick={handleDrawerClose} button>\r\n                    <ListItemIcon><NotificationsIcon className={classes.icon} /></ListItemIcon>\r\n                    <ListItemText primary=\"Alertas\" />\r\n                  </ListItem>\r\n                </Link>\r\n                <ListItem className={classes.list} onClick={handleDrawerClose} button>\r\n                  <ListItemIcon><AttachMoneyIcon className={classes.icon} /></ListItemIcon>\r\n                  <ListItemText primary=\"Ingresos\" />\r\n                </ListItem>\r\n                <ListItem className={classes.list} onClick={handleDrawerClose} button>\r\n                  <ListItemIcon><UpdateIcon className={classes.icon} /></ListItemIcon>\r\n                  <ListItemText primary=\"Proximos gastos\" />\r\n                </ListItem>\r\n                <ListItem className={classes.list} onClick={handleDrawerClose} button>\r\n                  <ListItemIcon><FormatListBulletedIcon className={classes.icon} /></ListItemIcon>\r\n                  <ListItemText primary=\"Pendientes\" />\r\n                </ListItem>\r\n            </List>\r\n            <Divider />\r\n          </Drawer>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n        USER_REGISTER_FAIL,\r\n        USER_REGISTER_REQUEST,\r\n        USER_REGISTER_SUCCESS,\r\n        USER_SIGIN_FAIL,\r\n        USER_SIGIN_REQUEST,\r\n        USER_SIGIN_SUCCESS,\r\n        USER_SIGNOUT_FAIL,\r\n        USER_SUSCRIBE_FAIL,\r\n        USER_SUSCRIBE_REQUEST,\r\n        USER_SUSCRIBE_SUCCESS \r\n        } from \"../constants/userConstants\";\r\nimport axios from 'axios';\r\n\r\nexport const signin = (userData) => async (dispatch) => {\r\n    dispatch({ type: USER_SIGIN_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.post('/api/users/signin', userData);\r\n        dispatch({type: USER_SIGIN_SUCCESS, payload: data });\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_SIGIN_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });\r\n    }\r\n}\r\n\r\nexport const signout = () => async(dispatch) => {\r\n    localStorage.removeItem('userInfo');;\r\n    dispatch({ type: USER_SIGNOUT_FAIL });\r\n}\r\n\r\nexport const registerUser = (userData) => async(dispatch) => {\r\n    dispatch({ type:USER_REGISTER_REQUEST, payload: userData });\r\n    try {\r\n       const { data } = await axios.post('/api/users/register', userData);\r\n       dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n       dispatch({ type: USER_SIGIN_SUCCESS, payload: data });\r\n       localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });\r\n    }\r\n}\r\n\r\nexport const subscribeUser = (suscription) => async (dispatch, getState) => {\r\n    dispatch({ type: USER_SUSCRIBE_REQUEST });\r\n    try {\r\n        const { userSignin: { userInfo } } = getState();\r\n\r\n        const { data } = await axios.post('/api/users/suscription', {\r\n            suscription: suscription,\r\n            userId: userInfo ? userInfo.id  : 1\r\n        });\r\n        dispatch({ type: USER_SUSCRIBE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_SUSCRIBE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });\r\n    }\r\n}","import React from 'react';\r\n// import Alert from '@material-ui/lab/Alert';\r\n\r\nexport default function MessageBox(props) {\r\n    return (\r\n        // <Alert severity=\"error\">Error</Alert>\r\n        <div className={`alert alert-${props.variant || 'info'}`}>\r\n            {props.children} \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function LoadingBox() {\r\n    return (\r\n        <div>\r\n            <div className='spinner'></div>\r\n        </div>\r\n    )\r\n}\r\n","export const CATEGORY_CREATE_REQUEST = \"CATEGORY_CREATE_REQUEST\";\r\nexport const CATEGORY_CREATE_SUCCESS = \"CATEGORY_CREATE_SUCCESS\";\r\nexport const CATEGORY_CREATE_FAIL = \"CATEGORY_CREATE_FAIL\";\r\n\r\nexport const CATEGORY_LIST_REQUEST = \"CATEGORY_LIST_REQUEST\";\r\nexport const CATEGORY_LIST_SUCCESS = \"CATEGORY_LIST_SUCCESS\";\r\nexport const CATEGORY_LIST_FAIL = \"CATEGORY_LIST_FAIL\";","import axios from \"axios\";\r\nimport { CATEGORY_CREATE_FAIL, CATEGORY_CREATE_REQUEST, CATEGORY_CREATE_SUCCESS, CATEGORY_LIST_FAIL, CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS } from \"../constants/categoryConstants\"\r\n\r\nexport const listCategories = () => async(dispatch, useState) => {\r\n    dispatch({type:  CATEGORY_LIST_REQUEST });\r\n    const { userSignin: { userInfo }} = useState();\r\n    try {\r\n        const { data } = await axios.get(`/api/categories/${userInfo.id}`);\r\n        dispatch({ type: CATEGORY_LIST_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CATEGORY_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        }); \r\n    }\r\n}\r\n\r\nexport const createCategory = (name) => async(dispatch, useState) => {\r\n    dispatch({ type: CATEGORY_CREATE_REQUEST, payload: name});\r\n    const { userSignin: { userInfo } } = useState();\r\n    try {\r\n        const { data } = await axios.post('/api/categories/', {\r\n            name: name,\r\n            userId: userInfo.id\r\n        });\r\n        dispatch({ type: CATEGORY_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CATEGORY_CREATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}","export const EXPENSE_LIST_REQUEST = 'EXPENSE_LIST_REQUEST';\r\nexport const EXPENSE_LIST_SUCCESS = 'EXPENSE_LIST_SUCCESS';\r\nexport const EXPENSE_LIST_FAIL = 'EXPENSE_LIST_FAIL';\r\n\r\nexport const EXPENSE_CREATE_REQUEST = 'EXPENSE_CREATE_REQUEST';\r\nexport const EXPENSE_CREATE_SUCCESS = 'EXPENSE_CREATE_SUCCESS';\r\nexport const EXPENSE_CREATE_FAIL = 'EXPENSE_CREATE_FAIL';","import axios from \"axios\";\r\nimport { EXPENSE_CREATE_FAIL, EXPENSE_CREATE_REQUEST, EXPENSE_CREATE_SUCCESS, EXPENSE_LIST_FAIL, EXPENSE_LIST_REQUEST, EXPENSE_LIST_SUCCESS } from \"../constants/expenseConstants\"\r\n\r\nexport const listExpenses = (months, groupers) => async(dispatch, getState) =>{\r\n    dispatch({ type: EXPENSE_LIST_REQUEST });\r\n    const { userSignin : { userInfo }} = getState();\r\n    try {\r\n        const { data } = await axios.post(`/api/expenses/${userInfo.id}`,{\r\n            months: months,\r\n            groupers: groupers,\r\n        }, {\r\n            headers:{\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        });\r\n        dispatch({ type: EXPENSE_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: EXPENSE_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createExpense = (objExpense) => async (dispatch, getState) => {\r\n    dispatch({ type: EXPENSE_CREATE_REQUEST });\r\n    const {userSignin: { userInfo } } = getState();\r\n\r\n    try {\r\n        const { data } = await axios.post('/api/expenses/', {\r\n            ...objExpense,\r\n            userUserId: userInfo.id\r\n        });\r\n        dispatch({ type: EXPENSE_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: EXPENSE_CREATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });  \r\n    }\r\n}","export const SUBCATEGORY_LIST_REQUEST = 'SUBCATEGORY_LIST_REQUEST';\r\nexport const SUBCATEGORY_LIST_SUCCESS = 'SUBCATEGORY_LIST_SUCCESS';\r\nexport const SUBCATEGORY_LIST_FAIL = 'SUBCATEGORY_LIST_FAIL';\r\n\r\nexport const SUBCATEGORY_CREATE_REQUEST = 'SUBCATEGORY_CREATE_REQUEST';\r\nexport const SUBCATEGORY_CREATE_SUCCESS = 'SUBCATEGORY_CREATE_SUCCESS';\r\nexport const SUBCATEGORY_CREATE_FAIL = 'SUBCATEGORY_CREATE_FAIL';","import axios from \"axios\";\r\nimport { SUBCATEGORY_CREATE_FAIL, SUBCATEGORY_CREATE_REQUEST, SUBCATEGORY_CREATE_SUCCESS, SUBCATEGORY_LIST_FAIL, SUBCATEGORY_LIST_REQUEST, SUBCATEGORY_LIST_SUCCESS } from \"../constants/subcategoriesConstants\"\r\n\r\nexport const listSubcategories = (categoryId) => async (dispatch) => {\r\n    dispatch({ type: SUBCATEGORY_LIST_REQUEST });\r\n    try {\r\n        const { data } = await axios.get(`/api/subcategories/${categoryId}`);\r\n        dispatch({ type: SUBCATEGORY_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SUBCATEGORY_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createSubcategory = (name, categoryId) => async (dispatch) => {\r\n    dispatch({ type: SUBCATEGORY_CREATE_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.post('/api/subcategories',{\r\n            name: name,\r\n            categoryId: categoryId\r\n        });\r\n        dispatch({ type: SUBCATEGORY_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SUBCATEGORY_CREATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createCategory, listCategories } from '../actions/categoryActions';\r\nimport { createSubcategory, listSubcategories } from '../actions/subcategoriesActions';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nexport default function SubForm(props) {\r\n\r\n    const { type, categoryId, showNew } = props;\r\n    const dispatch = useDispatch('');\r\n\r\n    const categoryCreate = useSelector(state => state.categoryCreate);\r\n    const { category } = categoryCreate;\r\n\r\n    const subcategoryCreate = useSelector(state => state.subcategoryCreate);\r\n    const { subcategory } = subcategoryCreate;\r\n    \r\n    const [name, setname] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [submitCategory, setSubmitCategory] = useState(false);\r\n    const [submitSubcategory, setSubmitSubcategory] = useState(false);\r\n\r\n    const handlerSubmit = () => {\r\n\r\n        switch (type) {\r\n            case 'category':\r\n                dispatch(createCategory(name));\r\n                setSubmitCategory(true);\r\n                break;\r\n            case 'subcategory':\r\n                dispatch(createSubcategory(name, categoryId));\r\n                setSubmitSubcategory(true);\r\n                break\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let title = type === 'category' ? 'categoria' : 'subcategoria';\r\n        setTitle(title);\r\n    }, [type, category]);\r\n\r\n    useEffect(()=>{\r\n        if (category && submitCategory) {\r\n          showNew(false); \r\n          dispatch(listCategories()); \r\n          dispatch(listSubcategories(category.categoryId)); \r\n        }\r\n    }, [submitCategory, category, dispatch, showNew]);\r\n\r\n    useEffect(()=>{\r\n        if (subcategory && submitSubcategory) {\r\n          showNew(false); \r\n          dispatch(listSubcategories(categoryId)); \r\n        }\r\n    }, [submitSubcategory, subcategory, dispatch, showNew, categoryId]);\r\n    return (\r\n        <div className=\"sub-form\">\r\n            <div>\r\n                <input \r\n                    type=\"text\"\r\n                    maxLength=\"20\"\r\n                    onChange={e => setname(e.target.value)}\r\n                    placeholder={`Nueva ${title}`}>\r\n                </input>\r\n            </div>\r\n            <div>\r\n                <CheckIcon onClick={handlerSubmit} />\r\n            </div>\r\n            <div>\r\n                <ClearIcon onClick={() => showNew(false)} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MessageBox from '../MessageBox';\r\nimport LoadingBox from '../utils/LoadingBox';\r\nimport Select from 'react-select';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listCategories } from '../../actions/categoryActions';\r\nimport { createExpense, listExpenses } from '../../actions/expenseActions';\r\nimport { listSubcategories } from '../../actions/subcategoriesActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SubForm from '../SubForm';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nexport default function DrawerExpense(props) {\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n  const [description, setDescription] = useState('');\r\n  const [value, setValue] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [subcategory, setSubcategory] = useState('');\r\n  const [today, setToday] = useState('');\r\n\r\n  const [submit, setSubmit] = useState(false);\r\n  const [load, setLoad] = useState(false);\r\n  const [showNewCategory, setShowNewCateogry] = useState(false);\r\n  const [showNewSubcategory, setShowNewSubcategory] = useState(false);\r\n\r\n  const categoriesList = useSelector(state => state.categoriesList);\r\n  const { loading, error, categories } = categoriesList;\r\n\r\n  const expenseCreate = useSelector(state => state.expenseCreate);\r\n  const { expense, loading: loadingSuccess, error: errorCreate } = expenseCreate;\r\n\r\n  const subcategoriesList = useSelector(state => state.subcategoriesList);\r\n  const { subcategories, loading: loadingSubcategory, error: errorSubcategory } = subcategoriesList;\r\n\r\n  const { state, setState } = props;\r\n\r\n  const toggleDrawer = (open) => {\r\n      setState({ ...state, right: open });\r\n  };\r\n\r\n\r\n  const loadCategories = useCallback(() => {\r\n      if (!categories) {\r\n          dispatch(listCategories());\r\n      } else{\r\n          if (categories.length > 0) \r\n              setCategory(categories[0].value);\r\n      }\r\n  },[categories, dispatch]);\r\n\r\n  const handlerCategory = (e) => {\r\n      setCategory(e);\r\n      setLoad(true);\r\n  }\r\n\r\n  const handlerSubmit = (e) => {\r\n      e.preventDefault();\r\n      const objExpense = {\r\n          description: description,\r\n          value: value,\r\n          date: date,\r\n          categoryCategoryId: category,\r\n          subcategorySubcategoryId: subcategory\r\n      }\r\n      setSubmit(true);\r\n      dispatch(createExpense(objExpense));\r\n  }\r\n\r\n  const getDate = () => {\r\n      let newDate = new Date()\r\n      let date = newDate.getDate();\r\n      let month = newDate.getMonth() + 1;\r\n      let year = newDate.getFullYear();\r\n\r\n      date = date < 10 ? `0${date}` : `${date}`;\r\n      month = month < 10 ? `0${month}` : `${month}`;\r\n\r\n      let today = `${year}-${month}-${date}`;\r\n      setToday(today);\r\n      setDate(today);\r\n  }\r\n\r\n  const handletDate = (e) => {\r\n      setToday(e);\r\n      setDate(e);\r\n  }\r\n\r\n  useEffect(()=>{\r\n      if (category) {\r\n          if (subcategories && !load) {\r\n              if(subcategories.length > 0)\r\n                  setSubcategory(subcategories[0].value);\r\n          } else {\r\n              dispatch(listSubcategories(category));\r\n              setLoad(false);\r\n          }\r\n      }\r\n  }, [category, subcategories, load, dispatch])\r\n\r\n  useEffect(()=>{\r\n      getDate();\r\n      loadCategories();\r\n  }, [loadCategories]);\r\n\r\n  useEffect(()=>{\r\n      if (expense && submit) {\r\n          let month = [today.split('-')[1]];\r\n          dispatch(listExpenses( month, []));\r\n      }\r\n  },[expense, dispatch, submit, today]);\r\n\r\n  return (\r\n        <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n            <div className=\"drawer-header\">\r\n                <ArrowBackIcon className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n            </div>\r\n            <div className=\"drawer-body\">\r\n                <form className=\"form-modal\" onSubmit={handlerSubmit}>\r\n                        {errorCreate && <MessageBox variant=\"danger\">{errorCreate}</MessageBox>}\r\n                        <div className=\"form-title\">\r\n                        <div>Registrar gasto</div>\r\n                        <Divider />\r\n                        </div>\r\n\r\n                        <div>\r\n                            {\r\n                            loading ? <LoadingBox></LoadingBox>\r\n                            :\r\n                            error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                            :(\r\n                            <div>\r\n                                <Select\r\n                                className=\"select\"\r\n                                placeholder=\"Categorias\"\r\n                                onChange={e => handlerCategory(e.value)}\r\n                                defaultValue={categories[0]}\r\n                                options={categories} />\r\n                                <AddIcon\r\n                                    onClick={() => setShowNewCateogry(!showNewCategory)}\r\n                                    className=\"fas fa-plus-circle\"\r\n                                />\r\n                                { showNewCategory && <SubForm showNew={setShowNewCateogry} type={'category'} /> }\r\n                            </div>\r\n                            )}\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                                loadingSubcategory ? <div\r\n                                                        className=\"new-category\"\r\n                                                        onClick={() => setShowNewCateogry(!showNewCategory)}\r\n                                                    >Crear categoria</div>\r\n                                :\r\n                                errorSubcategory ? <MessageBox variant=\"danger\">{errorSubcategory}</MessageBox>\r\n                                :(\r\n                                <div>\r\n                                    <Select\r\n                                        className=\"select\"\r\n                                        placeholder=\"Subcategorias\"\r\n                                        onChange={e => setSubcategory(e.value)}\r\n                                        defaultValue={subcategories[0]}\r\n                                        options={subcategories}\r\n                                    />\r\n                                    <AddIcon \r\n                                        onClick={() => setShowNewSubcategory(!showNewSubcategory)}\r\n                                        className=\"fas fa-plus-circle\"\r\n                                    />  \r\n                                    { showNewSubcategory && <SubForm showNew={setShowNewSubcategory} type={'subcategory'} categoryId={category} /> }\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div>\r\n                            <input \r\n                                type=\"number\"\r\n                                onChange={e => setValue(e.target.value)}\r\n                                placeholder=\"Valor\">\r\n                            </input>\r\n                        </div>\r\n                        <div>\r\n                            <input \r\n                                type=\"text\"\r\n                                onChange={e => setDescription(e.target.value)}\r\n                                placeholder=\"Descripcion\">\r\n                            </input>\r\n                        </div>\r\n                        <div>\r\n                            <input\r\n                                value={today} \r\n                                type=\"date\"\r\n                                onChange={e => handletDate(e.target.value)}\r\n                                placeholder=\"Fecha\">\r\n                            </input>\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                                loadingSuccess ? <LoadingBox />\r\n                                :(\r\n                                    <button className=\"btn secundary\" type=\"submit\">Crear</button>\r\n                                )\r\n                            }\r\n                        </div>\r\n                </form>\r\n            </div>\r\n        </Drawer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DrawerExpense from './Drawers/DrawerExpense';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function FloatButton() {\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const [state, setState] = React.useState({ right: false });\r\n\r\n    const toggleDrawer = (open) => {\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <DrawerExpense\r\n                state={state}\r\n                setState={setState}\r\n            />\r\n            {\r\n                userInfo && \r\n                (\r\n                    <Link to =\"#\">\r\n                        <div className=\"floating-button\">\r\n                            <button className=\"btoncito\" onClick={() => toggleDrawer(true)}>\r\n                                <AddIcon />\r\n                            </button>\r\n                        </div>\r\n                    </Link>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","export const ALERT_LIST_REQUEST = \"ALERT_LIST_REQUEST\";\r\nexport const ALERT_LIST_SUCCESS = \"ALERT_LIST_SUCCESS\";\r\nexport const ALERT_LIST_FAIL = \"ALERT_LIST_FAIL\";\r\n\r\nexport const ALERT_UPDATE_REQUEST = \"ALERT_UPDATE_REQUEST\";\r\nexport const ALERT_UPDATE_SUCCESS = \"ALERT_UPDATE_SUCCESS\";\r\nexport const ALERT_UPDATE_FAIL = \"ALERT_UPDATE_FAIL\";\r\n\r\nexport const ALERT_CREATE_REQUEST = \"ALERT_CREATE_REQUEST\";\r\nexport const ALERT_CREATE_SUCCESS = \"ALERT_CREATE_SUCCESS\";\r\nexport const ALERT_CREATE_FAIL = \"ALERT_CREATE_FAIL\";\r\n\r\nexport const ALERT_DELETE_REQUEST = \"ALERT_DELETE_REQUEST\";\r\nexport const ALERT_DELETE_SUCCESS = \"ALERT_DELETE_SUCCESS\";\r\nexport const ALERT_DELETE_FAIL = \"ALERT_DELETE_FAIL\";\r\n\r\nexport const TYPE_ALERT_LIST_REQUEST = \"TYPE_ALERT_LIST_REQUEST\";\r\nexport const TYPE_ALERT_LIST_SUCCESS = \"TYPE_ALERT_LIST_SUCCESS\";\r\nexport const TYPE_ALERT_LIST_FAIL = \"TYPE_ALERT_LIST_FAIL\";","import axios from \"axios\";\r\nimport { ALERT_CREATE_FAIL, ALERT_CREATE_REQUEST, ALERT_CREATE_SUCCESS, ALERT_DELETE_FAIL, ALERT_DELETE_REQUEST, ALERT_DELETE_SUCCESS, ALERT_LIST_FAIL, ALERT_LIST_REQUEST, ALERT_LIST_SUCCESS, ALERT_UPDATE_FAIL, ALERT_UPDATE_REQUEST, ALERT_UPDATE_SUCCESS, TYPE_ALERT_LIST_FAIL, TYPE_ALERT_LIST_REQUEST, TYPE_ALERT_LIST_SUCCESS } from '../constants/alertConstants';\r\n\r\nexport const listAlerts = () => async (dispatch, getState) => {\r\n    dispatch({ type: ALERT_LIST_REQUEST });\r\n    const {userSignin: { userInfo }} = getState(); \r\n    try {\r\n        const { data } = await axios.get(`/api/alerts/${userInfo.id}`);\r\n        dispatch({ type: ALERT_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALERT_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        }); \r\n    }\r\n}\r\n\r\nexport const updateAlertActive = (alert) => async (dispatch) => {\r\n    dispatch({ type: ALERT_UPDATE_REQUEST });\r\n    try {\r\n        const { data } = await axios.put(`/api/alerts`, alert);\r\n        dispatch({ type: ALERT_UPDATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALERT_UPDATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });    \r\n    }\r\n}\r\n\r\nexport const createAlert = (alert) => async (dispatch, getState) => {\r\n    dispatch({ type: ALERT_CREATE_REQUEST });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n        const { data } = await axios.post('/api/alerts', {\r\n            alert: alert,\r\n            userId: userInfo.id\r\n        });\r\n        dispatch({ type: ALERT_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALERT_CREATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        }); \r\n    }\r\n}\r\n\r\nexport const listTypeAlerts = () => async (dispatch) => {\r\n    dispatch({ type: TYPE_ALERT_LIST_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.post('/api/alerts/types');\r\n        dispatch({ type: TYPE_ALERT_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: TYPE_ALERT_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        }); \r\n    }\r\n}\r\n\r\nexport const deleteAlert = (alertId) => async (dispatch) => {\r\n    dispatch({ type: ALERT_DELETE_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.delete(`/api/alerts/${alertId}`);\r\n        dispatch({ type: ALERT_DELETE_SUCCESS, payload: data.deleted });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALERT_DELETE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });   \r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Select from 'react-select';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport LoadingBox from '../utils/LoadingBox';\r\nimport { createAlert, listAlerts, listTypeAlerts, updateAlertActive } from '../../actions/alertActions';\r\n\r\nexport default function DrawerAlert(props) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { editAlert, edit, state, setState } = props;\r\n  const [days, setDays] = useState([]);\r\n  const [selectDay, setSelectDay] = useState('');\r\n  const [selectType, setSelectType] = useState('');\r\n  const [day, setDay] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [submit, setSubmit] = useState(false);\r\n\r\n  const alertCreate = useSelector(state => state.alertCreate);\r\n  const { alert } = alertCreate;\r\n\r\n  const alertActiveUpdate = useSelector(state => state.alertActiveUpdate);\r\n  const { alert: alertSuccess } = alertActiveUpdate;\r\n\r\n  const alertTypeList = useSelector(state => state.alertTypeList);\r\n  const { typeAlerts, loading: loadingTypes } = alertTypeList;\r\n\r\n  const toggleDrawer = (open) => {\r\n      setState({ ...state, right: open });\r\n  };\r\n\r\n  const handleSubmit = (e) => { \r\n        e.preventDefault();\r\n        setSubmit(true);\r\n        if (edit) {\r\n            dispatch(updateAlertActive({\r\n                date: day,\r\n                alert: title,\r\n                message,\r\n                id:editAlert.id,\r\n                active:editAlert.active\r\n            }));\r\n        } else {\r\n            dispatch(createAlert({date: day, alert: title, message}));\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (days.length < 1) {\r\n            let days = [];\r\n            [...Array(31).keys()].map(item => days.push({value: item + 1, label: item + 1}));\r\n            setDays(days);\r\n        }\r\n    },[days]);\r\n\r\n    useEffect(()=>{\r\n        dispatch(listTypeAlerts());\r\n    }, [dispatch])\r\n\r\n    useEffect(()=>{\r\n        if ((alert && submit) || (alertSuccess && submit)){\r\n            dispatch(listAlerts());\r\n        }\r\n    },[alert, submit, dispatch, alertSuccess]);\r\n\r\n    useEffect(()=>{\r\n        if (editAlert && edit) {\r\n            const type = typeAlerts.filter(type => type.label === editAlert.priority)\r\n            setTitle(editAlert.alert);\r\n            setMessage(editAlert.message);\r\n            setSelectDay({label: editAlert.date, value:editAlert.date});\r\n            setSelectType(type);\r\n            setDay(editAlert.date); \r\n        } else {\r\n            setTitle('');\r\n            setMessage('');\r\n            setSelectDay({ label: 1, value: 1 }); \r\n            setDay(1); \r\n            setSelectType({});\r\n        }\r\n    },[editAlert, edit, typeAlerts]);\r\n\r\n  return (\r\n    <div>\r\n        <React.Fragment key={'right'}>\r\n          <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n            <div className=\"drawer-header\">\r\n              <ArrowBackIcon id=\"close\" className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n            </div>\r\n            <div className=\"drawer-body\">\r\n            <form className=\"form-modal\" onSubmit={handleSubmit}>\r\n                    <div className=\"form-title\">\r\n                        <div>Registar Alerta</div>\r\n                        <Divider />\r\n                    </div>\r\n                    <div>\r\n                    <label>Prioridad</label>\r\n                    {\r\n                        loadingTypes ? <LoadingBox />\r\n                        :\r\n                        (\r\n                        <Select\r\n                            placeholder=\"Prioridad de la alerta\"\r\n                            onChange={e => setTitle(e.value)}\r\n                            defaultValue={selectType}\r\n                            options={typeAlerts}\r\n                        />\r\n                        )\r\n                    }\r\n\r\n                </div>\r\n                <div>\r\n                    <label>Descripcíon alerta</label>\r\n                    <textarea\r\n                        type=\"text\"\r\n                        value={message}\r\n                        onChange={e => setMessage(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>Día de envío</label>\r\n                    <Select\r\n                        placeholder=\"Dia\"\r\n                        onChange={e => setDay(e.value)}\r\n                        defaultValue={selectDay}\r\n                        options={days}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button onClick={() => toggleDrawer(false)} className=\"btn secundary\" type=\"submit\">{edit ? 'Actualizar' : 'Crear'}</button>\r\n                </div>\r\n\r\n            </form>\r\n            </div>\r\n          </Drawer>\r\n        </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteAlert, listAlerts, updateAlertActive } from '../actions/alertActions';\r\nimport MessageBox from '../components/MessageBox';\r\nimport LoadingBox from '../components/utils/LoadingBox';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport DrawerAlert from '../components/Drawers/DrawerAlert';\r\nimport Swal from 'sweetalert2'\r\n\r\nexport default function AlertScreen() {\r\n    const dispatch = useDispatch();\r\n    const [rows, setRows] = useState([]);\r\n    const [send, setSend] = useState(false);\r\n    const [editAlert, setEditAlert] = useState();\r\n    const [edit, setEdit] = useState(false);\r\n    const [submitDelete, setSubmitDelete] = useState(false);\r\n\r\n    const alertList = useSelector(state => state.alertList);\r\n    const { error, loading, alerts } = alertList;\r\n\r\n    const alertActiveUpdate = useSelector(state => state.alertActiveUpdate);\r\n    const { alert } = alertActiveUpdate;\r\n\r\n    const alertDelete = useSelector(state => state.alertDelete);\r\n    const { success } = alertDelete;\r\n\r\n    const [state, setState] = React.useState({ right: false });\r\n\r\n    const handleActive = (e, item) => {\r\n        dispatch(updateAlertActive({...item, active: e.target.checked}));\r\n        setSend(true);\r\n    }\r\n\r\n    const toggleDrawer = (open, item) => {\r\n\r\n        if(item){\r\n            setEditAlert(item);\r\n            setEdit(true);\r\n        } else {\r\n            setEditAlert({});\r\n        }\r\n\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handleDelete = (alertId) => {\r\n        Swal.fire({\r\n            title: '¿Eliminar alerta?',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Sí, eliminar'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              dispatch(deleteAlert(alertId));\r\n              setSubmitDelete(true);\r\n            }\r\n          })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(success && submitDelete){\r\n            Swal.fire(\r\n                'Eliminado!',\r\n                'Alerta eliminada correctamente',\r\n                'success'\r\n            ).then(()=>{\r\n                setSubmitDelete(false);\r\n                dispatch(listAlerts());\r\n            });  \r\n        }\r\n    },[success, submitDelete, dispatch])\r\n\r\n    useEffect(()=>{\r\n        if (alerts) {\r\n            let rows = [];\r\n            alerts.map(item => rows.push({\r\n                id: item.alertId,\r\n                priority: item.typesalert.typeAlert,\r\n                message: item.message,\r\n                date: item.date,\r\n                active: item.active\r\n            }));\r\n\r\n            setRows(rows);\r\n        } else {\r\n            dispatch(listAlerts());\r\n        }\r\n    }, [alerts, dispatch]);\r\n\r\n    useEffect(()=>{\r\n        if (alert && send){\r\n            dispatch(listAlerts());\r\n        }\r\n    },[dispatch, alert, send]);\r\n\r\n    return (\r\n        <div>\r\n            <DrawerAlert \r\n                state={state}\r\n                setState={setState}\r\n                editAlert={editAlert}\r\n                edit={edit}\r\n            />\r\n\r\n            <div className=\"container\">\r\n                <h2>Alertas<small></small></h2>\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={() => toggleDrawer(true)}\r\n                    className=\"btn primary\"\r\n                >\r\n                    Crear alerta\r\n                </button>\r\n\r\n                {\r\n                loading ? <LoadingBox />\r\n                :\r\n                error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                :(\r\n                <div className=\"container-table\">\r\n                    <ul className=\"responsive-table\">\r\n                        <li className=\"table-header\">\r\n                            <div className=\"col col-2\">Activo</div>\r\n                            <div className=\"col col-2\">Prioridad</div>\r\n                            <div className=\"col col-4\">Mensaje</div>\r\n                            <div className=\"col col-4\">Dia de envio</div>\r\n                            <div className=\"col col-2\">Acciones</div>\r\n                        </li>\r\n                        {\r\n                            rows.map(item => (\r\n                                <li className=\"table-row\" key={item.id}>\r\n                                    <div className=\"col col-2\" data-label=\"Payment Status\">\r\n                                        <input type=\"checkbox\" checked={item.active} value={false} onChange={ e => handleActive(e, item)} />\r\n                                    </div>\r\n                                    <div className=\"col col-2\" data-label=\"Customer Name\">{item.priority}</div>\r\n                                    <div className=\"col col-4\" data-label=\"Amount\">{item.message}</div>\r\n                                    <div className=\"col col-4\" data-label=\"Payment Status\">Día {item.date} de cada mes</div>\r\n                                    <div className=\"col col-2\" data-label=\"Payment Status\">\r\n                                        <EditIcon onClick={() => toggleDrawer(true, item)} className=\"cursor-pointer\" />\r\n                                        <DeleteIcon onClick={() => handleDelete(item.id)} className=\"cursor-pointer\" />\r\n                                    </div>\r\n                                </li> \r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listExpenses } from '../actions/expenseActions';\r\n\r\nexport default function ChartScreen() {\r\n    const dispatch = useDispatch();\r\n    const [labels, setLabels] = useState([]);\r\n    const [data, setData] = useState([]);\r\n\r\n    const expenseList = useSelector(state => state.expenseList);\r\n    const { expenses } = expenseList;\r\n\r\n    useEffect(()=>{\r\n        if (!expenses){\r\n            dispatch(listExpenses(['09'], ['category']));\r\n        } else {\r\n            let labels = [];\r\n            let data = [];\r\n            expenses.map(item => labels.push(item.category.category));\r\n            expenses.map(item => data.push(item.value));\r\n            setLabels(labels);\r\n            setData(data);\r\n        }\r\n    },[dispatch, expenses]);\r\n    return (\r\n        <div>\r\n            <Pie \r\n                data={{ \r\n                    labels: labels,\r\n                    datasets: [{\r\n                        data: data,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.9)',\r\n                            'rgba(54, 162, 235, 0.9)',\r\n                            'rgba(255, 206, 86, 0.9)',\r\n                            'rgba(75, 192, 192, 0.9)',\r\n                            'rgba(153, 102, 255, 0.9)',\r\n                            'rgba(255, 159, 64, 0.9)'\r\n                        ],\r\n                        borderColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)'\r\n                        ],\r\n                        borderWidth: 1\r\n                    }]\r\n                }}\r\n                height={400}\r\n                width={600}\r\n                options={{ maintainAspectRatio: false }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","export const GET_MONTHS_REQUEST = \"GET_MONTHS_REQUEST\";\r\nexport const GET_MONTHS_SUCCESS = \"GET_MONTHS_SUCCESS\";\r\nexport const GET_MONTHS_FAIL = \"GET_MONTHS_FAIL\";","import axios from \"axios\";\r\nimport { GET_MONTHS_FAIL, GET_MONTHS_REQUEST, GET_MONTHS_SUCCESS } from \"../constants/utilsConstants\"\r\n\r\nexport const getMonths = () => async (dispatch) => {\r\n    dispatch({ type: GET_MONTHS_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.get('/api/utils/months');\r\n        dispatch({ type: GET_MONTHS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_MONTHS_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport { listExpenses } from '../actions/expenseActions';\r\nimport { getMonths } from '../actions/utilsActions';\r\n\r\nexport default function SelectDate(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const monthsGet = useSelector(state => state.monthsGet);\r\n    const { months } = monthsGet;\r\n\r\n    const { month } = props;\r\n    const [monthSelect, setMonthSelect] = useState();\r\n    const [monthsSelect, setMonthsSelect] = useState();\r\n    const [agrupadores, setAgrupadores] = useState();\r\n    const [groupesSelect, setSelectGroupes] = useState([]);\r\n\r\n    const handlerMonth = (items) => {\r\n        let months = [];\r\n        items.map(item => months.push(item.value));\r\n\r\n        setMonthsSelect(months);\r\n        dispatch(listExpenses(months, groupesSelect));\r\n    }\r\n\r\n    const handlerGrouper = (items) => {\r\n        let groupers = [];\r\n        items.map(item => groupers.push(item.value));\r\n\r\n        setSelectGroupes(groupers);\r\n        dispatch(listExpenses(monthsSelect, groupers));\r\n    }\r\n\r\n    useEffect(()=>{\r\n        dispatch(listExpenses([month], []));\r\n    },[dispatch, month]);\r\n\r\n    useEffect(()=>{\r\n        if (!agrupadores) \r\n            setAgrupadores([\r\n                {value:'category', label:'Categoria'},\r\n                {value:'subcategory', label:'Subcategoria'},\r\n            ]);\r\n    },[agrupadores]);\r\n\r\n    useEffect(()=>{\r\n        if(months){\r\n            var result = months.filter(item => item.value === month);\r\n\r\n            if (!monthSelect) setMonthSelect(result);\r\n            if (!monthsSelect) setMonthsSelect([result[0].value]);\r\n\r\n        } else {\r\n            dispatch(getMonths());\r\n        }\r\n    },[dispatch, months, monthSelect, month, monthsSelect]);\r\n\r\n    return (\r\n        <div className=\"selects-datable\">\r\n            { months && monthSelect && (\r\n                <Select\r\n                className=\"select\"\r\n                placeholder=\"Mes\"\r\n                isMulti\r\n                onChange={e => handlerMonth(e)}\r\n                defaultValue={monthSelect}\r\n                options={months} />\r\n            )}\r\n\r\n            { months && monthSelect && (\r\n                <Select\r\n                className=\"select\"\r\n                placeholder=\"Agrupar por...\"\r\n                isMulti\r\n                onChange={e => handlerGrouper(e)}\r\n                // defaultValue={monthSelect}\r\n                options={agrupadores} />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport MessageBox from '../components/MessageBox';\r\nimport LoadingBox from '../components/utils/LoadingBox';\r\nimport { MDBDataTableV5 } from 'mdbreact';\r\nimport SelectDate from '../components/SelectDate';\r\nimport { getMonths } from '../actions/utilsActions';\r\n\r\nexport default function HomeScreen(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const [success, setSuccess] = useState(false);\r\n    const [datatable, setDatatable] = useState({});\r\n    const [month, setMonth] = useState();\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const monthsGet = useSelector(state => state.monthsGet);\r\n    const { months } = monthsGet;\r\n\r\n    const expenseList = useSelector(state => state.expenseList);\r\n    const { loading, expenses, error } = expenseList;\r\n\r\n    const getDate = () => {\r\n        let newDate = new Date()\r\n        let month = newDate.getMonth() + 1;\r\n\r\n        month = month < 10 ? `0${month}` : `${month}`;\r\n        setMonth(month);\r\n    }\r\n\r\n    const convertDate = (date) => {\r\n      let month = date.split('-')[1];\r\n      let day = date.split('-')[2];\r\n\r\n      let result = months.filter(item => item.value === month);\r\n      let newDate = `${day} ${result[0].label}`;\r\n      return newDate;\r\n    }\r\n\r\n    useEffect(()=> {\r\n      if(!months) dispatch(getMonths());\r\n    },[dispatch, months]);\r\n\r\n    useEffect(()=>{\r\n        if (!userInfo) props.history.push(\"/login\");\r\n        if (expenses) {\r\n            let columns = [\r\n                {\r\n                    label: 'Categoria',\r\n                    field: 'category',\r\n                    width: 150,\r\n                    attributes: {\r\n                      'aria-controls': 'DataTable',\r\n                      'aria-label': 'Gasto',\r\n                    },\r\n                  },\r\n                  {\r\n                    label: 'Subcategoria',\r\n                    field: 'subcategory',\r\n                    width: 270,\r\n                  },\r\n                  {\r\n                    label: 'Valor',\r\n                    field: 'value',\r\n                    width: 270\r\n                  },\r\n            ];\r\n\r\n            let rows = [];\r\n\r\n            if (expenses.length) {   \r\n              if(expenses[0].description)\r\n              columns.push({\r\n                label: 'Descripción',\r\n                field: 'description',\r\n                width: 270,\r\n              });\r\n\r\n            if(expenses[0].date)\r\n              columns.push({\r\n                label: 'Fecha',\r\n                field: 'date',\r\n                width: 270,\r\n              });\r\n              expenses.map(item => rows.push({\r\n                  category: item.category.category,\r\n                  subcategory: item.subcategory.subcategory,\r\n                  description: item.description ? item.description : '',\r\n                  value: new Intl.NumberFormat().format(item.value),\r\n                  date: item.date ? convertDate(item.date.split('T')[0]) : '',\r\n              }));\r\n            }\r\n            setDatatable({ columns, rows });\r\n          }\r\n          if(!month) {\r\n            getDate();\r\n          }\r\n        setSuccess(false);\r\n    }, [dispatch, props, userInfo, success, expenses, month]);\r\n    \r\n    return (\r\n        <div className=\"home-screen\">\r\n\r\n            <div className=\"title\">Dero</div>\r\n\r\n            { month && (<SelectDate month={month} />)}\r\n\r\n            {\r\n            loading ? <LoadingBox></LoadingBox>\r\n            :\r\n            error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n            :\r\n            (\r\n              <div className=\"datatable\">\r\n                <div className=\"data-info\">\r\n                    <div className=\"data-card\">\r\n                      <div>Gastos totales</div>\r\n                      <div>\r\n                        ${new Intl.NumberFormat().format(expenses.reduce((a, c) => a + parseInt(c.value), 0))}\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"data-table\">\r\n                  <MDBDataTableV5\r\n                    hover\r\n                    data={datatable}\r\n                    searchTop\r\n                    paging={false}\r\n                    info={false}\r\n                    searchBottom={false}\r\n                  />\r\n                </div>\r\n                <div className=\"data-content\">\r\n                    {\r\n                      expenses.map(item => (\r\n                        <div key={item.expenseId} className=\"data-table-items\">\r\n\r\n                          <div className=\"data-date\">\r\n                            <div>{item.date ? convertDate(item.date.split('T')[0]).slice(0, 6).split(' ')[1] : ''}</div>\r\n                            <div>{item.date ? convertDate(item.date.split('T')[0]).slice(0, 6).split(' ')[0] : ''}</div>\r\n                          </div>\r\n\r\n                          <div> \r\n                            <div className=\"category\">{item.category.category}</div>\r\n                            <div className=\"subcategory\">{item.subcategory.subcategory}</div>\r\n                          </div>\r\n\r\n                            <div>${new Intl.NumberFormat().format(item.value)}</div>\r\n\r\n                        </div>\r\n                      ))\r\n                    }\r\n                  </div>\r\n              </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signin } from '../actions/userActions';\r\nimport { Link } from 'react-router-dom';\r\nimport LoadingBox from '../components/utils/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nexport default function LoginScreen(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo, error, loading } = userSignin;\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signin({username: username, password: password}));\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(userInfo) {\r\n            props.history.push(\"/\")\r\n        }\r\n    }, [userInfo, props])\r\n    return (\r\n        <div className=\"home\">\r\n            \r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                \r\n                <div className=\"title\">\r\n                    Iniciar sesión\r\n                </div>\r\n\r\n                <div>\r\n                    <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            placeholder=\"Username\"\r\n                            onChange={ e => setUsername(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={e => setPassword(e.target.value)}\r\n                    ></input>\r\n                    {/* <span><Link to=\"/\">recuperar contraseña</Link></span> */}\r\n                </div>\r\n                <div>\r\n                    {\r\n                        loading ? <LoadingBox />\r\n                        :\r\n                        (\r\n                            <button className=\"btn primary\" type=\"submit\">Iniciar Sesión</button>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n                <div>\r\n                    <Link to=\"/register\">¿Olvidaste tu contraseña?</Link> \r\n                </div>\r\n\r\n                <div>\r\n                    { error && <MessageBox variant=\"danger\">{error}</MessageBox> }\r\n                </div>\r\n            </form>\r\n            <div className=\"box-register\">\r\n                <div>\r\n                    <span>\r\n                        <Link to=\"/register\">Crear una cuenta</Link> \r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ProfileScreen() {\r\n    return (\r\n        <div>\r\n            Profile\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { registerUser } from '../actions/userActions';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nexport default function RegisterScreen(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [error, setError] = useState(null);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        setError(null);\r\n        if (password === confirmPassword) {\r\n            dispatch(registerUser({username: username, password:password, email: email}));\r\n        } else {\r\n            setError('Las contraseñas no coinciden');\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (userInfo) {\r\n            props.history.push(\"/\");\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                <div className=\"title\">\r\n                    Registro\r\n                </div>\r\n\r\n                <div>\r\n                    { error && (<MessageBox variant=\"danger\">{error}</MessageBox>)}\r\n                </div>\r\n\r\n                <div>\r\n                    <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            placeholder=\"Username\"\r\n                            onChange={ e => setUsername(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            placeholder=\"Email\"\r\n                            onChange={ e => setEmail(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={e => setPassword(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={e => setConfirmPassword(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <button className=\"btn primary\" type=\"submit\">Registrarme</button>\r\n                </div>\r\n\r\n                <div>\r\n                    <Link to=\"/login\">Iniciar sesion</Link> \r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import {BrowserRouter, Route } from 'react-router-dom';\nimport Sidebar from './components/common/Sidebar';\nimport FloatButton from './components/FloatButton';\nimport AlertScreen from './screens/AlertScreen';\nimport ChartScreen from './screens/ChartScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport NotificationsScreen from './screens/NotificationsScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport RegisterScreen from './screens/RegisterScreen';\n\nfunction App() {\n\n  return (\n    <BrowserRouter>\n        <Sidebar></Sidebar>\n\n        <Route path=\"/\" component={HomeScreen} exact></Route>\n        <Route path=\"/login\" component={LoginScreen}></Route>\n        <Route path=\"/register\" component={RegisterScreen}></Route>\n        <Route path=\"/alert\" component={AlertScreen}></Route>\n        <Route path=\"/profile\" component={ProfileScreen}></Route>\n        <Route path=\"/chart\" component={ChartScreen}></Route>\n\n        <FloatButton />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, createStore, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createAlertReducer, listAlertsReducer, listTypeAlertsReducer, updateAlertReducer, deleteAlertReducer } from './reducers/alertReducers';\r\nimport { createCategoryReducers, listCategoriesReducer } from './reducers/categoryReducers';\r\nimport { createExpenseReducer, listExpensesReducer } from './reducers/expenseReducers';\r\nimport { createSubcategoryReducer, listSubcategoriesReducer } from './reducers/subcategoryReducers';\r\nimport { registerReducer, signinReducer, suscribeUserReducer } from './reducers/userReducer';\r\nimport { getMonthsReducer } from './reducers/utilsReducers';\r\n\r\nconst initialState = {\r\n    userSignin:{\r\n        userInfo: localStorage.getItem('userInfo')\r\n        ? JSON.parse(localStorage.getItem('userInfo'))\r\n        : null\r\n    }\r\n};\r\n\r\nconst reducer = combineReducers({\r\n    userSignin: signinReducer,\r\n    register: registerReducer,\r\n    userSuscribe: suscribeUserReducer,\r\n\r\n    expenseList: listExpensesReducer,\r\n    expenseCreate: createExpenseReducer,\r\n\r\n    categoryCreate: createCategoryReducers,\r\n    categoriesList: listCategoriesReducer,\r\n\r\n    subcategoriesList: listSubcategoriesReducer,\r\n    subcategoryCreate: createSubcategoryReducer,\r\n    \r\n    alertList: listAlertsReducer,\r\n    alertActiveUpdate: updateAlertReducer,\r\n    alertCreate: createAlertReducer,\r\n    alertTypeList: listTypeAlertsReducer,\r\n    alertDelete: deleteAlertReducer,\r\n\r\n    monthsGet: getMonthsReducer\r\n});\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeEnhancer(applyMiddleware(thunk))\r\n)\r\n\r\nexport default store;","import { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGIN_FAIL, USER_SIGIN_REQUEST, USER_SIGIN_SUCCESS, USER_SUSCRIBE_FAIL, USER_SUSCRIBE_REQUEST, USER_SUSCRIBE_SUCCESS } from \"../constants/userConstants\";\r\n\r\nexport const signinReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case USER_SIGIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_SIGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload, success:true };\r\n        case USER_SIGIN_FAIL:\r\n            return { loading: false, error: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const registerReducer = (state = { loading:true }, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true };\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, user: action.payload };\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const suscribeUserReducer = (state = { loading: true }, action) => {\r\n    switch (action.type){\r\n        case USER_SUSCRIBE_REQUEST:\r\n            return {loading: true };\r\n        case USER_SUSCRIBE_SUCCESS:\r\n            return { loading: false, suscribe: action.payload };\r\n        case USER_SUSCRIBE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { EXPENSE_CREATE_FAIL, EXPENSE_CREATE_REQUEST, EXPENSE_CREATE_SUCCESS, EXPENSE_LIST_FAIL, EXPENSE_LIST_REQUEST, EXPENSE_LIST_SUCCESS } from \"../constants/expenseConstants\";\r\n\r\nexport const listExpensesReducer = (state = { loading: true }, action) =>{\r\n    switch (action.type) {\r\n        case EXPENSE_LIST_REQUEST:\r\n            return { loading: true };\r\n        case EXPENSE_LIST_SUCCESS:\r\n            return { loading: false, expenses: action.payload };\r\n        case EXPENSE_LIST_FAIL:\r\n            return { loading:false, error: action.payload };\r\n           \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const createExpenseReducer = (state = { loading: false }, action) => {\r\n    switch (action.type) {\r\n        case EXPENSE_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case EXPENSE_CREATE_SUCCESS:\r\n            return { loading: false, expense: action.payload };\r\n        case EXPENSE_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { CATEGORY_CREATE_FAIL, CATEGORY_CREATE_REQUEST, CATEGORY_CREATE_SUCCESS, CATEGORY_LIST_FAIL, CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS } from \"../constants/categoryConstants\";\r\n\r\nexport const createCategoryReducers = (state = {loading: true }, action) => {\r\n    switch (action.type) {\r\n        case CATEGORY_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case CATEGORY_CREATE_SUCCESS:\r\n            return { loading: false, category: action.payload };\r\n        case CATEGORY_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const listCategoriesReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case CATEGORY_LIST_REQUEST:\r\n            return { loading: true };\r\n        case CATEGORY_LIST_SUCCESS:\r\n            return { loading:false, categories: action.payload };\r\n        case CATEGORY_LIST_FAIL:\r\n            return { loading:false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { SUBCATEGORY_CREATE_FAIL, SUBCATEGORY_CREATE_REQUEST, SUBCATEGORY_CREATE_SUCCESS, SUBCATEGORY_LIST_FAIL, SUBCATEGORY_LIST_REQUEST, SUBCATEGORY_LIST_SUCCESS } from \"../constants/subcategoriesConstants\";\r\n\r\nexport const listSubcategoriesReducer = (state = { loading: true }, action) =>{\r\n    switch (action.type) {\r\n        case SUBCATEGORY_LIST_REQUEST:\r\n            return { loading: true };\r\n        case SUBCATEGORY_LIST_SUCCESS:\r\n            return { loading: false, subcategories: action.payload };\r\n        case SUBCATEGORY_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const createSubcategoryReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case SUBCATEGORY_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case SUBCATEGORY_CREATE_SUCCESS:\r\n            return { loading: false, subcategory: action.payload };\r\n        case SUBCATEGORY_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { ALERT_CREATE_FAIL, ALERT_CREATE_REQUEST, ALERT_CREATE_SUCCESS, ALERT_DELETE_FAIL, ALERT_DELETE_REQUEST, ALERT_DELETE_SUCCESS, ALERT_LIST_FAIL, ALERT_LIST_REQUEST, ALERT_LIST_SUCCESS, ALERT_UPDATE_FAIL, ALERT_UPDATE_REQUEST, ALERT_UPDATE_SUCCESS, TYPE_ALERT_LIST_FAIL, TYPE_ALERT_LIST_REQUEST, TYPE_ALERT_LIST_SUCCESS } from \"../constants/alertConstants\";\r\n\r\nexport const listAlertsReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ALERT_LIST_REQUEST:\r\n            return { loading: true }\r\n        case ALERT_LIST_SUCCESS:\r\n            return { loading: false, alerts: action.payload };\r\n        case ALERT_LIST_FAIL:\r\n            return { loading: false };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const updateAlertReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ALERT_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case ALERT_UPDATE_SUCCESS:\r\n            return { loading: false, alert: action.payload };\r\n        case ALERT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n} \r\n\r\nexport const createAlertReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ALERT_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case ALERT_CREATE_SUCCESS:\r\n            return { loading: false, alert: action.payload };\r\n        case ALERT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const listTypeAlertsReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case TYPE_ALERT_LIST_REQUEST:\r\n            return { loading: true };\r\n        case TYPE_ALERT_LIST_SUCCESS:\r\n            return { loading: false, typeAlerts: action.payload };\r\n        case TYPE_ALERT_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const deleteAlertReducer = ( state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ALERT_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case ALERT_DELETE_SUCCESS:\r\n            return { loading: false, success: action.payload };\r\n        case ALERT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_MONTHS_FAIL, GET_MONTHS_REQUEST, GET_MONTHS_SUCCESS } from \"../constants/utilsConstants\";\r\n\r\nexport const getMonthsReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case GET_MONTHS_REQUEST:\r\n            return { loading: true };\r\n        case GET_MONTHS_SUCCESS:\r\n            return { loading: false, months: action.payload };\r\n        case GET_MONTHS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\nimport { subscribeUser } from \"./actions/userActions\";\nimport store from './store';\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nconst PUBLIC_VAPID_KEY = \"BDDk3ILb3FjIjAvTs9PWMoObhChnrBUYwHAsdplom7fePD36G6ZFJumGgSe6C4M3pOpYvFb38XX2wJRIN4B6V_0\";\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n            serviceSubscribeUser(registration);\n          }\n        };\n      };\n\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction serviceSubscribeUser(registration) {\n\n  var serviceWorker;\n\n  if (registration.installing) {\n      serviceWorker = registration.installing;\n  } else if (registration.waiting) {\n      serviceWorker = registration.waiting;\n  } else if (registration.active) {\n      serviceWorker = registration.active;\n  }\n\n  if (serviceWorker) {\n    if (serviceWorker.state === \"activated\") {\n        console.log(\"sw already activated - Do watever needed here\");\n    }\n    serviceWorker.addEventListener(\"statechange\", function(e) {\n      \n        if (e.target.state ===\"activated\") {\n\n          registration.pushManager.subscribe({\n            userVisibleOnly: true,\n            applicationServerKey: PUBLIC_VAPID_KEY\n          })\n          .then((suscription) => {\n            store.dispatch(subscribeUser(suscription));\n          });\n        }\n    });\n  }\n  return <div></div>\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}