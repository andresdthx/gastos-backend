{"version":3,"sources":["constants/userConstants.js","components/Drawers/DrawerNotification.js","components/common/Sidebar.js","actions/userActions.js","constants/alertConstants.js","actions/alertActions.js","components/MessageBox.js","components/utils/LoadingBox.js","components/Drawers/DrawerAlert.js","screens/Alert/AlertScreen.js","constants/expenseConstants.js","actions/expenseActions.js","screens/ChartScreen.js","constants/utilsConstants.js","actions/utilsActions.js","screens/Expense/ExpenseScreen.js","components/SelectDate.js","components/FloatButton.js","screens/HomeScreen.js","screens/User/LoginScreen.js","screens/User/ProfileScreen.js","screens/User/RegisterScreen.js","constants/categoryConstants.js","actions/categoryActions.js","constants/subcategoriesConstants.js","actions/subcategoriesActions.js","components/SubForm.js","screens/Expense/ExpenseCreateScreen.js","screens/Alert/AlertCreateScreen.js","screens/Activity/ActivityScreen.js","screens/Activity/ActivityCreateScreen.js","App.js","reportWebVitals.js","store.js","reducers/userReducer.js","reducers/expenseReducers.js","reducers/categoryReducers.js","reducers/subcategoryReducers.js","reducers/alertReducers.js","reducers/utilsReducers.js","serviceWorkerRegistration.js","index.js"],"names":["USER_SIGIN_REQUEST","USER_SIGIN_SUCCESS","USER_SIGIN_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_SUSCRIBE_REQUEST","USER_SUSCRIBE_SUCCESS","USER_SUSCRIBE_FAIL","DrawerNotification","props","state","setState","setNotification","useSelector","notification","useState","title","priority","message","notifications","setNotifications","toggleDrawer","open","item","right","useEffect","map","push","body","watched","localStorage","setItem","JSON","stringify","Drawer","anchor","onClose","className","id","onClick","Avatar","useStyles","makeStyles","theme","menuButton","marginRight","spacing","menuContent","position","menuItems","cursor","hide","display","drawer","width","flexShrink","drawerPaper","drawerHeader","alignItems","justifyContent","height","contentHeader","color","background","backgroundSize","button","icon","accountContent","margin","textAlign","accountIcon","fontSize","iconsSidebar","iconsMenu","list","Sidebar","dispatch","useDispatch","classes","useTheme","React","setOpen","anchorEl","setAnchorEl","userInfo","userSignin","handleDrawerClose","handlerSignout","a","removeItem","type","window","location","reload","handleClose","option","total","tl","root","CssBaseline","AppBar","Toolbar","IconButton","edge","clsx","Typography","to","Badge","badgeContent","event","currentTarget","keepMounted","Boolean","MenuItem","paper","direction","List","username","ListItem","ListItemIcon","ListItemText","primary","Divider","ALERT_LIST_REQUEST","ALERT_LIST_SUCCESS","ALERT_LIST_FAIL","ALERT_UPDATE_REQUEST","ALERT_UPDATE_SUCCESS","ALERT_UPDATE_FAIL","ALERT_CREATE_REQUEST","ALERT_CREATE_SUCCESS","ALERT_CREATE_FAIL","ALERT_DELETE_REQUEST","ALERT_DELETE_SUCCESS","ALERT_DELETE_FAIL","TYPE_ALERT_LIST_REQUEST","TYPE_ALERT_LIST_SUCCESS","TYPE_ALERT_LIST_FAIL","listAlerts","getState","axios","get","data","payload","response","name","updateAlertActive","alert","put","createAlert","post","userId","listTypeAlerts","MessageBox","variant","children","LoadingBox","DrawerAlert","editAlert","edit","days","setDays","selectDay","setSelectDay","selectType","setSelectType","day","setDay","setTitle","setMessage","submit","setSubmit","alertCreate","alertSuccess","alertActiveUpdate","alertTypeList","typeAlerts","loadingTypes","loading","useCallback","length","Array","keys","value","label","filter","date","onSubmit","e","preventDefault","active","placeholder","onChange","defaultValue","options","target","AlertScreen","rows","setRows","send","setSend","setEditAlert","setEdit","submitDelete","setSubmitDelete","alertList","error","alerts","success","alertDelete","handleDelete","alertId","Swal","fire","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","delete","deleted","deleteAlert","typesalert","typeAlert","checked","handleActive","EXPENSE_LIST_REQUEST","EXPENSE_LIST_SUCCESS","EXPENSE_LIST_FAIL","EXP_LIST_REQUEST","EXP_LIST_SUCCESS","EXP_LIST_FAIL","EXPENSE_CREATE_REQUEST","EXPENSE_CREATE_SUCCESS","EXPENSE_CREATE_FAIL","listExpenses","months","groupers","headers","Authorization","token","ChartScreen","labels","setLabels","setData","expenses","expenseList","category","datasets","backgroundColor","borderColor","borderWidth","maintainAspectRatio","GET_MONTHS_REQUEST","GET_MONTHS_SUCCESS","GET_MONTHS_FAIL","SET_NOTIFICATIONS_REQUEST","SET_NOTIFICATIONS_SUCCESS","SET_NOTIFICATIONS_FAIL","getMonths","ExpenseScreen","expenseId","match","params","expList","expense","monthsGet","listExpense","subcategory","description","month","split","convertDate","SelectDate","monthSelect","setMonthSelect","monthsSelect","setMonthsSelect","agrupadores","setAgrupadores","groupesSelect","setSelectGroupes","isMulti","items","handlerMonth","handlerGrouper","FloatButton","url","setUrl","pathname","HomeScreen","setSuccess","datatable","setDatatable","setMonth","history","columns","field","attributes","Intl","NumberFormat","format","Date","getMonth","getDate","reduce","c","parseInt","hover","searchTop","paging","info","searchBottom","slice","LoginScreen","setUsername","password","setPassword","userData","ProfileScreen","RegisterScreen","confirmPassword","setConfirmPassword","email","setEmail","setError","CATEGORY_CREATE_REQUEST","CATEGORY_CREATE_SUCCESS","CATEGORY_CREATE_FAIL","CATEGORY_LIST_REQUEST","CATEGORY_LIST_SUCCESS","CATEGORY_LIST_FAIL","listCategories","SUBCATEGORY_LIST_REQUEST","SUBCATEGORY_LIST_SUCCESS","SUBCATEGORY_LIST_FAIL","SUBCATEGORY_CREATE_REQUEST","SUBCATEGORY_CREATE_SUCCESS","SUBCATEGORY_CREATE_FAIL","listSubcategories","categoryId","SubForm","showNew","categoryCreate","subcategoryCreate","setname","submitCategory","setSubmitCategory","submitSubcategory","setSubmitSubcategory","maxLength","createCategory","createSubcategory","ExpenseCreateScreen","setDescription","setValue","setDate","setCategory","setSubcategory","today","setToday","showNewCategory","setShowNewCateogry","showNewSubcategory","setShowNewSubcategory","categoriesList","categories","expenseCreate","loadingSuccess","errorCreate","subcategoriesList","subcategories","loadingSubcategory","errorSubcategory","loadCategories","newDate","year","getFullYear","objExpense","categoryCategoryId","subcategorySubcategoryId","userUserId","errors","Error","createExpense","handlerCategory","handletDate","AlertCreateScreen","initialActivities","activity","ActivityScreen","activities","setActivities","onDragEnd","source","destination","index","prevActivities","startIndex","endIndex","splice","removed","reorder","droppableId","droppableProvided","droppableProps","ref","innerRef","draggableId","draggableProvided","draggableProps","dragHandleProps","charAt","ActivityCreateScreen","RouteGroup","useLocation","TransitionGroup","CSSTransition","classNames","timeout","path","component","exact","key","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","getItem","parse","reducer","combineReducers","action","register","user","userSuscribe","suscribe","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","isLocalhost","hostname","PUBLIC_VAPID_KEY","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","waiting","addEventListener","pushManager","subscribe","userVisibleOnly","applicationServerKey","suscription","subscribeUser","serviceSubscribeUser","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","fetch","contentType","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.661f71de.chunk.js","sourcesContent":["export const USER_SIGIN_REQUEST = \"USER_SIGIN_REQUEST\";\r\nexport const USER_SIGIN_SUCCESS = \"USER_SIGIN_SUCCESS\";\r\nexport const USER_SIGIN_FAIL = \"USER_SIGIN_FAIL\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_SUSCRIBE_REQUEST = \"USER_SUSCRIBE_REQUEST\";\r\nexport const USER_SUSCRIBE_SUCCESS = \"USER_SUSCRIBE_SUCCESS\";\r\nexport const USER_SUSCRIBE_FAIL = \"USER_SUSCRIBE_FAIL\";\r\n\r\nexport const USER_SIGNOUT_FAIL = \"USER_SIGNOUT_FAIL\";\r\n\r\nexport const PUBLIC_VAPID_KEY = \"BDDk3ILb3FjIjAvTs9PWMoObhChnrBUYwHAsdplom7fePD36G6ZFJumGgSe6C4M3pOpYvFb38XX2wJRIN4B6V_0\";\r\n","import { Avatar, Drawer } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function DrawerNotification(props) {\r\n\r\n    const { state, setState } = props;\r\n\r\n    const setNotification = useSelector(state => state.setNotification);\r\n    const { notification } = setNotification;\r\n\r\n    const [notifications, setNotifications] = useState([\r\n        {\r\n            title: 'Pilas, parce',\r\n            priority: 'Alta',\r\n            message: 'Pagar el arriendo'\r\n        },\r\n        {\r\n            title: 'Ojo, papi..',\r\n            priority: 'Media',\r\n            message: 'Pagar el internet rapido'\r\n        }\r\n    ]);\r\n\r\n    const toggleDrawer = (open, item) => {\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    useEffect(()=>{\r\n        var notifications = [];\r\n        if(notification){\r\n          notification.map(item => notifications.push({\r\n              title: item.title,\r\n              body: item.body,\r\n              watched: 1\r\n          }));\r\n        }\r\n        localStorage.setItem('notification', JSON.stringify(notifications));\r\n        setNotifications(notifications);\r\n      }, [notification, setNotification]);\r\n\r\n    return (\r\n        <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n            <div className=\"drawer-header\">\r\n              <ArrowBackIcon id=\"close\" className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n              <NotificationsIcon />\r\n            </div>\r\n            <div className=\"drawer-body\">\r\n                {\r\n                    notifications.map(item => (\r\n                        <div className=\"card-notifcation\" key={item.title}>\r\n                            <div>\r\n                                <Avatar>\r\n                                    R\r\n                                </Avatar>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div>{item.title}</div>\r\n                                <div>{item.body}</div>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </Drawer>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signout } from '../../actions/userActions';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChart';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport DrawerNotification from '../Drawers/DrawerNotification';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  menuContent: {\r\n    position: 'absolute',\r\n    right: '2%',\r\n  },\r\n  menuItems: {\r\n    marginRight: '1rem',\r\n    cursor: 'pointer'\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    height: '10vh'\r\n  },\r\n  contentHeader:{\r\n    color: 'white',\r\n    background: 'url(images/background/sidebar.jpg)',\r\n    backgroundSize: '100%'\r\n  },\r\n  button:{\r\n    color: 'white'\r\n  },\r\n  icon:{\r\n    color: '#080058'\r\n  },\r\n  accountContent:{\r\n    width: '5rem',\r\n    margin: '0.5rem',\r\n    textAlign: 'center',\r\n  },\r\n  accountIcon:{\r\n    fontSize: '4rem'\r\n  },\r\n  iconsSidebar:{\r\n    color: '#FFFFFF'\r\n  },\r\n  iconsMenu:{\r\n    color: '#000000'\r\n  },\r\n  list:{\r\n    color: '#000000'\r\n  }\r\n}));\r\n\r\nexport default function Sidebar() {\r\n\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [notifications, setNotifications] = React.useState(0);\r\n\r\n  const userSignin = useSelector(state => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n\r\n  const setNotification = useSelector(state => state.setNotification);\r\n  const { notification } = setNotification;\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handlerSignout = () => {\r\n    dispatch(signout());\r\n    window.location.reload();\r\n  }\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (option) => {\r\n\r\n    setAnchorEl(null);\r\n\r\n    switch (option) {\r\n      case 'logout':\r\n        handlerSignout();\r\n        break;\r\n    \r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const [state, setState] = React.useState({ right: false });\r\n\r\n  const toggleDrawer = (open) => {\r\n      setState({ ...state, right: open });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    var total = 0;\r\n    if(notification){\r\n      total = notification.map(function(item) {\r\n        var tl = 0;\r\n        if(!item.watched) tl++;\r\n        return tl;\r\n      });\r\n    }\r\n    setNotifications(total);\r\n  }, [notification, setNotification]);\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        userInfo && (\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <AppBar\r\n            position=\"relative\"\r\n          >\r\n            <Toolbar>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={handleDrawerOpen}\r\n                edge=\"start\"\r\n                className={clsx(classes.menuButton, open && classes.hide)}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n\r\n              <Typography className={classes.menuContent}>\r\n                <Link className={classes.iconsSidebar} to=\"#\">\r\n                <Badge className={classes.menuItems} onClick={() => toggleDrawer(true)} badgeContent={notifications} color=\"primary\">\r\n                  <NotificationsIcon  />\r\n                </Badge>\r\n                </Link>\r\n                <span to=\"/#\" onClick={handleClick} className={classes.iconsSidebar}>\r\n                  <PersonIcon />\r\n                  <ArrowDropDownIcon />\r\n                </span>\r\n                <Menu\r\n                  id=\"simple-menu\"\r\n                  anchorEl={anchorEl}\r\n                  keepMounted\r\n                  open={Boolean(anchorEl)}\r\n                  onClose={() => handleClose()}\r\n                >\r\n                  <Link to=\"/profile\">\r\n                    <MenuItem onClick={() => handleClose()} className={classes.iconsMenu}>Perfil</MenuItem>\r\n                  </Link>\r\n                  <MenuItem onClick={() => handleClose('logout')}>Cerrar sesión</MenuItem>\r\n                </Menu>\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n\r\n          <DrawerNotification\r\n                state={state}\r\n                setState={setState}\r\n          />\r\n          \r\n          <Drawer\r\n            className={classes.drawer}\r\n            anchor=\"left\"\r\n            open={open}\r\n            onClose={handleDrawerClose}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n          >\r\n            <div className={classes.contentHeader}>\r\n              <div className={classes.drawerHeader}>\r\n                <IconButton className={classes.button} onClick={handleDrawerClose}>\r\n                  {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                </IconButton>\r\n              </div>\r\n\r\n\r\n              <List className={classes.accountContent}>\r\n                <AccountCircleIcon className={classes.accountIcon}  />\r\n                {userInfo.username}\r\n              </List>\r\n            </div>\r\n\r\n            <List>\r\n\r\n                <Link className={classes.list} to=\"/\">\r\n                  <ListItem onClick={handleDrawerClose} button>\r\n                    <ListItemIcon><HomeIcon className={classes.icon} /></ListItemIcon>\r\n                    <ListItemText primary=\"Inicio\" />\r\n                  </ListItem>\r\n                </Link>\r\n\r\n                <Link className={classes.list} to=\"/chart\">\r\n                  <ListItem onClick={handleDrawerClose} button>\r\n                    <ListItemIcon><InsertChartIcon className={classes.icon} /></ListItemIcon>\r\n                    <ListItemText primary=\"Graficos\" />\r\n                  </ListItem>\r\n                </Link>\r\n\r\n                <Link className={classes.list} to=\"/alert\">\r\n                  <ListItem onClick={handleDrawerClose} button>\r\n                    <ListItemIcon><NotificationsIcon className={classes.icon} /></ListItemIcon>\r\n                    <ListItemText primary=\"Alertas\" />\r\n                  </ListItem>\r\n                </Link>\r\n\r\n                <ListItem className={classes.list} onClick={handleDrawerClose} button>\r\n                  <ListItemIcon><AttachMoneyIcon className={classes.icon} /></ListItemIcon>\r\n                  <ListItemText primary=\"Ingresos\" />\r\n                </ListItem>\r\n\r\n                <ListItem className={classes.list} onClick={handleDrawerClose} button>\r\n                  <ListItemIcon><UpdateIcon className={classes.icon} /></ListItemIcon>\r\n                  <ListItemText primary=\"Proximos gastos\" />\r\n                </ListItem>\r\n\r\n                <Link className={classes.list} to=\"/activities\">\r\n                <ListItem className={classes.list} onClick={handleDrawerClose} button>\r\n                  <ListItemIcon><FormatListBulletedIcon className={classes.icon} /></ListItemIcon>\r\n                  <ListItemText primary=\"Pendientes\" />\r\n                </ListItem>\r\n                </Link>\r\n                \r\n            </List>\r\n            <Divider />\r\n          </Drawer>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n        USER_REGISTER_FAIL,\r\n        USER_REGISTER_REQUEST,\r\n        USER_REGISTER_SUCCESS,\r\n        USER_SIGIN_FAIL,\r\n        USER_SIGIN_REQUEST,\r\n        USER_SIGIN_SUCCESS,\r\n        USER_SIGNOUT_FAIL,\r\n        USER_SUSCRIBE_FAIL,\r\n        USER_SUSCRIBE_REQUEST,\r\n        USER_SUSCRIBE_SUCCESS \r\n        } from \"../constants/userConstants\";\r\nimport axios from 'axios';\r\n\r\nexport const signin = (userData) => async (dispatch) => {\r\n    dispatch({ type: USER_SIGIN_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.post('/api/users/signin', userData);\r\n        dispatch({type: USER_SIGIN_SUCCESS, payload: data });\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_SIGIN_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });\r\n    }\r\n}\r\n\r\nexport const signout = () => async(dispatch) => {\r\n    localStorage.removeItem('userInfo');;\r\n    dispatch({ type: USER_SIGNOUT_FAIL });\r\n}\r\n\r\nexport const registerUser = (userData) => async(dispatch) => {\r\n    dispatch({ type:USER_REGISTER_REQUEST, payload: userData });\r\n    try {\r\n       const { data } = await axios.post('/api/users/register', userData);\r\n       dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n       dispatch({ type: USER_SIGIN_SUCCESS, payload: data });\r\n       localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });\r\n    }\r\n}\r\n\r\nexport const subscribeUser = (suscription) => async (dispatch, getState) => {\r\n    dispatch({ type: USER_SUSCRIBE_REQUEST });\r\n    try {\r\n        const { userSignin: { userInfo } } = getState();\r\n\r\n        const { data } = await axios.post('/api/users/suscription', {\r\n            suscription: suscription,\r\n            userId: userInfo ? userInfo.id  : 1\r\n        });\r\n        dispatch({ type: USER_SUSCRIBE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_SUSCRIBE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });\r\n    }\r\n}","export const ALERT_LIST_REQUEST = \"ALERT_LIST_REQUEST\";\r\nexport const ALERT_LIST_SUCCESS = \"ALERT_LIST_SUCCESS\";\r\nexport const ALERT_LIST_FAIL = \"ALERT_LIST_FAIL\";\r\n\r\nexport const ALERT_UPDATE_REQUEST = \"ALERT_UPDATE_REQUEST\";\r\nexport const ALERT_UPDATE_SUCCESS = \"ALERT_UPDATE_SUCCESS\";\r\nexport const ALERT_UPDATE_FAIL = \"ALERT_UPDATE_FAIL\";\r\n\r\nexport const ALERT_CREATE_REQUEST = \"ALERT_CREATE_REQUEST\";\r\nexport const ALERT_CREATE_SUCCESS = \"ALERT_CREATE_SUCCESS\";\r\nexport const ALERT_CREATE_FAIL = \"ALERT_CREATE_FAIL\";\r\n\r\nexport const ALERT_DELETE_REQUEST = \"ALERT_DELETE_REQUEST\";\r\nexport const ALERT_DELETE_SUCCESS = \"ALERT_DELETE_SUCCESS\";\r\nexport const ALERT_DELETE_FAIL = \"ALERT_DELETE_FAIL\";\r\n\r\nexport const TYPE_ALERT_LIST_REQUEST = \"TYPE_ALERT_LIST_REQUEST\";\r\nexport const TYPE_ALERT_LIST_SUCCESS = \"TYPE_ALERT_LIST_SUCCESS\";\r\nexport const TYPE_ALERT_LIST_FAIL = \"TYPE_ALERT_LIST_FAIL\";","import axios from \"axios\";\r\nimport { ALERT_CREATE_FAIL, ALERT_CREATE_REQUEST, ALERT_CREATE_SUCCESS, ALERT_DELETE_FAIL, ALERT_DELETE_REQUEST, ALERT_DELETE_SUCCESS, ALERT_LIST_FAIL, ALERT_LIST_REQUEST, ALERT_LIST_SUCCESS, ALERT_UPDATE_FAIL, ALERT_UPDATE_REQUEST, ALERT_UPDATE_SUCCESS, TYPE_ALERT_LIST_FAIL, TYPE_ALERT_LIST_REQUEST, TYPE_ALERT_LIST_SUCCESS } from '../constants/alertConstants';\r\n\r\nexport const listAlerts = () => async (dispatch, getState) => {\r\n    dispatch({ type: ALERT_LIST_REQUEST });\r\n    const {userSignin: { userInfo }} = getState(); \r\n    try {\r\n        const { data } = await axios.get(`/api/alerts/${userInfo.id}`);\r\n        dispatch({ type: ALERT_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALERT_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        }); \r\n    }\r\n}\r\n\r\nexport const updateAlertActive = (alert) => async (dispatch) => {\r\n    dispatch({ type: ALERT_UPDATE_REQUEST });\r\n    try {\r\n        const { data } = await axios.put(`/api/alerts`, alert);\r\n        dispatch({ type: ALERT_UPDATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALERT_UPDATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });    \r\n    }\r\n}\r\n\r\nexport const createAlert = (alert) => async (dispatch, getState) => {\r\n    dispatch({ type: ALERT_CREATE_REQUEST });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n        const { data } = await axios.post('/api/alerts', {\r\n            alert: alert,\r\n            userId: userInfo.id\r\n        });\r\n        dispatch({ type: ALERT_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALERT_CREATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        }); \r\n    }\r\n}\r\n\r\nexport const listTypeAlerts = () => async (dispatch) => {\r\n    dispatch({ type: TYPE_ALERT_LIST_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.post('/api/alerts/types');\r\n        dispatch({ type: TYPE_ALERT_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: TYPE_ALERT_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        }); \r\n    }\r\n}\r\n\r\nexport const deleteAlert = (alertId) => async (dispatch) => {\r\n    dispatch({ type: ALERT_DELETE_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.delete(`/api/alerts/${alertId}`);\r\n        dispatch({ type: ALERT_DELETE_SUCCESS, payload: data.deleted });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALERT_DELETE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });   \r\n    }\r\n}\r\n","import React from 'react';\r\n// import Alert from '@material-ui/lab/Alert';\r\n\r\nexport default function MessageBox(props) {\r\n    return (\r\n        // <Alert severity=\"error\">Error</Alert>\r\n        <div className={`alert alert-${props.variant || 'info'}`}>\r\n            {props.children} \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function LoadingBox() {\r\n    return (\r\n        <div>\r\n            <div className='spinner'></div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Select from 'react-select';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport LoadingBox from '../utils/LoadingBox';\r\nimport { createAlert, listAlerts, listTypeAlerts, updateAlertActive } from '../../actions/alertActions';\r\n\r\nexport default function DrawerAlert(props) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { editAlert, edit, state, setState } = props;\r\n  const [days, setDays] = useState([]);\r\n  const [selectDay, setSelectDay] = useState('');\r\n  const [selectType, setSelectType] = useState('');\r\n  const [day, setDay] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [submit, setSubmit] = useState(false);\r\n\r\n  const alertCreate = useSelector(state => state.alertCreate);\r\n  const { alert } = alertCreate;\r\n\r\n  const alertActiveUpdate = useSelector(state => state.alertActiveUpdate);\r\n  const { alert: alertSuccess } = alertActiveUpdate;\r\n\r\n  const alertTypeList = useSelector(state => state.alertTypeList);\r\n  const { typeAlerts, loading: loadingTypes } = alertTypeList;\r\n\r\n    const toggleDrawer = (open) => {\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handleClose = useCallback((open) => {\r\n        if(state.right)\r\n            setState({ ...state, right: open });\r\n    },[setState, state]);\r\n\r\n  const handleSubmit = (e) => { \r\n        e.preventDefault();\r\n        setSubmit(true);\r\n        if (edit) {\r\n            dispatch(updateAlertActive({\r\n                date: day,\r\n                alert: title,\r\n                message,\r\n                id:editAlert.id,\r\n                active:editAlert.active\r\n            }));\r\n        } else {\r\n            dispatch(createAlert({date: day, alert: title, message}));\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (days.length < 1) {\r\n            let days = [];\r\n            [...Array(31).keys()].map(item => days.push({value: item + 1, label: item + 1}));\r\n            setDays(days);\r\n        }\r\n    },[days]);\r\n\r\n    useEffect(()=>{\r\n        dispatch(listTypeAlerts());\r\n    }, [dispatch])\r\n\r\n    useEffect(()=>{\r\n        if ((alert && submit) || (alertSuccess && submit)){\r\n            handleClose(false);\r\n            dispatch(listAlerts());\r\n        }\r\n    },[alert, submit, dispatch, alertSuccess, handleClose]);\r\n\r\n    useEffect(()=>{\r\n        if (editAlert && edit) {\r\n            const type = typeAlerts.filter(type => type.label === editAlert.priority)\r\n            setTitle(editAlert.alert);\r\n            setMessage(editAlert.message);\r\n            setSelectDay({label: editAlert.date, value:editAlert.date});\r\n            setSelectType(type);\r\n            setDay(editAlert.date); \r\n        } else {\r\n            setTitle('');\r\n            setMessage('');\r\n            setSelectDay({ label: 1, value: 1 }); \r\n            setDay(1); \r\n            setSelectType({});\r\n        }\r\n    },[editAlert, edit, typeAlerts]);\r\n\r\n  return (\r\n\r\n    <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n        <div className=\"drawer-header\">\r\n            <ArrowBackIcon id=\"close\" className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n        </div>\r\n        <div className=\"drawer-body\">\r\n        <form className=\"form-modal\" onSubmit={handleSubmit}>\r\n                <div className=\"form-title\">\r\n                    <div>Registar Alerta</div>\r\n                    <Divider />\r\n                </div>\r\n                <div>\r\n                <label>Prioridad</label>\r\n                {\r\n                    loadingTypes ? <LoadingBox />\r\n                    :\r\n                    (\r\n                    <Select\r\n                        placeholder=\"Prioridad de la alerta\"\r\n                        onChange={e => setTitle(e.value)}\r\n                        defaultValue={selectType}\r\n                        options={typeAlerts}\r\n                    />\r\n                    )\r\n                }\r\n\r\n            </div>\r\n            <div>\r\n                <label>Descripcíon alerta</label>\r\n                <textarea\r\n                    type=\"text\"\r\n                    value={message}\r\n                    onChange={e => setMessage(e.target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label>Día de envío</label>\r\n                <Select\r\n                    placeholder=\"Dia\"\r\n                    onChange={e => setDay(e.value)}\r\n                    defaultValue={selectDay}\r\n                    options={days}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button onClick={() => toggleDrawer(false)} className=\"btn secundary\" type=\"submit\">{edit ? 'Actualizar' : 'Crear'}</button>\r\n            </div>\r\n\r\n        </form>\r\n        </div>\r\n    </Drawer>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteAlert, listAlerts, updateAlertActive } from '../../actions/alertActions';\r\nimport MessageBox from '../../components/MessageBox';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport DrawerAlert from '../../components/Drawers/DrawerAlert';\r\nimport Swal from 'sweetalert2'\r\n\r\nexport default function AlertScreen() {\r\n    const dispatch = useDispatch();\r\n    const [rows, setRows] = useState([]);\r\n    const [send, setSend] = useState(false);\r\n    const [editAlert, setEditAlert] = useState();\r\n    const [edit, setEdit] = useState(false);\r\n    const [submitDelete, setSubmitDelete] = useState(false);\r\n\r\n    const alertList = useSelector(state => state.alertList);\r\n    const { error, loading, alerts } = alertList;\r\n\r\n    const alertActiveUpdate = useSelector(state => state.alertActiveUpdate);\r\n    const { alert } = alertActiveUpdate;\r\n\r\n    const alertDelete = useSelector(state => state.alertDelete);\r\n    const { success } = alertDelete;\r\n\r\n    const [state, setState] = React.useState({ right: false });\r\n\r\n    const handleActive = (e, item) => {\r\n        dispatch(updateAlertActive({...item, active: e.target.checked}));\r\n        setSend(true);\r\n    }\r\n\r\n    const toggleDrawer = (open, item) => {\r\n\r\n        if(item){\r\n            setEditAlert(item);\r\n            setEdit(true);\r\n        } else {\r\n            setEditAlert({});\r\n        }\r\n\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handleDelete = (alertId) => {\r\n        Swal.fire({\r\n            title: '¿Eliminar alerta?',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Sí, eliminar'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              dispatch(deleteAlert(alertId));\r\n              setSubmitDelete(true);\r\n            }\r\n          })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(success && submitDelete){\r\n            Swal.fire(\r\n                'Eliminado!',\r\n                'Alerta eliminada correctamente',\r\n                'success'\r\n            ).then(()=>{\r\n                setSubmitDelete(false);\r\n                dispatch(listAlerts());\r\n            });  \r\n        }\r\n    },[success, submitDelete, dispatch])\r\n\r\n    useEffect(()=>{\r\n        if (alerts) {\r\n            let rows = [];\r\n            alerts.map(item => rows.push({\r\n                id: item.alertId,\r\n                priority: item.typesalert.typeAlert,\r\n                message: item.message,\r\n                date: item.date,\r\n                active: item.active\r\n            }));\r\n\r\n            setRows(rows);\r\n        } else {\r\n            dispatch(listAlerts());\r\n        }\r\n    }, [alerts, dispatch]);\r\n\r\n    useEffect(()=>{\r\n        if (alert && send){\r\n            dispatch(listAlerts());\r\n        }\r\n    },[dispatch, alert, send]);\r\n\r\n    return (\r\n        <div>\r\n            <DrawerAlert \r\n                state={state}\r\n                setState={setState}\r\n                editAlert={editAlert}\r\n                edit={edit}\r\n            />\r\n\r\n            <div className=\"container page-container page\">\r\n                <h2>Alertas<small></small></h2>\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={() => toggleDrawer(true)}\r\n                    className=\"btn primary\"\r\n                >\r\n                    Crear alerta\r\n                </button>\r\n\r\n                {\r\n                loading ? <LoadingBox />\r\n                :\r\n                error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                :(\r\n                <div className=\"container-table\">\r\n                    <ul className=\"responsive-table\">\r\n                        <li className=\"table-header\">\r\n                            <div className=\"col col-2\">Activo</div>\r\n                            <div className=\"col col-2\">Prioridad</div>\r\n                            <div className=\"col col-4\">Mensaje</div>\r\n                            <div className=\"col col-4\">Dia de envio</div>\r\n                            <div className=\"col col-2\">Acciones</div>\r\n                        </li>\r\n                        {\r\n                            rows.map(item => (\r\n                                <li className=\"table-row\" key={item.id}>\r\n                                    <div className=\"col col-2\" data-label=\"Payment Status\">\r\n                                        <input type=\"checkbox\" checked={item.active} value={false} onChange={ e => handleActive(e, item)} />\r\n                                    </div>\r\n                                    <div className=\"col col-2\" data-label=\"Customer Name\">{item.priority}</div>\r\n                                    <div className=\"col col-4\" data-label=\"Amount\">{item.message}</div>\r\n                                    <div className=\"col col-4\" data-label=\"Payment Status\">Día {item.date} de cada mes</div>\r\n                                    <div className=\"col col-2\" data-label=\"Payment Status\">\r\n                                        <EditIcon onClick={() => toggleDrawer(true, item)} className=\"cursor-pointer\" />\r\n                                        <DeleteIcon onClick={() => handleDelete(item.id)} className=\"cursor-pointer\" />\r\n                                    </div>\r\n                                </li> \r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const EXPENSE_LIST_REQUEST = 'EXPENSE_LIST_REQUEST';\r\nexport const EXPENSE_LIST_SUCCESS = 'EXPENSE_LIST_SUCCESS';\r\nexport const EXPENSE_LIST_FAIL = 'EXPENSE_LIST_FAIL';\r\n\r\nexport const EXP_LIST_REQUEST = 'EXP_LIST_REQUEST';\r\nexport const EXP_LIST_SUCCESS = 'EXP_LIST_SUCCESS';\r\nexport const EXP_LIST_FAIL = 'EXP_LIST_FAIL';\r\n\r\nexport const EXPENSE_CREATE_REQUEST = 'EXPENSE_CREATE_REQUEST';\r\nexport const EXPENSE_CREATE_SUCCESS = 'EXPENSE_CREATE_SUCCESS';\r\nexport const EXPENSE_CREATE_FAIL = 'EXPENSE_CREATE_FAIL';","import axios from \"axios\";\r\nimport { EXPENSE_CREATE_FAIL, EXPENSE_CREATE_REQUEST, EXPENSE_CREATE_SUCCESS, EXPENSE_LIST_FAIL, EXPENSE_LIST_REQUEST, EXPENSE_LIST_SUCCESS, EXP_LIST_FAIL, EXP_LIST_REQUEST, EXP_LIST_SUCCESS } from \"../constants/expenseConstants\"\r\n\r\nexport const listExpenses = (months, groupers) => async(dispatch, getState) =>{\r\n    dispatch({ type: EXPENSE_LIST_REQUEST });\r\n    const { userSignin : { userInfo }} = getState();\r\n    try {\r\n        const { data } = await axios.post(`/api/expenses/${userInfo.id}`,{\r\n            months: months,\r\n            groupers: groupers,\r\n        }, {\r\n            headers:{\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        });\r\n        dispatch({ type: EXPENSE_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: EXPENSE_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const listExpense = (expenseId) => async (dispatch) => {\r\n    dispatch({ type: EXP_LIST_REQUEST });\r\n    try {\r\n        const { data } = await axios.get(`/api/expenses/${expenseId}`);\r\n        dispatch({ type: EXP_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: EXP_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createExpense = (objExpense) => async (dispatch, getState) => {\r\n    dispatch({ type: EXPENSE_CREATE_REQUEST });\r\n    const {userSignin: { userInfo } } = getState();\r\n\r\n    try {\r\n        const { data } = await axios.post('/api/expenses/', {\r\n            ...objExpense,\r\n            userUserId: userInfo.id\r\n        });\r\n\r\n        if (data.errors) {\r\n            throw new Error(data.errors[0].message);\r\n        }\r\n        dispatch({ type: EXPENSE_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: EXPENSE_CREATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });  \r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listExpenses } from '../actions/expenseActions';\r\n\r\nexport default function ChartScreen() {\r\n    const dispatch = useDispatch();\r\n    const [labels, setLabels] = useState([]);\r\n    const [data, setData] = useState([]);\r\n\r\n    const expenseList = useSelector(state => state.expenseList);\r\n    const { expenses } = expenseList;\r\n\r\n    useEffect(()=>{\r\n        if (!expenses){\r\n            dispatch(listExpenses(['09'], ['category']));\r\n        } else {\r\n            let labels = [];\r\n            let data = [];\r\n            expenses.map(item => labels.push(item.category.category));\r\n            expenses.map(item => data.push(item.value));\r\n            setLabels(labels);\r\n            setData(data);\r\n        }\r\n    },[dispatch, expenses]);\r\n    return (\r\n        <div>\r\n            <Pie \r\n                data={{ \r\n                    labels: labels,\r\n                    datasets: [{\r\n                        data: data,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.9)',\r\n                            'rgba(54, 162, 235, 0.9)',\r\n                            'rgba(255, 206, 86, 0.9)',\r\n                            'rgba(75, 192, 192, 0.9)',\r\n                            'rgba(153, 102, 255, 0.9)',\r\n                            'rgba(255, 159, 64, 0.9)'\r\n                        ],\r\n                        borderColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)'\r\n                        ],\r\n                        borderWidth: 1\r\n                    }]\r\n                }}\r\n                height={400}\r\n                width={600}\r\n                options={{ maintainAspectRatio: false }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","export const GET_MONTHS_REQUEST = \"GET_MONTHS_REQUEST\";\r\nexport const GET_MONTHS_SUCCESS = \"GET_MONTHS_SUCCESS\";\r\nexport const GET_MONTHS_FAIL = \"GET_MONTHS_FAIL\";\r\n\r\nexport const SET_NOTIFICATIONS_REQUEST = \"SET_NOTIFICATIONS_REQUEST\";\r\nexport const SET_NOTIFICATIONS_SUCCESS = \"SET_NOTIFICATIONS_SUCCESS\";\r\nexport const SET_NOTIFICATIONS_FAIL = \"SET_NOTIFICATIONS_FAIL\";","import axios from \"axios\";\r\nimport { GET_MONTHS_FAIL, GET_MONTHS_REQUEST, GET_MONTHS_SUCCESS, SET_NOTIFICATIONS_FAIL, SET_NOTIFICATIONS_REQUEST, SET_NOTIFICATIONS_SUCCESS } from \"../constants/utilsConstants\"\r\n\r\nexport const getMonths = () => async (dispatch) => {\r\n    dispatch({ type: GET_MONTHS_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.get('/api/utils/months');\r\n        dispatch({ type: GET_MONTHS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_MONTHS_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const setNotifications = (data) => (dispatch) => {\r\n    dispatch({ type:SET_NOTIFICATIONS_REQUEST });\r\n    try {\r\n        const notification = { title: data.title, body: data.message, watched: false }\r\n        localStorage.setItem('notification', JSON.stringify(notification));\r\n        dispatch({ type: SET_NOTIFICATIONS_SUCCESS, payload: notification });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SET_NOTIFICATIONS_FAIL, payload: 'Error getting path'\r\n        });\r\n    }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listExpense } from '../../actions/expenseActions';\r\nimport { getMonths } from '../../actions/utilsActions';\r\nimport MessageBox from '../../components/MessageBox';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\nexport default function ExpenseScreen(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const expenseId = props.match.params.id;\r\n\r\n    const expList = useSelector(state => state.expList);\r\n    const { expense, loading, error } = expList;\r\n\r\n    const monthsGet = useSelector(state => state.monthsGet);\r\n    const { months } = monthsGet;\r\n\r\n    const convertDate = (date) => {\r\n        let month = date.split('-')[1];\r\n        let day = date.split('-')[2];\r\n  \r\n        let result = months.filter(item => item.value === month);\r\n        let newDate = `${day} ${result[0].label}`;\r\n        return newDate;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        dispatch(listExpense(expenseId));\r\n    }, [dispatch, expenseId]);\r\n\r\n    useEffect(()=> {\r\n        if(!months) dispatch(getMonths());\r\n      },[dispatch, months]);\r\n    \r\n    return (\r\n        <div>\r\n            {\r\n                loading ? <LoadingBox />\r\n                :\r\n                error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                : \r\n                (\r\n                <div className=\"card-expense\">\r\n                    <div className=\"card-expense-header\">\r\n                        <div>{expense.category.label}</div>\r\n                        <div>{expense.subcategory.label}</div>\r\n                        <div>{expense.description}</div>\r\n                    </div>\r\n                    <div className=\"card-expense-body\">\r\n                        <div>${expense.value}</div>\r\n                        { months && ( \r\n                            <div>{convertDate(expense.date.split('T')[0])}</div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"card-expense-edit\">\r\n                        <Avatar> <EditIcon /> </Avatar>\r\n                    </div>\r\n                </div>\r\n                )\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport { listExpenses } from '../actions/expenseActions';\r\nimport { getMonths } from '../actions/utilsActions';\r\n\r\nexport default function SelectDate(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const monthsGet = useSelector(state => state.monthsGet);\r\n    const { months } = monthsGet;\r\n\r\n    const { month } = props;\r\n    const [monthSelect, setMonthSelect] = useState();\r\n    const [monthsSelect, setMonthsSelect] = useState();\r\n    const [agrupadores, setAgrupadores] = useState();\r\n    const [groupesSelect, setSelectGroupes] = useState([]);\r\n\r\n    const handlerMonth = (items) => {\r\n        let months = [];\r\n        items.map(item => months.push(item.value));\r\n\r\n        setMonthsSelect(months);\r\n        dispatch(listExpenses(months, groupesSelect));\r\n    }\r\n\r\n    const handlerGrouper = (items) => {\r\n        let groupers = [];\r\n        items.map(item => groupers.push(item.value));\r\n\r\n        setSelectGroupes(groupers);\r\n        dispatch(listExpenses(monthsSelect, groupers));\r\n    }\r\n\r\n    useEffect(()=>{\r\n        dispatch(listExpenses([month], []));\r\n    },[dispatch, month]);\r\n\r\n    useEffect(()=>{\r\n        if (!agrupadores) \r\n            setAgrupadores([\r\n                {value:'category', label:'Categoria'},\r\n                {value:'subcategory', label:'Subcategoria'},\r\n            ]);\r\n    },[agrupadores]);\r\n\r\n    useEffect(()=>{\r\n        if(months){\r\n            var result = months.filter(item => item.value === month);\r\n\r\n            if (!monthSelect) setMonthSelect(result);\r\n            if (!monthsSelect) setMonthsSelect([result[0].value]);\r\n\r\n        } else {\r\n            dispatch(getMonths());\r\n        }\r\n    },[dispatch, months, monthSelect, month, monthsSelect]);\r\n\r\n    return (\r\n        <div className=\"selects-datable\">\r\n            { months && monthSelect && (\r\n                <Select\r\n                className=\"select\"\r\n                placeholder=\"Mes\"\r\n                isMulti\r\n                onChange={e => handlerMonth(e)}\r\n                defaultValue={monthSelect}\r\n                options={months} />\r\n            )}\r\n\r\n            { months && monthSelect && (\r\n                <Select\r\n                className=\"select\"\r\n                placeholder=\"Agrupar por...\"\r\n                isMulti\r\n                onChange={e => handlerGrouper(e)}\r\n                // defaultValue={monthSelect}\r\n                options={agrupadores} />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function FloatButton(props) {\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const [url, setUrl] = useState('');\r\n\r\n    useEffect(()=>{\r\n        const path = props.props.location.pathname;\r\n        switch (path) {\r\n            case '/':\r\n                setUrl('/expenses-create');\r\n                break;\r\n            case '/activities':\r\n                setUrl('/activities-create');\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }, [props]);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                userInfo && \r\n                (\r\n                    <Link to = {url}>\r\n                        <div className=\"floating-button\">\r\n                            <button className=\"btoncito\">\r\n                                <AddIcon />\r\n                            </button>\r\n                        </div>\r\n                    </Link>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport MessageBox from '../components/MessageBox';\r\nimport LoadingBox from '../components/utils/LoadingBox';\r\nimport { MDBDataTableV5 } from 'mdbreact';\r\nimport SelectDate from '../components/SelectDate';\r\nimport { getMonths } from '../actions/utilsActions';\r\nimport FloatButton from '../components/FloatButton';\r\n\r\nexport default function HomeScreen(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const [success, setSuccess] = useState(false);\r\n    const [datatable, setDatatable] = useState({});\r\n    const [month, setMonth] = useState();\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const monthsGet = useSelector(state => state.monthsGet);\r\n    const { months } = monthsGet;\r\n\r\n    const expenseList = useSelector(state => state.expenseList);\r\n    const { loading, expenses, error } = expenseList;\r\n\r\n    const getDate = () => {\r\n        let newDate = new Date()\r\n        let month = newDate.getMonth() + 1;\r\n\r\n        month = month < 10 ? `0${month}` : `${month}`;\r\n        setMonth(month);\r\n    }\r\n\r\n    const convertDate = (date) => {\r\n      let month = date.split('-')[1];\r\n      let day = date.split('-')[2];\r\n\r\n      let result = months.filter(item => item.value === month);\r\n      let newDate = `${day} ${result[0].label}`;\r\n      return newDate;\r\n    }\r\n\r\n    const handleRedirect = (expenseId) => {\r\n        props.history.push(`/expenses/${expenseId}`);\r\n    }\r\n\r\n    useEffect(()=> {\r\n      if(!months) dispatch(getMonths());\r\n    },[dispatch, months]);\r\n\r\n    useEffect(()=>{\r\n        if (!userInfo) props.history.push(\"/login\");\r\n        if (expenses) {\r\n            let columns = [\r\n                {\r\n                    label: 'Categoria',\r\n                    field: 'category',\r\n                    width: 150,\r\n                    attributes: {\r\n                      'aria-controls': 'DataTable',\r\n                      'aria-label': 'Gasto',\r\n                    },\r\n                  },\r\n                  {\r\n                    label: 'Subcategoria',\r\n                    field: 'subcategory',\r\n                    width: 270,\r\n                  },\r\n                  {\r\n                    label: 'Valor',\r\n                    field: 'value',\r\n                    width: 270\r\n                  },\r\n            ];\r\n\r\n            let rows = [];\r\n\r\n            if (expenses.length) {   \r\n              if(expenses[0].description)\r\n              columns.push({\r\n                label: 'Descripción',\r\n                field: 'description',\r\n                width: 270,\r\n              });\r\n\r\n            if(expenses[0].date)\r\n              columns.push({\r\n                label: 'Fecha',\r\n                field: 'date',\r\n                width: 270,\r\n              });\r\n              expenses.map(item => rows.push({\r\n                  category: item.category.category,\r\n                  subcategory: item.subcategory.subcategory,\r\n                  description: item.description ? item.description : '',\r\n                  value: new Intl.NumberFormat().format(item.value),\r\n                  date: item.date ? convertDate(item.date.split('T')[0]) : '',\r\n              }));\r\n            }\r\n            setDatatable({ columns, rows });\r\n          }\r\n          if(!month) {\r\n            getDate();\r\n          }\r\n        setSuccess(false);\r\n    }, [dispatch, props, userInfo, success, expenses, month]);\r\n    \r\n    return (\r\n        <div className=\"home-screen\">\r\n\r\n            <div className=\"title\">Dero</div>\r\n\r\n            { month && (<SelectDate month={month} />)}\r\n\r\n            {\r\n            loading ? <LoadingBox></LoadingBox>\r\n            :\r\n            error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n            :\r\n            (\r\n              <div className=\"datatable\">\r\n                <div className=\"data-info\">\r\n                    <div className=\"data-card\">\r\n                      <div>Gastos totales</div>\r\n                      <div>\r\n                        ${new Intl.NumberFormat().format(expenses.reduce((a, c) => a + parseInt(c.value), 0))}\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"data-table\">\r\n                  <MDBDataTableV5\r\n                    hover\r\n                    data={datatable}\r\n                    searchTop\r\n                    paging={false}\r\n                    info={false}\r\n                    searchBottom={false}\r\n                  />\r\n                </div>\r\n                <div className=\"data-content\">\r\n                    {\r\n                      expenses.map(item => (\r\n                        // <Link to={`/expense/${item.expenseId}`}>\r\n                          <div key={item.expenseId} className=\"data-table-items\" onClick={() => handleRedirect(item.expenseId)}>\r\n\r\n                            <div className=\"data-date\">\r\n                              <div>{item.date ? convertDate(item.date.split('T')[0]).slice(0, 6).split(' ')[1] : ''}</div>\r\n                              <div>{item.date ? convertDate(item.date.split('T')[0]).slice(0, 6).split(' ')[0] : ''}</div>\r\n                            </div>\r\n\r\n                            <div> \r\n                              <div className=\"category\">{item.category.category}</div>\r\n                              <div className=\"subcategory\">{item.subcategory.subcategory}</div>\r\n                            </div>\r\n\r\n                              <div>${new Intl.NumberFormat().format(item.value)}</div>\r\n\r\n                          </div>\r\n                        // </Link>\r\n                      ))\r\n                    }\r\n                  </div>\r\n              </div>\r\n            )}\r\n            <FloatButton props={props} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signin } from '../../actions/userActions';\r\nimport { Link } from 'react-router-dom';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport MessageBox from '../../components/MessageBox';\r\n\r\nexport default function LoginScreen(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo, error, loading } = userSignin;\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signin({username: username, password: password}));\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(userInfo) {\r\n            props.history.push(\"/\")\r\n        }\r\n    }, [userInfo, props])\r\n    return (\r\n        <div className=\"home\">\r\n            \r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                \r\n                <div className=\"title\">\r\n                    Iniciar sesión\r\n                </div>\r\n\r\n                <div>\r\n                    <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            placeholder=\"Username\"\r\n                            onChange={ e => setUsername(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={e => setPassword(e.target.value)}\r\n                    ></input>\r\n                    {/* <span><Link to=\"/\">recuperar contraseña</Link></span> */}\r\n                </div>\r\n                <div>\r\n                    {\r\n                        loading ? <LoadingBox />\r\n                        :\r\n                        (\r\n                            <button className=\"btn primary\" type=\"submit\">Iniciar Sesión</button>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n                <div>\r\n                    <Link to=\"/register\">¿Olvidaste tu contraseña?</Link> \r\n                </div>\r\n\r\n                <div>\r\n                    { error && <MessageBox variant=\"danger\">{error}</MessageBox> }\r\n                </div>\r\n            </form>\r\n            <div className=\"box-register\">\r\n                <div>\r\n                    <span>\r\n                        <Link to=\"/register\">Crear una cuenta</Link> \r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ProfileScreen() {\r\n    return (\r\n        <div>\r\n            Profile\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { registerUser } from '../../actions/userActions';\r\nimport MessageBox from '../../components/MessageBox';\r\n\r\nexport default function RegisterScreen(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [error, setError] = useState(null);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        setError(null);\r\n        if (password === confirmPassword) {\r\n            dispatch(registerUser({username: username, password:password, email: email}));\r\n        } else {\r\n            setError('Las contraseñas no coinciden');\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (userInfo) {\r\n            props.history.push(\"/\");\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                <div className=\"title\">\r\n                    Registro\r\n                </div>\r\n\r\n                <div>\r\n                    { error && (<MessageBox variant=\"danger\">{error}</MessageBox>)}\r\n                </div>\r\n\r\n                <div>\r\n                    <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            placeholder=\"Username\"\r\n                            onChange={ e => setUsername(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            placeholder=\"Email\"\r\n                            onChange={ e => setEmail(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={e => setPassword(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={e => setConfirmPassword(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <button className=\"btn primary\" type=\"submit\">Registrarme</button>\r\n                </div>\r\n\r\n                <div>\r\n                    <Link to=\"/login\">Iniciar sesion</Link> \r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","export const CATEGORY_CREATE_REQUEST = \"CATEGORY_CREATE_REQUEST\";\r\nexport const CATEGORY_CREATE_SUCCESS = \"CATEGORY_CREATE_SUCCESS\";\r\nexport const CATEGORY_CREATE_FAIL = \"CATEGORY_CREATE_FAIL\";\r\n\r\nexport const CATEGORY_LIST_REQUEST = \"CATEGORY_LIST_REQUEST\";\r\nexport const CATEGORY_LIST_SUCCESS = \"CATEGORY_LIST_SUCCESS\";\r\nexport const CATEGORY_LIST_FAIL = \"CATEGORY_LIST_FAIL\";","import axios from \"axios\";\r\nimport { CATEGORY_CREATE_FAIL, CATEGORY_CREATE_REQUEST, CATEGORY_CREATE_SUCCESS, CATEGORY_LIST_FAIL, CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS } from \"../constants/categoryConstants\"\r\n\r\nexport const listCategories = () => async(dispatch, useState) => {\r\n    dispatch({type:  CATEGORY_LIST_REQUEST });\r\n    const { userSignin: { userInfo }} = useState();\r\n    try {\r\n        const { data } = await axios.get(`/api/categories/${userInfo.id}`);\r\n        dispatch({ type: CATEGORY_LIST_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CATEGORY_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        }); \r\n    }\r\n}\r\n\r\nexport const createCategory = (name) => async(dispatch, useState) => {\r\n    dispatch({ type: CATEGORY_CREATE_REQUEST, payload: name});\r\n    const { userSignin: { userInfo } } = useState();\r\n    try {\r\n        const { data } = await axios.post('/api/categories/', {\r\n            name: name,\r\n            userId: userInfo.id\r\n        });\r\n        dispatch({ type: CATEGORY_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CATEGORY_CREATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}","export const SUBCATEGORY_LIST_REQUEST = 'SUBCATEGORY_LIST_REQUEST';\r\nexport const SUBCATEGORY_LIST_SUCCESS = 'SUBCATEGORY_LIST_SUCCESS';\r\nexport const SUBCATEGORY_LIST_FAIL = 'SUBCATEGORY_LIST_FAIL';\r\n\r\nexport const SUBCATEGORY_CREATE_REQUEST = 'SUBCATEGORY_CREATE_REQUEST';\r\nexport const SUBCATEGORY_CREATE_SUCCESS = 'SUBCATEGORY_CREATE_SUCCESS';\r\nexport const SUBCATEGORY_CREATE_FAIL = 'SUBCATEGORY_CREATE_FAIL';","import axios from \"axios\";\r\nimport { SUBCATEGORY_CREATE_FAIL, SUBCATEGORY_CREATE_REQUEST, SUBCATEGORY_CREATE_SUCCESS, SUBCATEGORY_LIST_FAIL, SUBCATEGORY_LIST_REQUEST, SUBCATEGORY_LIST_SUCCESS } from \"../constants/subcategoriesConstants\"\r\n\r\nexport const listSubcategories = (categoryId) => async (dispatch) => {\r\n    dispatch({ type: SUBCATEGORY_LIST_REQUEST });\r\n    try {\r\n        const { data } = await axios.get(`/api/subcategories/${categoryId}`);\r\n        dispatch({ type: SUBCATEGORY_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SUBCATEGORY_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createSubcategory = (name, categoryId) => async (dispatch) => {\r\n    dispatch({ type: SUBCATEGORY_CREATE_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.post('/api/subcategories',{\r\n            name: name,\r\n            categoryId: categoryId\r\n        });\r\n        dispatch({ type: SUBCATEGORY_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SUBCATEGORY_CREATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createCategory, listCategories } from '../actions/categoryActions';\r\nimport { createSubcategory, listSubcategories } from '../actions/subcategoriesActions';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nexport default function SubForm(props) {\r\n\r\n    const { type, categoryId, showNew } = props;\r\n    const dispatch = useDispatch('');\r\n\r\n    const categoryCreate = useSelector(state => state.categoryCreate);\r\n    const { category } = categoryCreate;\r\n\r\n    const subcategoryCreate = useSelector(state => state.subcategoryCreate);\r\n    const { subcategory } = subcategoryCreate;\r\n    \r\n    const [name, setname] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [submitCategory, setSubmitCategory] = useState(false);\r\n    const [submitSubcategory, setSubmitSubcategory] = useState(false);\r\n\r\n    const handlerSubmit = () => {\r\n\r\n        switch (type) {\r\n            case 'category':\r\n                dispatch(createCategory(name));\r\n                setSubmitCategory(true);\r\n                break;\r\n            case 'subcategory':\r\n                dispatch(createSubcategory(name, categoryId));\r\n                setSubmitSubcategory(true);\r\n                break\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let title = type === 'category' ? 'categoria' : 'subcategoria';\r\n        setTitle(title);\r\n    }, [type, category]);\r\n\r\n    useEffect(()=>{\r\n        if (category && submitCategory) {\r\n          showNew(false); \r\n          dispatch(listCategories()); \r\n          dispatch(listSubcategories(category.categoryId)); \r\n        }\r\n    }, [submitCategory, category, dispatch, showNew]);\r\n\r\n    useEffect(()=>{\r\n        if (subcategory && submitSubcategory) {\r\n          showNew(false); \r\n          dispatch(listSubcategories(categoryId)); \r\n        }\r\n    }, [submitSubcategory, subcategory, dispatch, showNew, categoryId]);\r\n    return (\r\n        <div className=\"sub-form\">\r\n            <div>\r\n                <input \r\n                    type=\"text\"\r\n                    maxLength=\"20\"\r\n                    onChange={e => setname(e.target.value)}\r\n                    placeholder={`Nueva ${title}`}>\r\n                </input>\r\n            </div>\r\n            <div>\r\n                <CheckIcon onClick={handlerSubmit} />\r\n            </div>\r\n            <div>\r\n                <ClearIcon onClick={() => showNew(false)} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MessageBox from '../../components/MessageBox';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport Select from 'react-select';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listCategories } from '../../actions/categoryActions';\r\nimport { createExpense, listExpenses } from '../../actions/expenseActions';\r\nimport { listSubcategories } from '../../actions/subcategoriesActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SubForm from '../../components/SubForm';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function ExpenseCreateScreen(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [description, setDescription] = useState('');\r\n    const [value, setValue] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [subcategory, setSubcategory] = useState('');\r\n    const [today, setToday] = useState('');\r\n\r\n    const [submit, setSubmit] = useState(false);\r\n    const [showNewCategory, setShowNewCateogry] = useState(false);\r\n    const [showNewSubcategory, setShowNewSubcategory] = useState(false);\r\n    const [state, setState] = useState({ right: true});\r\n\r\n    const categoriesList = useSelector(state => state.categoriesList);\r\n    const { loading, error, categories } = categoriesList;\r\n\r\n    const expenseCreate = useSelector(state => state.expenseCreate);\r\n    const { expense, loading: loadingSuccess, error: errorCreate } = expenseCreate;\r\n\r\n    const subcategoriesList = useSelector(state => state.subcategoriesList);\r\n    const { subcategories, loading: loadingSubcategory, error: errorSubcategory } = subcategoriesList;\r\n\r\n    const toggleDrawer = (open) => {\r\n        props.history.push('/');\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handleClose = useCallback((open) => {\r\n        if(state.right)\r\n            props.history.push('/');\r\n            setState({ ...state, right: open });\r\n    },[setState, state, props]);\r\n\r\n    const loadCategories = useCallback(() => {\r\n        if (!categories) {\r\n            dispatch(listCategories());\r\n        } else {\r\n            if (categories.length > 0) {\r\n                setCategory(categories[0].value);\r\n            }\r\n        }\r\n    },[categories, dispatch]);\r\n\r\n    const handlerCategory = (e) => {\r\n        setCategory(e);\r\n    }\r\n\r\n    const handlerSubmit = (e) => {\r\n        e.preventDefault();\r\n        const objExpense = {\r\n            description: description,\r\n            value: value,\r\n            date: date,\r\n            categoryCategoryId: category,\r\n            subcategorySubcategoryId: subcategory\r\n        }\r\n        setSubmit(true);\r\n        dispatch(createExpense(objExpense));\r\n    }\r\n\r\n    const getDate = () => {\r\n        let newDate = new Date()\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n\r\n        date = date < 10 ? `0${date}` : `${date}`;\r\n        month = month < 10 ? `0${month}` : `${month}`;\r\n\r\n        let today = `${year}-${month}-${date}`;\r\n        setToday(today);\r\n        setDate(today);\r\n    }\r\n\r\n    const handletDate = (e) => {\r\n        setToday(e);\r\n        setDate(e);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (category) {\r\n            dispatch(listSubcategories(category));\r\n        }\r\n    }, [category, dispatch]);\r\n\r\n    useEffect(()=>{\r\n        if (subcategories)\r\n            if(subcategories.length > 0)\r\n                setSubcategory(subcategories[0].value);\r\n    }, [subcategories]);\r\n\r\n    useEffect(()=>{\r\n        getDate();\r\n        loadCategories();\r\n    }, [loadCategories]);\r\n\r\n    useEffect(()=>{\r\n        if (expense && submit) {\r\n            let month = [today.split('-')[1]];\r\n            dispatch(listExpenses( month, []));\r\n            handleClose(false);\r\n        }\r\n    },[expense, dispatch, submit, today, handleClose]);\r\n\r\n  return (\r\n        <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n            <div className=\"drawer-header\">\r\n                <Link to=\"/\">\r\n                    <ArrowBackIcon className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n                </Link>\r\n            </div>\r\n            <div className=\"drawer-body\">\r\n                <form className=\"form-modal\" onSubmit={handlerSubmit}>\r\n                        {errorCreate && <MessageBox variant=\"danger\">{errorCreate}</MessageBox>}\r\n                        <div className=\"form-title\">\r\n                        <div>Registrar gasto</div>\r\n                        <Divider />\r\n                        </div>\r\n\r\n                        <div>\r\n                            {\r\n                            loading ? <LoadingBox></LoadingBox>\r\n                            :\r\n                            error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                            :(\r\n                            <div>\r\n                                <Select\r\n                                className=\"select\"\r\n                                placeholder=\"Categorias\"\r\n                                onChange={e => handlerCategory(e.value)}\r\n                                defaultValue={categories[0]}\r\n                                options={categories} />\r\n                                <AddIcon\r\n                                    onClick={() => setShowNewCateogry(!showNewCategory)}\r\n                                    className=\"fas fa-plus-circle\"\r\n                                />\r\n                                { showNewCategory && <SubForm showNew={setShowNewCateogry} type={'category'} /> }\r\n                            </div>\r\n                            )}\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                                loadingSubcategory ? <div\r\n                                                        className=\"new-category\"\r\n                                                        onClick={() => setShowNewCateogry(!showNewCategory)}\r\n                                                    ></div>\r\n                                :\r\n                                errorSubcategory ? <MessageBox variant=\"danger\">{errorSubcategory}</MessageBox>\r\n                                :(\r\n                                <div>\r\n                                    <Select\r\n                                        className=\"select\"\r\n                                        placeholder=\"Subcategorias\"\r\n                                        onChange={e => setSubcategory(e.value)}\r\n                                        defaultValue={subcategories[0]}\r\n                                        options={subcategories}\r\n                                    />\r\n                                    <AddIcon \r\n                                        onClick={() => setShowNewSubcategory(!showNewSubcategory)}\r\n                                        className=\"fas fa-plus-circle\"\r\n                                    />  \r\n                                    { showNewSubcategory && <SubForm showNew={setShowNewSubcategory} type={'subcategory'} categoryId={category} /> }\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div>\r\n                            <input \r\n                                type=\"number\"\r\n                                onChange={e => setValue(e.target.value)}\r\n                                placeholder=\"Valor\">\r\n                            </input>\r\n                        </div>\r\n                        <div>\r\n                            <input \r\n                                type=\"text\"\r\n                                onChange={e => setDescription(e.target.value)}\r\n                                placeholder=\"Descripcion\">\r\n                            </input>\r\n                        </div>\r\n                        <div>\r\n                            <input\r\n                                value={today} \r\n                                type=\"date\"\r\n                                onChange={e => handletDate(e.target.value)}\r\n                                placeholder=\"Fecha\">\r\n                            </input>\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                                loadingSuccess ? <LoadingBox />\r\n                                :(\r\n                                    <button className=\"btn secundary\" type=\"submit\">Crear</button>\r\n                                )\r\n                            }\r\n                        </div>\r\n                </form>\r\n            </div>\r\n        </Drawer>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Select from 'react-select';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport { createAlert, listAlerts, listTypeAlerts, updateAlertActive } from '../../actions/alertActions';\r\n\r\nexport default function AlertCreateScreen(props) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { editAlert, edit, state, setState } = props;\r\n  const [days, setDays] = useState([]);\r\n  const [selectDay, setSelectDay] = useState('');\r\n  const [selectType, setSelectType] = useState('');\r\n  const [day, setDay] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [submit, setSubmit] = useState(false);\r\n\r\n  const alertCreate = useSelector(state => state.alertCreate);\r\n  const { alert } = alertCreate;\r\n\r\n  const alertActiveUpdate = useSelector(state => state.alertActiveUpdate);\r\n  const { alert: alertSuccess } = alertActiveUpdate;\r\n\r\n  const alertTypeList = useSelector(state => state.alertTypeList);\r\n  const { typeAlerts, loading: loadingTypes } = alertTypeList;\r\n\r\n    const toggleDrawer = (open) => {\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handleClose = useCallback((open) => {\r\n        if(state.right)\r\n            setState({ ...state, right: open });\r\n    },[setState, state]);\r\n\r\n  const handleSubmit = (e) => { \r\n        e.preventDefault();\r\n        setSubmit(true);\r\n        if (edit) {\r\n            dispatch(updateAlertActive({\r\n                date: day,\r\n                alert: title,\r\n                message,\r\n                id:editAlert.id,\r\n                active:editAlert.active\r\n            }));\r\n        } else {\r\n            dispatch(createAlert({date: day, alert: title, message}));\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (days.length < 1) {\r\n            let days = [];\r\n            [...Array(31).keys()].map(item => days.push({value: item + 1, label: item + 1}));\r\n            setDays(days);\r\n        }\r\n    },[days]);\r\n\r\n    useEffect(()=>{\r\n        dispatch(listTypeAlerts());\r\n    }, [dispatch])\r\n\r\n    useEffect(()=>{\r\n        if ((alert && submit) || (alertSuccess && submit)){\r\n            handleClose(false);\r\n            dispatch(listAlerts());\r\n        }\r\n    },[alert, submit, dispatch, alertSuccess, handleClose]);\r\n\r\n    useEffect(()=>{\r\n        if (editAlert && edit) {\r\n            const type = typeAlerts.filter(type => type.label === editAlert.priority)\r\n            setTitle(editAlert.alert);\r\n            setMessage(editAlert.message);\r\n            setSelectDay({label: editAlert.date, value:editAlert.date});\r\n            setSelectType(type);\r\n            setDay(editAlert.date); \r\n        } else {\r\n            setTitle('');\r\n            setMessage('');\r\n            setSelectDay({ label: 1, value: 1 }); \r\n            setDay(1); \r\n            setSelectType({});\r\n        }\r\n    },[editAlert, edit, typeAlerts]);\r\n\r\n  return (\r\n\r\n    <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n        <div className=\"drawer-header\">\r\n            <ArrowBackIcon id=\"close\" className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n        </div>\r\n        <div className=\"drawer-body\">\r\n        <form className=\"form-modal\" onSubmit={handleSubmit}>\r\n                <div className=\"form-title\">\r\n                    <div>Registar Alerta</div>\r\n                    <Divider />\r\n                </div>\r\n                <div>\r\n                <label>Prioridad</label>\r\n                {\r\n                    loadingTypes ? <LoadingBox />\r\n                    :\r\n                    (\r\n                    <Select\r\n                        placeholder=\"Prioridad de la alerta\"\r\n                        onChange={e => setTitle(e.value)}\r\n                        defaultValue={selectType}\r\n                        options={typeAlerts}\r\n                    />\r\n                    )\r\n                }\r\n\r\n            </div>\r\n            <div>\r\n                <label>Descripcíon alerta</label>\r\n                <textarea\r\n                    type=\"text\"\r\n                    value={message}\r\n                    onChange={e => setMessage(e.target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label>Día de envío</label>\r\n                <Select\r\n                    placeholder=\"Dia\"\r\n                    onChange={e => setDay(e.value)}\r\n                    defaultValue={selectDay}\r\n                    options={days}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button onClick={() => toggleDrawer(false)} className=\"btn secundary\" type=\"submit\">{edit ? 'Actualizar' : 'Crear'}</button>\r\n            </div>\r\n\r\n        </form>\r\n        </div>\r\n    </Drawer>\r\n  );\r\n}\r\n","import { Avatar } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FloatButton from '../../components/FloatButton';\r\n\r\nconst initialActivities = [\r\n    {\r\n        id: \"1\",\r\n        color: \"red\",\r\n        activity: 'Ver maricadas'\r\n    },\r\n    {\r\n        id: \"2\",\r\n        color: \"blue\",\r\n        activity: 'Corregir trabajo'\r\n    },\r\n    {\r\n        id: \"3\",\r\n        color: \"green\",\r\n        activity: 'Salir temprano'\r\n    }\r\n]\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result  = [...list];\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n    return result;\r\n}\r\nexport default function ActivityScreen(props) {\r\n\r\n    const [activities, setActivities] = useState(initialActivities);\r\n\r\n    return (\r\n        <div>\r\n            <DragDropContext onDragEnd={(result) => {\r\n                const { source, destination } = result;\r\n                if (!destination) return;\r\n                if(source.index === destination.index) return;\r\n                setActivities(prevActivities => reorder(prevActivities, source.index, destination.index));\r\n            }}>\r\n                <div className=\"dragger-title\">Actividades</div>\r\n                <Droppable droppableId=\"activities\">\r\n                    {(droppableProvided) => (\r\n                        <div \r\n                            {...droppableProvided.droppableProps}\r\n                            ref={droppableProvided.innerRef}\r\n                        >\r\n                            {activities.map((item, index) => (\r\n                                    <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                                        {(draggableProvided) => (\r\n                                            <div className=\"dragger-container\"\r\n                                                {...draggableProvided.draggableProps}\r\n                                                ref={draggableProvided.innerRef}\r\n                                                {...draggableProvided.dragHandleProps}\r\n                                            >\r\n                                                <Avatar className={`avatar-dragger-${item.color}`}>\r\n                                                    {item.activity.charAt(0)}\r\n                                                </Avatar>\r\n\r\n                                                <div>\r\n                                                    {item.activity}\r\n                                                </div>\r\n                                                \r\n                                                <div>\r\n                                                    <DeleteIcon />\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                    \r\n                            ))}\r\n                            {droppableProvided.placeholder}\r\n                        </div>\r\n                    )}\r\n\r\n                </Droppable>\r\n            </DragDropContext>\r\n            <FloatButton props={props} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MessageBox from '../../components/MessageBox';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport Select from 'react-select';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listCategories } from '../../actions/categoryActions';\r\nimport { createExpense, listExpenses } from '../../actions/expenseActions';\r\nimport { listSubcategories } from '../../actions/subcategoriesActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SubForm from '../../components/SubForm';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function ActivityCreateScreen(props) {\r\n\r\n    const [state, setState] = useState({ right: true});\r\n\r\n    const toggleDrawer = (open) => {\r\n        props.history.push('/');\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handlerSubmit = (e) => {\r\n\r\n    }\r\n\r\n    return (\r\n        <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n            <div className=\"drawer-header\">\r\n                <Link to=\"/\">\r\n                    <ArrowBackIcon className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n                </Link>\r\n            </div>\r\n            <div className=\"drawer-body\">\r\n                <form className=\"form-modal\" onSubmit={handlerSubmit}>\r\n\r\n                </form>\r\n            </div>\r\n        </Drawer>\r\n    )\r\n}\r\n","import {BrowserRouter, Route, Switch, useLocation } from 'react-router-dom';\nimport Sidebar from './components/common/Sidebar';\nimport AlertScreen from './screens/Alert/AlertScreen';\nimport ChartScreen from './screens/ChartScreen';\nimport ExpenseScreen from './screens/Expense/ExpenseScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport LoginScreen from './screens/User/LoginScreen';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport ProfileScreen from './screens/User/ProfileScreen';\nimport RegisterScreen from './screens/User/RegisterScreen';\nimport ExpenseCreateScreen from './screens/Expense/ExpenseCreateScreen';\nimport AlertCreateScreen from './screens/Alert/AlertCreateScreen';\nimport ActivityScreen from './screens/Activity/ActivityScreen';\nimport ActivityCreateScreen from './screens/Activity/ActivityCreateScreen';\n\nfunction App() {\n\n  return (\n    <BrowserRouter>\n        <Sidebar />\n        <Switch>\n          <Route path=\"*\">\n            <RouteGroup />\n          </Route>\n        </Switch>\n    </BrowserRouter>\n  );\n}\n\nfunction RouteGroup() {\n\n  let location = useLocation();\n\n  return (\n    <TransitionGroup>\n      <CSSTransition\n        key={location.key}\n        classNames=\"fade\"\n        timeout={300}\n      >\n        <Switch location={location}>\n          <Route path=\"/\" component={HomeScreen} exact></Route>\n\n          <Route path=\"/login\" component={LoginScreen}></Route>\n          <Route path=\"/register\" component={RegisterScreen}></Route>\n          <Route path=\"/profile\" component={ProfileScreen}></Route>\n          <Route path=\"/chart\" component={ChartScreen}></Route>\n\n          <Route path=\"/expenses/:id\" component={ExpenseScreen}></Route>\n          <Route path=\"/expenses-create\" component={ExpenseCreateScreen} exact></Route>\n\n          <Route path=\"/activities\" component={ActivityScreen}></Route>\n          <Route path=\"/activities-create\" component={ActivityCreateScreen}></Route>\n\n          <Route path=\"/alerts\" component={AlertScreen}></Route>\n          <Route path=\"/alerts-create\" component={AlertCreateScreen}></Route>\n        </Switch>\n      </CSSTransition>\n    </TransitionGroup>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, createStore, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createAlertReducer, listAlertsReducer, listTypeAlertsReducer, updateAlertReducer, deleteAlertReducer } from './reducers/alertReducers';\r\nimport { createCategoryReducers, listCategoriesReducer } from './reducers/categoryReducers';\r\nimport { createExpenseReducer, listExpenseReducer, listExpensesReducer } from './reducers/expenseReducers';\r\nimport { createSubcategoryReducer, listSubcategoriesReducer } from './reducers/subcategoryReducers';\r\nimport { registerReducer, signinReducer, suscribeUserReducer } from './reducers/userReducer';\r\nimport { getMonthsReducer, setNotificationReducer } from './reducers/utilsReducers';\r\n\r\nconst initialState = {\r\n    userSignin:{\r\n        userInfo: localStorage.getItem('userInfo')\r\n        ? JSON.parse(localStorage.getItem('userInfo'))\r\n        : null\r\n    },\r\n    setNotification:{\r\n        notification: localStorage.getItem('notification')\r\n        ? JSON.parse(localStorage.getItem('notification'))\r\n        : null\r\n    }\r\n};\r\n\r\nconst reducer = combineReducers({\r\n    userSignin: signinReducer,\r\n    register: registerReducer,\r\n    userSuscribe: suscribeUserReducer,\r\n\r\n    expList: listExpenseReducer,\r\n    expenseList: listExpensesReducer,\r\n    expenseCreate: createExpenseReducer,\r\n\r\n    categoryCreate: createCategoryReducers,\r\n    categoriesList: listCategoriesReducer,\r\n\r\n    subcategoriesList: listSubcategoriesReducer,\r\n    subcategoryCreate: createSubcategoryReducer,\r\n    \r\n    alertList: listAlertsReducer,\r\n    alertActiveUpdate: updateAlertReducer,\r\n    alertCreate: createAlertReducer,\r\n    alertTypeList: listTypeAlertsReducer,\r\n    alertDelete: deleteAlertReducer,\r\n\r\n    monthsGet: getMonthsReducer,\r\n    setNotification: setNotificationReducer\r\n});\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeEnhancer(applyMiddleware(thunk))\r\n)\r\n\r\nexport default store;","import { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGIN_FAIL, USER_SIGIN_REQUEST, USER_SIGIN_SUCCESS, USER_SUSCRIBE_FAIL, USER_SUSCRIBE_REQUEST, USER_SUSCRIBE_SUCCESS } from \"../constants/userConstants\";\r\n\r\nexport const signinReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case USER_SIGIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_SIGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload, success:true };\r\n        case USER_SIGIN_FAIL:\r\n            return { loading: false, error: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const registerReducer = (state = { loading:true }, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true };\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, user: action.payload };\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const suscribeUserReducer = (state = { loading: true }, action) => {\r\n    switch (action.type){\r\n        case USER_SUSCRIBE_REQUEST:\r\n            return {loading: true };\r\n        case USER_SUSCRIBE_SUCCESS:\r\n            return { loading: false, suscribe: action.payload };\r\n        case USER_SUSCRIBE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { EXPENSE_CREATE_FAIL, EXPENSE_CREATE_REQUEST, EXPENSE_CREATE_SUCCESS, EXPENSE_LIST_FAIL, EXPENSE_LIST_REQUEST, EXPENSE_LIST_SUCCESS, EXP_LIST_FAIL, EXP_LIST_REQUEST, EXP_LIST_SUCCESS } from \"../constants/expenseConstants\";\r\n\r\nexport const listExpensesReducer = (state = { loading: true }, action) =>{\r\n    switch (action.type) {\r\n        case EXPENSE_LIST_REQUEST:\r\n            return { loading: true };\r\n        case EXPENSE_LIST_SUCCESS:\r\n            return { loading: false, expenses: action.payload };\r\n        case EXPENSE_LIST_FAIL:\r\n            return { loading:false, error: action.payload };\r\n           \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const listExpenseReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case EXP_LIST_REQUEST:\r\n            return { loading: true };\r\n        case EXP_LIST_SUCCESS:\r\n            return { loading: false, expense: action.payload };\r\n        case EXP_LIST_FAIL:\r\n            return { loading:false, error: action.payload };\r\n           \r\n        default:\r\n            return state;\r\n    } \r\n}\r\n\r\nexport const createExpenseReducer = (state = { loading: false }, action) => {\r\n    switch (action.type) {\r\n        case EXPENSE_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case EXPENSE_CREATE_SUCCESS:\r\n            return { loading: false, expense: action.payload };\r\n        case EXPENSE_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { CATEGORY_CREATE_FAIL, CATEGORY_CREATE_REQUEST, CATEGORY_CREATE_SUCCESS, CATEGORY_LIST_FAIL, CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS } from \"../constants/categoryConstants\";\r\n\r\nexport const createCategoryReducers = (state = {loading: true }, action) => {\r\n    switch (action.type) {\r\n        case CATEGORY_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case CATEGORY_CREATE_SUCCESS:\r\n            return { loading: false, category: action.payload };\r\n        case CATEGORY_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const listCategoriesReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case CATEGORY_LIST_REQUEST:\r\n            return { loading: true };\r\n        case CATEGORY_LIST_SUCCESS:\r\n            return { loading:false, categories: action.payload };\r\n        case CATEGORY_LIST_FAIL:\r\n            return { loading:false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { SUBCATEGORY_CREATE_FAIL, SUBCATEGORY_CREATE_REQUEST, SUBCATEGORY_CREATE_SUCCESS, SUBCATEGORY_LIST_FAIL, SUBCATEGORY_LIST_REQUEST, SUBCATEGORY_LIST_SUCCESS } from \"../constants/subcategoriesConstants\";\r\n\r\nexport const listSubcategoriesReducer = (state = { loading: true }, action) =>{\r\n    switch (action.type) {\r\n        case SUBCATEGORY_LIST_REQUEST:\r\n            return { loading: true };\r\n        case SUBCATEGORY_LIST_SUCCESS:\r\n            return { loading: false, subcategories: action.payload };\r\n        case SUBCATEGORY_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const createSubcategoryReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case SUBCATEGORY_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case SUBCATEGORY_CREATE_SUCCESS:\r\n            return { loading: false, subcategory: action.payload };\r\n        case SUBCATEGORY_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { ALERT_CREATE_FAIL, ALERT_CREATE_REQUEST, ALERT_CREATE_SUCCESS, ALERT_DELETE_FAIL, ALERT_DELETE_REQUEST, ALERT_DELETE_SUCCESS, ALERT_LIST_FAIL, ALERT_LIST_REQUEST, ALERT_LIST_SUCCESS, ALERT_UPDATE_FAIL, ALERT_UPDATE_REQUEST, ALERT_UPDATE_SUCCESS, TYPE_ALERT_LIST_FAIL, TYPE_ALERT_LIST_REQUEST, TYPE_ALERT_LIST_SUCCESS } from \"../constants/alertConstants\";\r\n\r\nexport const listAlertsReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ALERT_LIST_REQUEST:\r\n            return { loading: true }\r\n        case ALERT_LIST_SUCCESS:\r\n            return { loading: false, alerts: action.payload };\r\n        case ALERT_LIST_FAIL:\r\n            return { loading: false };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const updateAlertReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ALERT_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case ALERT_UPDATE_SUCCESS:\r\n            return { loading: false, alert: action.payload };\r\n        case ALERT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n} \r\n\r\nexport const createAlertReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ALERT_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case ALERT_CREATE_SUCCESS:\r\n            return { loading: false, alert: action.payload };\r\n        case ALERT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const listTypeAlertsReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case TYPE_ALERT_LIST_REQUEST:\r\n            return { loading: true };\r\n        case TYPE_ALERT_LIST_SUCCESS:\r\n            return { loading: false, typeAlerts: action.payload };\r\n        case TYPE_ALERT_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const deleteAlertReducer = ( state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ALERT_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case ALERT_DELETE_SUCCESS:\r\n            return { loading: false, success: action.payload };\r\n        case ALERT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_MONTHS_FAIL, GET_MONTHS_REQUEST, GET_MONTHS_SUCCESS, SET_NOTIFICATIONS_FAIL, SET_NOTIFICATIONS_REQUEST, SET_NOTIFICATIONS_SUCCESS } from \"../constants/utilsConstants\";\r\n\r\nexport const getMonthsReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case GET_MONTHS_REQUEST:\r\n            return { loading: true };\r\n        case GET_MONTHS_SUCCESS:\r\n            return { loading: false, months: action.payload };\r\n        case GET_MONTHS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setNotificationReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case SET_NOTIFICATIONS_REQUEST:\r\n            return { loading: true };\r\n        case SET_NOTIFICATIONS_SUCCESS:\r\n            return { loading: false, notification: action.payload };\r\n        case SET_NOTIFICATIONS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    } \r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\nimport { subscribeUser } from \"./actions/userActions\";\nimport store from './store';\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nconst PUBLIC_VAPID_KEY = \"BDDk3ILb3FjIjAvTs9PWMoObhChnrBUYwHAsdplom7fePD36G6ZFJumGgSe6C4M3pOpYvFb38XX2wJRIN4B6V_0\";\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n            serviceSubscribeUser(registration);\n          }\n        };\n      };\n\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction serviceSubscribeUser(registration) {\n\n  var serviceWorker;\n\n  if (registration.installing) {\n      serviceWorker = registration.installing;\n  } else if (registration.waiting) {\n      serviceWorker = registration.waiting;\n  } else if (registration.active) {\n      serviceWorker = registration.active;\n  }\n\n  if (serviceWorker) {\n    if (serviceWorker.state === \"activated\") {\n        console.log(\"sw already activated - Do watever needed here\");\n    }\n    serviceWorker.addEventListener(\"statechange\", function(e) {\n      \n        if (e.target.state ===\"activated\") {\n\n          registration.pushManager.subscribe({\n            userVisibleOnly: true,\n            applicationServerKey: PUBLIC_VAPID_KEY\n          })\n          .then((suscription) => {\n            store.dispatch(subscribeUser(suscription));\n          });\n        }\n    });\n  }\n  return <div></div>\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}