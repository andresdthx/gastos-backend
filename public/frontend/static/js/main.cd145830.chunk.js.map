{"version":3,"sources":["constants/userConstants.js","components/Drawers/DrawerNotification.js","components/common/Sidebar.js","actions/userActions.js","components/MessageBox.js","components/utils/LoadingBox.js","constants/categoryConstants.js","actions/categoryActions.js","constants/expenseConstants.js","actions/expenseActions.js","constants/subcategoriesConstants.js","actions/subcategoriesActions.js","components/SubForm.js","components/Drawers/DrawerExpense.js","components/FloatButton.js","constants/alertConstants.js","actions/alertActions.js","components/Drawers/DrawerAlert.js","screens/AlertScreen.js","screens/ChartScreen.js","constants/utilsConstants.js","actions/utilsActions.js","screens/ExpenseScreen.js","components/SelectDate.js","screens/HomeScreen.js","screens/LoginScreen.js","screens/ProfileScreen.js","screens/RegisterScreen.js","screens/ExpenseCreateScreen.js","screens/AlertCreateScreen.js","screens/ActivityScreen.js","App.js","reportWebVitals.js","store.js","reducers/userReducer.js","reducers/expenseReducers.js","reducers/categoryReducers.js","reducers/subcategoryReducers.js","reducers/alertReducers.js","reducers/utilsReducers.js","serviceWorkerRegistration.js","index.js"],"names":["USER_SIGIN_REQUEST","USER_SIGIN_SUCCESS","USER_SIGIN_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_SUSCRIBE_REQUEST","USER_SUSCRIBE_SUCCESS","USER_SUSCRIBE_FAIL","DrawerNotification","props","state","setState","useState","title","priority","message","notifications","toggleDrawer","open","item","right","Drawer","anchor","onClose","className","id","onClick","map","Avatar","useStyles","makeStyles","theme","menuButton","marginRight","spacing","menuContent","position","menuItems","cursor","hide","display","drawer","width","flexShrink","drawerPaper","drawerHeader","alignItems","justifyContent","height","contentHeader","color","background","backgroundSize","button","icon","accountContent","margin","textAlign","accountIcon","fontSize","iconsSidebar","iconsMenu","list","Sidebar","dispatch","useDispatch","classes","useTheme","React","setOpen","anchorEl","setAnchorEl","userInfo","useSelector","userSignin","handleDrawerClose","handlerSignout","a","localStorage","removeItem","type","window","location","reload","handleClose","option","root","CssBaseline","AppBar","Toolbar","IconButton","edge","clsx","Typography","to","Badge","badgeContent","event","currentTarget","keepMounted","Boolean","MenuItem","paper","direction","List","username","ListItem","ListItemIcon","ListItemText","primary","Divider","MessageBox","variant","children","LoadingBox","CATEGORY_CREATE_REQUEST","CATEGORY_CREATE_SUCCESS","CATEGORY_CREATE_FAIL","CATEGORY_LIST_REQUEST","CATEGORY_LIST_SUCCESS","CATEGORY_LIST_FAIL","listCategories","axios","get","data","payload","response","EXPENSE_LIST_REQUEST","EXPENSE_LIST_SUCCESS","EXPENSE_LIST_FAIL","EXP_LIST_REQUEST","EXP_LIST_SUCCESS","EXP_LIST_FAIL","EXPENSE_CREATE_REQUEST","EXPENSE_CREATE_SUCCESS","EXPENSE_CREATE_FAIL","listExpenses","months","groupers","getState","post","headers","Authorization","token","createExpense","objExpense","userUserId","errors","Error","SUBCATEGORY_LIST_REQUEST","SUBCATEGORY_LIST_SUCCESS","SUBCATEGORY_LIST_FAIL","SUBCATEGORY_CREATE_REQUEST","SUBCATEGORY_CREATE_SUCCESS","SUBCATEGORY_CREATE_FAIL","listSubcategories","categoryId","SubForm","showNew","category","categoryCreate","subcategory","subcategoryCreate","name","setname","setTitle","submitCategory","setSubmitCategory","submitSubcategory","setSubmitSubcategory","useEffect","maxLength","onChange","e","target","value","placeholder","userId","createCategory","createSubcategory","DrawerExpense","description","setDescription","setValue","date","setDate","setCategory","setSubcategory","today","setToday","submit","setSubmit","load","setLoad","showNewCategory","setShowNewCateogry","showNewSubcategory","setShowNewSubcategory","categoriesList","loading","error","categories","expenseCreate","expense","loadingSuccess","errorCreate","subcategoriesList","subcategories","loadingSubcategory","errorSubcategory","setIsOpen","useCallback","loadCategories","length","newDate","Date","getDate","month","getMonth","year","getFullYear","split","onSubmit","preventDefault","categoryCategoryId","subcategorySubcategoryId","handlerCategory","defaultValue","options","handletDate","FloatButton","isOpen","ALERT_LIST_REQUEST","ALERT_LIST_SUCCESS","ALERT_LIST_FAIL","ALERT_UPDATE_REQUEST","ALERT_UPDATE_SUCCESS","ALERT_UPDATE_FAIL","ALERT_CREATE_REQUEST","ALERT_CREATE_SUCCESS","ALERT_CREATE_FAIL","ALERT_DELETE_REQUEST","ALERT_DELETE_SUCCESS","ALERT_DELETE_FAIL","TYPE_ALERT_LIST_REQUEST","TYPE_ALERT_LIST_SUCCESS","TYPE_ALERT_LIST_FAIL","listAlerts","updateAlertActive","alert","put","createAlert","listTypeAlerts","DrawerAlert","editAlert","edit","days","setDays","selectDay","setSelectDay","selectType","setSelectType","day","setDay","setMessage","alertCreate","alertSuccess","alertActiveUpdate","alertTypeList","typeAlerts","loadingTypes","Array","keys","push","label","filter","active","AlertScreen","rows","setRows","send","setSend","setEditAlert","setEdit","submitDelete","setSubmitDelete","alertList","alerts","success","alertDelete","handleDelete","alertId","Swal","fire","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","delete","deleted","deleteAlert","typesalert","typeAlert","checked","handleActive","ChartScreen","labels","setLabels","setData","expenses","expenseList","datasets","backgroundColor","borderColor","borderWidth","maintainAspectRatio","GET_MONTHS_REQUEST","GET_MONTHS_SUCCESS","GET_MONTHS_FAIL","getMonths","ExpenseScreen","expenseId","match","params","expList","monthsGet","listExpense","convertDate","SelectDate","monthSelect","setMonthSelect","monthsSelect","setMonthsSelect","agrupadores","setAgrupadores","groupesSelect","setSelectGroupes","isMulti","items","handlerMonth","handlerGrouper","HomeScreen","setSuccess","datatable","setDatatable","setMonth","history","columns","field","attributes","Intl","NumberFormat","format","reduce","c","parseInt","hover","searchTop","paging","info","searchBottom","slice","LoginScreen","setUsername","password","setPassword","userData","setItem","JSON","stringify","ProfileScreen","RegisterScreen","confirmPassword","setConfirmPassword","email","setEmail","setError","ExpenseCreateScreen","console","log","AlertCreateScreen","initialActivities","activity","ActivityScreen","activities","setActivities","onDragEnd","source","destination","index","prevActivities","startIndex","endIndex","splice","removed","reorder","droppableId","droppableProvided","droppableProps","ref","innerRef","draggableId","draggableProvided","draggableProps","dragHandleProps","charAt","RouteGroup","useLocation","TransitionGroup","CSSTransition","classNames","timeout","path","component","exact","key","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","getItem","parse","reducer","combineReducers","action","register","user","userSuscribe","suscribe","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","isLocalhost","hostname","PUBLIC_VAPID_KEY","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","waiting","addEventListener","pushManager","subscribe","userVisibleOnly","applicationServerKey","suscription","subscribeUser","serviceSubscribeUser","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","fetch","contentType","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.cd145830.chunk.js","sourcesContent":["export const USER_SIGIN_REQUEST = \"USER_SIGIN_REQUEST\";\r\nexport const USER_SIGIN_SUCCESS = \"USER_SIGIN_SUCCESS\";\r\nexport const USER_SIGIN_FAIL = \"USER_SIGIN_FAIL\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_SUSCRIBE_REQUEST = \"USER_SUSCRIBE_REQUEST\";\r\nexport const USER_SUSCRIBE_SUCCESS = \"USER_SUSCRIBE_SUCCESS\";\r\nexport const USER_SUSCRIBE_FAIL = \"USER_SUSCRIBE_FAIL\";\r\n\r\nexport const USER_SIGNOUT_FAIL = \"USER_SIGNOUT_FAIL\";\r\n\r\nexport const PUBLIC_VAPID_KEY = \"BDDk3ILb3FjIjAvTs9PWMoObhChnrBUYwHAsdplom7fePD36G6ZFJumGgSe6C4M3pOpYvFb38XX2wJRIN4B6V_0\";\r\n","import { Avatar, Drawer } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\nexport default function DrawerNotification(props) {\r\n\r\n    const { state, setState } = props;\r\n\r\n    const [notifications, setNotifications] = useState([\r\n        {\r\n            title: 'Pilas, parce',\r\n            priority: 'Alta',\r\n            message: 'Pagar el arriendo'\r\n        },\r\n        {\r\n            title: 'Ojo, papi..',\r\n            priority: 'Media',\r\n            message: 'Pagar el internet rapido'\r\n        }\r\n    ]);\r\n\r\n    const toggleDrawer = (open, item) => {\r\n        setState({ ...state, right: open });\r\n    };\r\n    return (\r\n        <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n            <div className=\"drawer-header\">\r\n              <ArrowBackIcon id=\"close\" className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n              <NotificationsIcon />\r\n            </div>\r\n            <div className=\"drawer-body\">\r\n                {\r\n                    notifications.map(item => (\r\n                        <div className=\"card-notifcation\" key={item.title}>\r\n                            <div>\r\n                                <Avatar className={`card-alert-${item.priority}`}>\r\n                                    R\r\n                                </Avatar>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div>{item.title}</div>\r\n                                <div>{item.message}</div>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </Drawer>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signout } from '../../actions/userActions';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChart';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport DrawerNotification from '../Drawers/DrawerNotification';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  menuContent: {\r\n    position: 'absolute',\r\n    right: '2%',\r\n  },\r\n  menuItems: {\r\n    marginRight: '1rem',\r\n    cursor: 'pointer'\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    height: '10vh'\r\n  },\r\n  contentHeader:{\r\n    color: 'white',\r\n    background: 'url(images/background/sidebar.jpg)',\r\n    backgroundSize: '100%'\r\n  },\r\n  button:{\r\n    color: 'white'\r\n  },\r\n  icon:{\r\n    color: '#080058'\r\n  },\r\n  accountContent:{\r\n    width: '5rem',\r\n    margin: '0.5rem',\r\n    // marginTop: '-2.5rem',\r\n    // marginBottom: '2.5rem',\r\n    textAlign: 'center',\r\n    // margin: '0 auto',\r\n    // border: '1px solid black'\r\n  },\r\n  accountIcon:{\r\n    fontSize: '4rem'\r\n  },\r\n  iconsSidebar:{\r\n    color: '#FFFFFF'\r\n  },\r\n  iconsMenu:{\r\n    color: '#000000'\r\n  },\r\n  list:{\r\n    color: '#000000'\r\n  }\r\n}));\r\n\r\nexport default function Sidebar() {\r\n\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const userSignin = useSelector(state => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handlerSignout = () => {\r\n    dispatch(signout());\r\n    window.location.reload();\r\n  }\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (option) => {\r\n\r\n    setAnchorEl(null);\r\n\r\n    switch (option) {\r\n      case 'logout':\r\n        handlerSignout();\r\n        break;\r\n    \r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const [state, setState] = React.useState({ right: false });\r\n\r\n  const toggleDrawer = (open) => {\r\n      setState({ ...state, right: open });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        userInfo && (\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <AppBar\r\n            position=\"relative\"\r\n          >\r\n            <Toolbar>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={handleDrawerOpen}\r\n                edge=\"start\"\r\n                className={clsx(classes.menuButton, open && classes.hide)}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n\r\n              <Typography className={classes.menuContent}>\r\n                <Link className={classes.iconsSidebar} to=\"#\">\r\n                <Badge className={classes.menuItems} onClick={() => toggleDrawer(true)} badgeContent={4} color=\"primary\">\r\n                  <NotificationsIcon  />\r\n                </Badge>\r\n                </Link>\r\n                <span to=\"/#\" onClick={handleClick} className={classes.iconsSidebar}>\r\n                  <PersonIcon />\r\n                  <ArrowDropDownIcon />\r\n                </span>\r\n                <Menu\r\n                  id=\"simple-menu\"\r\n                  anchorEl={anchorEl}\r\n                  keepMounted\r\n                  open={Boolean(anchorEl)}\r\n                  onClose={() => handleClose()}\r\n                >\r\n                  <Link to=\"/profile\">\r\n                    <MenuItem onClick={() => handleClose()} className={classes.iconsMenu}>Perfil</MenuItem>\r\n                  </Link>\r\n                  <MenuItem onClick={() => handleClose('logout')}>Cerrar sesión</MenuItem>\r\n                </Menu>\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n\r\n          <DrawerNotification\r\n                state={state}\r\n                setState={setState}\r\n          />\r\n          \r\n          <Drawer\r\n            className={classes.drawer}\r\n            anchor=\"left\"\r\n            open={open}\r\n            onClose={handleDrawerClose}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n          >\r\n            <div className={classes.contentHeader}>\r\n              <div className={classes.drawerHeader}>\r\n                <IconButton className={classes.button} onClick={handleDrawerClose}>\r\n                  {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                </IconButton>\r\n              </div>\r\n\r\n\r\n              <List className={classes.accountContent}>\r\n                <AccountCircleIcon className={classes.accountIcon}  />\r\n                {userInfo.username}\r\n              </List>\r\n            </div>\r\n\r\n            <List>\r\n\r\n                <Link className={classes.list} to=\"/\">\r\n                  <ListItem onClick={handleDrawerClose} button>\r\n                    <ListItemIcon><HomeIcon className={classes.icon} /></ListItemIcon>\r\n                    <ListItemText primary=\"Inicio\" />\r\n                  </ListItem>\r\n                </Link>\r\n\r\n                <Link className={classes.list} to=\"/chart\">\r\n                  <ListItem onClick={handleDrawerClose} button>\r\n                    <ListItemIcon><InsertChartIcon className={classes.icon} /></ListItemIcon>\r\n                    <ListItemText primary=\"Graficos\" />\r\n                  </ListItem>\r\n                </Link>\r\n\r\n                <Link className={classes.list} to=\"/alert\">\r\n                  <ListItem onClick={handleDrawerClose} button>\r\n                    <ListItemIcon><NotificationsIcon className={classes.icon} /></ListItemIcon>\r\n                    <ListItemText primary=\"Alertas\" />\r\n                  </ListItem>\r\n                </Link>\r\n\r\n                <ListItem className={classes.list} onClick={handleDrawerClose} button>\r\n                  <ListItemIcon><AttachMoneyIcon className={classes.icon} /></ListItemIcon>\r\n                  <ListItemText primary=\"Ingresos\" />\r\n                </ListItem>\r\n\r\n                <ListItem className={classes.list} onClick={handleDrawerClose} button>\r\n                  <ListItemIcon><UpdateIcon className={classes.icon} /></ListItemIcon>\r\n                  <ListItemText primary=\"Proximos gastos\" />\r\n                </ListItem>\r\n\r\n                <Link className={classes.list} to=\"/activity\">\r\n                <ListItem className={classes.list} onClick={handleDrawerClose} button>\r\n                  <ListItemIcon><FormatListBulletedIcon className={classes.icon} /></ListItemIcon>\r\n                  <ListItemText primary=\"Pendientes\" />\r\n                </ListItem>\r\n                </Link>\r\n                \r\n            </List>\r\n            <Divider />\r\n          </Drawer>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n        USER_REGISTER_FAIL,\r\n        USER_REGISTER_REQUEST,\r\n        USER_REGISTER_SUCCESS,\r\n        USER_SIGIN_FAIL,\r\n        USER_SIGIN_REQUEST,\r\n        USER_SIGIN_SUCCESS,\r\n        USER_SIGNOUT_FAIL,\r\n        USER_SUSCRIBE_FAIL,\r\n        USER_SUSCRIBE_REQUEST,\r\n        USER_SUSCRIBE_SUCCESS \r\n        } from \"../constants/userConstants\";\r\nimport axios from 'axios';\r\n\r\nexport const signin = (userData) => async (dispatch) => {\r\n    dispatch({ type: USER_SIGIN_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.post('/api/users/signin', userData);\r\n        dispatch({type: USER_SIGIN_SUCCESS, payload: data });\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_SIGIN_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });\r\n    }\r\n}\r\n\r\nexport const signout = () => async(dispatch) => {\r\n    localStorage.removeItem('userInfo');;\r\n    dispatch({ type: USER_SIGNOUT_FAIL });\r\n}\r\n\r\nexport const registerUser = (userData) => async(dispatch) => {\r\n    dispatch({ type:USER_REGISTER_REQUEST, payload: userData });\r\n    try {\r\n       const { data } = await axios.post('/api/users/register', userData);\r\n       dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n       dispatch({ type: USER_SIGIN_SUCCESS, payload: data });\r\n       localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });\r\n    }\r\n}\r\n\r\nexport const subscribeUser = (suscription) => async (dispatch, getState) => {\r\n    dispatch({ type: USER_SUSCRIBE_REQUEST });\r\n    try {\r\n        const { userSignin: { userInfo } } = getState();\r\n\r\n        const { data } = await axios.post('/api/users/suscription', {\r\n            suscription: suscription,\r\n            userId: userInfo ? userInfo.id  : 1\r\n        });\r\n        dispatch({ type: USER_SUSCRIBE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_SUSCRIBE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });\r\n    }\r\n}","import React from 'react';\r\n// import Alert from '@material-ui/lab/Alert';\r\n\r\nexport default function MessageBox(props) {\r\n    return (\r\n        // <Alert severity=\"error\">Error</Alert>\r\n        <div className={`alert alert-${props.variant || 'info'}`}>\r\n            {props.children} \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function LoadingBox() {\r\n    return (\r\n        <div>\r\n            <div className='spinner'></div>\r\n        </div>\r\n    )\r\n}\r\n","export const CATEGORY_CREATE_REQUEST = \"CATEGORY_CREATE_REQUEST\";\r\nexport const CATEGORY_CREATE_SUCCESS = \"CATEGORY_CREATE_SUCCESS\";\r\nexport const CATEGORY_CREATE_FAIL = \"CATEGORY_CREATE_FAIL\";\r\n\r\nexport const CATEGORY_LIST_REQUEST = \"CATEGORY_LIST_REQUEST\";\r\nexport const CATEGORY_LIST_SUCCESS = \"CATEGORY_LIST_SUCCESS\";\r\nexport const CATEGORY_LIST_FAIL = \"CATEGORY_LIST_FAIL\";","import axios from \"axios\";\r\nimport { CATEGORY_CREATE_FAIL, CATEGORY_CREATE_REQUEST, CATEGORY_CREATE_SUCCESS, CATEGORY_LIST_FAIL, CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS } from \"../constants/categoryConstants\"\r\n\r\nexport const listCategories = () => async(dispatch, useState) => {\r\n    dispatch({type:  CATEGORY_LIST_REQUEST });\r\n    const { userSignin: { userInfo }} = useState();\r\n    try {\r\n        const { data } = await axios.get(`/api/categories/${userInfo.id}`);\r\n        dispatch({ type: CATEGORY_LIST_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CATEGORY_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        }); \r\n    }\r\n}\r\n\r\nexport const createCategory = (name) => async(dispatch, useState) => {\r\n    dispatch({ type: CATEGORY_CREATE_REQUEST, payload: name});\r\n    const { userSignin: { userInfo } } = useState();\r\n    try {\r\n        const { data } = await axios.post('/api/categories/', {\r\n            name: name,\r\n            userId: userInfo.id\r\n        });\r\n        dispatch({ type: CATEGORY_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CATEGORY_CREATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}","export const EXPENSE_LIST_REQUEST = 'EXPENSE_LIST_REQUEST';\r\nexport const EXPENSE_LIST_SUCCESS = 'EXPENSE_LIST_SUCCESS';\r\nexport const EXPENSE_LIST_FAIL = 'EXPENSE_LIST_FAIL';\r\n\r\nexport const EXP_LIST_REQUEST = 'EXP_LIST_REQUEST';\r\nexport const EXP_LIST_SUCCESS = 'EXP_LIST_SUCCESS';\r\nexport const EXP_LIST_FAIL = 'EXP_LIST_FAIL';\r\n\r\nexport const EXPENSE_CREATE_REQUEST = 'EXPENSE_CREATE_REQUEST';\r\nexport const EXPENSE_CREATE_SUCCESS = 'EXPENSE_CREATE_SUCCESS';\r\nexport const EXPENSE_CREATE_FAIL = 'EXPENSE_CREATE_FAIL';","import axios from \"axios\";\r\nimport { EXPENSE_CREATE_FAIL, EXPENSE_CREATE_REQUEST, EXPENSE_CREATE_SUCCESS, EXPENSE_LIST_FAIL, EXPENSE_LIST_REQUEST, EXPENSE_LIST_SUCCESS, EXP_LIST_FAIL, EXP_LIST_REQUEST, EXP_LIST_SUCCESS } from \"../constants/expenseConstants\"\r\n\r\nexport const listExpenses = (months, groupers) => async(dispatch, getState) =>{\r\n    dispatch({ type: EXPENSE_LIST_REQUEST });\r\n    const { userSignin : { userInfo }} = getState();\r\n    try {\r\n        const { data } = await axios.post(`/api/expenses/${userInfo.id}`,{\r\n            months: months,\r\n            groupers: groupers,\r\n        }, {\r\n            headers:{\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        });\r\n        dispatch({ type: EXPENSE_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: EXPENSE_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const listExpense = (expenseId) => async (dispatch) => {\r\n    dispatch({ type: EXP_LIST_REQUEST });\r\n    try {\r\n        const { data } = await axios.get(`/api/expenses/${expenseId}`);\r\n        dispatch({ type: EXP_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: EXP_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createExpense = (objExpense) => async (dispatch, getState) => {\r\n    dispatch({ type: EXPENSE_CREATE_REQUEST });\r\n    const {userSignin: { userInfo } } = getState();\r\n\r\n    try {\r\n        const { data } = await axios.post('/api/expenses/', {\r\n            ...objExpense,\r\n            userUserId: userInfo.id\r\n        });\r\n\r\n        if (data.errors) {\r\n            throw new Error(data.errors[0].message);\r\n        }\r\n        dispatch({ type: EXPENSE_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: EXPENSE_CREATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });  \r\n    }\r\n}","export const SUBCATEGORY_LIST_REQUEST = 'SUBCATEGORY_LIST_REQUEST';\r\nexport const SUBCATEGORY_LIST_SUCCESS = 'SUBCATEGORY_LIST_SUCCESS';\r\nexport const SUBCATEGORY_LIST_FAIL = 'SUBCATEGORY_LIST_FAIL';\r\n\r\nexport const SUBCATEGORY_CREATE_REQUEST = 'SUBCATEGORY_CREATE_REQUEST';\r\nexport const SUBCATEGORY_CREATE_SUCCESS = 'SUBCATEGORY_CREATE_SUCCESS';\r\nexport const SUBCATEGORY_CREATE_FAIL = 'SUBCATEGORY_CREATE_FAIL';","import axios from \"axios\";\r\nimport { SUBCATEGORY_CREATE_FAIL, SUBCATEGORY_CREATE_REQUEST, SUBCATEGORY_CREATE_SUCCESS, SUBCATEGORY_LIST_FAIL, SUBCATEGORY_LIST_REQUEST, SUBCATEGORY_LIST_SUCCESS } from \"../constants/subcategoriesConstants\"\r\n\r\nexport const listSubcategories = (categoryId) => async (dispatch) => {\r\n    dispatch({ type: SUBCATEGORY_LIST_REQUEST });\r\n    try {\r\n        const { data } = await axios.get(`/api/subcategories/${categoryId}`);\r\n        dispatch({ type: SUBCATEGORY_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SUBCATEGORY_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createSubcategory = (name, categoryId) => async (dispatch) => {\r\n    dispatch({ type: SUBCATEGORY_CREATE_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.post('/api/subcategories',{\r\n            name: name,\r\n            categoryId: categoryId\r\n        });\r\n        dispatch({ type: SUBCATEGORY_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SUBCATEGORY_CREATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createCategory, listCategories } from '../actions/categoryActions';\r\nimport { createSubcategory, listSubcategories } from '../actions/subcategoriesActions';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nexport default function SubForm(props) {\r\n\r\n    const { type, categoryId, showNew } = props;\r\n    const dispatch = useDispatch('');\r\n\r\n    const categoryCreate = useSelector(state => state.categoryCreate);\r\n    const { category } = categoryCreate;\r\n\r\n    const subcategoryCreate = useSelector(state => state.subcategoryCreate);\r\n    const { subcategory } = subcategoryCreate;\r\n    \r\n    const [name, setname] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [submitCategory, setSubmitCategory] = useState(false);\r\n    const [submitSubcategory, setSubmitSubcategory] = useState(false);\r\n\r\n    const handlerSubmit = () => {\r\n\r\n        switch (type) {\r\n            case 'category':\r\n                dispatch(createCategory(name));\r\n                setSubmitCategory(true);\r\n                break;\r\n            case 'subcategory':\r\n                dispatch(createSubcategory(name, categoryId));\r\n                setSubmitSubcategory(true);\r\n                break\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let title = type === 'category' ? 'categoria' : 'subcategoria';\r\n        setTitle(title);\r\n    }, [type, category]);\r\n\r\n    useEffect(()=>{\r\n        if (category && submitCategory) {\r\n          showNew(false); \r\n          dispatch(listCategories()); \r\n          dispatch(listSubcategories(category.categoryId)); \r\n        }\r\n    }, [submitCategory, category, dispatch, showNew]);\r\n\r\n    useEffect(()=>{\r\n        if (subcategory && submitSubcategory) {\r\n          showNew(false); \r\n          dispatch(listSubcategories(categoryId)); \r\n        }\r\n    }, [submitSubcategory, subcategory, dispatch, showNew, categoryId]);\r\n    return (\r\n        <div className=\"sub-form\">\r\n            <div>\r\n                <input \r\n                    type=\"text\"\r\n                    maxLength=\"20\"\r\n                    onChange={e => setname(e.target.value)}\r\n                    placeholder={`Nueva ${title}`}>\r\n                </input>\r\n            </div>\r\n            <div>\r\n                <CheckIcon onClick={handlerSubmit} />\r\n            </div>\r\n            <div>\r\n                <ClearIcon onClick={() => showNew(false)} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MessageBox from '../MessageBox';\r\nimport LoadingBox from '../utils/LoadingBox';\r\nimport Select from 'react-select';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listCategories } from '../../actions/categoryActions';\r\nimport { createExpense, listExpenses } from '../../actions/expenseActions';\r\nimport { listSubcategories } from '../../actions/subcategoriesActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SubForm from '../SubForm';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function DrawerExpense(props) {\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n  const [description, setDescription] = useState('');\r\n  const [value, setValue] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [subcategory, setSubcategory] = useState('');\r\n  const [today, setToday] = useState('');\r\n\r\n  const [submit, setSubmit] = useState(false);\r\n  const [load, setLoad] = useState(false);\r\n  const [showNewCategory, setShowNewCateogry] = useState(false);\r\n  const [showNewSubcategory, setShowNewSubcategory] = useState(false);\r\n\r\n  const categoriesList = useSelector(state => state.categoriesList);\r\n  const { loading, error, categories } = categoriesList;\r\n\r\n  const expenseCreate = useSelector(state => state.expenseCreate);\r\n  const { expense, loading: loadingSuccess, error: errorCreate } = expenseCreate;\r\n\r\n  const subcategoriesList = useSelector(state => state.subcategoriesList);\r\n  const { subcategories, loading: loadingSubcategory, error: errorSubcategory } = subcategoriesList;\r\n\r\n  const { state, setState, setIsOpen } = props;\r\n\r\n  const toggleDrawer = (open) => {\r\n      setState({ ...state, right: open });\r\n  };\r\n\r\n  const handleClose = useCallback((open) => {\r\n      if(state.right)\r\n        setState({ ...state, right: open });\r\n        setIsOpen(false);\r\n  },[setState, state, setIsOpen]);\r\n\r\n  const loadCategories = useCallback(() => {\r\n      if (!categories) {\r\n          dispatch(listCategories());\r\n      } else{\r\n          if (categories.length > 0) \r\n              setCategory(categories[0].value);\r\n      }\r\n  },[categories, dispatch]);\r\n\r\n  const handlerCategory = (e) => {\r\n      setCategory(e);\r\n      setLoad(true);\r\n  }\r\n\r\n  const handlerSubmit = (e) => {\r\n      e.preventDefault();\r\n      const objExpense = {\r\n          description: description,\r\n          value: value,\r\n          date: date,\r\n          categoryCategoryId: category,\r\n          subcategorySubcategoryId: subcategory\r\n      }\r\n      setSubmit(true);\r\n      dispatch(createExpense(objExpense));\r\n  }\r\n\r\n  const getDate = () => {\r\n      let newDate = new Date()\r\n      let date = newDate.getDate();\r\n      let month = newDate.getMonth() + 1;\r\n      let year = newDate.getFullYear();\r\n\r\n      date = date < 10 ? `0${date}` : `${date}`;\r\n      month = month < 10 ? `0${month}` : `${month}`;\r\n\r\n      let today = `${year}-${month}-${date}`;\r\n      setToday(today);\r\n      setDate(today);\r\n  }\r\n\r\n  const handletDate = (e) => {\r\n      setToday(e);\r\n      setDate(e);\r\n  }\r\n\r\n  useEffect(()=>{\r\n      if (category) {\r\n          if (subcategories && !load) {\r\n              if(subcategories.length > 0)\r\n                  setSubcategory(subcategories[0].value);\r\n          } else {\r\n              dispatch(listSubcategories(category));\r\n              setLoad(false);\r\n          }\r\n      }\r\n  }, [category, subcategories, load, dispatch])\r\n\r\n  useEffect(()=>{\r\n      getDate();\r\n      loadCategories();\r\n  }, [loadCategories]);\r\n\r\n  useEffect(()=>{\r\n      if (expense && submit) {\r\n          let month = [today.split('-')[1]];\r\n          dispatch(listExpenses( month, []));\r\n          handleClose(false);\r\n      }\r\n  },[expense, dispatch, submit, today, handleClose]);\r\n\r\n  return (\r\n        <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n            <div className=\"drawer-header\">\r\n                <Link to=\"/\">\r\n                    <ArrowBackIcon className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n                </Link>\r\n            </div>\r\n            <div className=\"drawer-body\">\r\n                <form className=\"form-modal\" onSubmit={handlerSubmit}>\r\n                        {errorCreate && <MessageBox variant=\"danger\">{errorCreate}</MessageBox>}\r\n                        <div className=\"form-title\">\r\n                        <div>Registrar gasto</div>\r\n                        <Divider />\r\n                        </div>\r\n\r\n                        <div>\r\n                            {\r\n                            loading ? <LoadingBox></LoadingBox>\r\n                            :\r\n                            error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                            :(\r\n                            <div>\r\n                                <Select\r\n                                className=\"select\"\r\n                                placeholder=\"Categorias\"\r\n                                onChange={e => handlerCategory(e.value)}\r\n                                defaultValue={categories[0]}\r\n                                options={categories} />\r\n                                <AddIcon\r\n                                    onClick={() => setShowNewCateogry(!showNewCategory)}\r\n                                    className=\"fas fa-plus-circle\"\r\n                                />\r\n                                { showNewCategory && <SubForm showNew={setShowNewCateogry} type={'category'} /> }\r\n                            </div>\r\n                            )}\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                                loadingSubcategory ? <div\r\n                                                        className=\"new-category\"\r\n                                                        onClick={() => setShowNewCateogry(!showNewCategory)}\r\n                                                    >Crear categoria</div>\r\n                                :\r\n                                errorSubcategory ? <MessageBox variant=\"danger\">{errorSubcategory}</MessageBox>\r\n                                :(\r\n                                <div>\r\n                                    <Select\r\n                                        className=\"select\"\r\n                                        placeholder=\"Subcategorias\"\r\n                                        onChange={e => setSubcategory(e.value)}\r\n                                        defaultValue={subcategories[0]}\r\n                                        options={subcategories}\r\n                                    />\r\n                                    <AddIcon \r\n                                        onClick={() => setShowNewSubcategory(!showNewSubcategory)}\r\n                                        className=\"fas fa-plus-circle\"\r\n                                    />  \r\n                                    { showNewSubcategory && <SubForm showNew={setShowNewSubcategory} type={'subcategory'} categoryId={category} /> }\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div>\r\n                            <input \r\n                                type=\"number\"\r\n                                onChange={e => setValue(e.target.value)}\r\n                                placeholder=\"Valor\">\r\n                            </input>\r\n                        </div>\r\n                        <div>\r\n                            <input \r\n                                type=\"text\"\r\n                                onChange={e => setDescription(e.target.value)}\r\n                                placeholder=\"Descripcion\">\r\n                            </input>\r\n                        </div>\r\n                        <div>\r\n                            <input\r\n                                value={today} \r\n                                type=\"date\"\r\n                                onChange={e => handletDate(e.target.value)}\r\n                                placeholder=\"Fecha\">\r\n                            </input>\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                                loadingSuccess ? <LoadingBox />\r\n                                :(\r\n                                    <button className=\"btn secundary\" type=\"submit\">Crear</button>\r\n                                )\r\n                            }\r\n                        </div>\r\n                </form>\r\n            </div>\r\n        </Drawer>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DrawerExpense from './Drawers/DrawerExpense';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function FloatButton(props) {\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const [state, setState] = React.useState({ right: false });\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggleDrawer = (open) => {\r\n        setIsOpen(true);\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                isOpen && (\r\n                    <DrawerExpense\r\n                        state={state}\r\n                        setIsOpen={setIsOpen}\r\n                        setState={setState}\r\n                    />\r\n                )\r\n            }\r\n\r\n            {\r\n                userInfo && \r\n                (\r\n                    <Link to =\"/create\">\r\n                        <div className=\"floating-button\">\r\n                            <button className=\"btoncito\">\r\n                                <AddIcon />\r\n                            </button>\r\n                        </div>\r\n                    </Link>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","export const ALERT_LIST_REQUEST = \"ALERT_LIST_REQUEST\";\r\nexport const ALERT_LIST_SUCCESS = \"ALERT_LIST_SUCCESS\";\r\nexport const ALERT_LIST_FAIL = \"ALERT_LIST_FAIL\";\r\n\r\nexport const ALERT_UPDATE_REQUEST = \"ALERT_UPDATE_REQUEST\";\r\nexport const ALERT_UPDATE_SUCCESS = \"ALERT_UPDATE_SUCCESS\";\r\nexport const ALERT_UPDATE_FAIL = \"ALERT_UPDATE_FAIL\";\r\n\r\nexport const ALERT_CREATE_REQUEST = \"ALERT_CREATE_REQUEST\";\r\nexport const ALERT_CREATE_SUCCESS = \"ALERT_CREATE_SUCCESS\";\r\nexport const ALERT_CREATE_FAIL = \"ALERT_CREATE_FAIL\";\r\n\r\nexport const ALERT_DELETE_REQUEST = \"ALERT_DELETE_REQUEST\";\r\nexport const ALERT_DELETE_SUCCESS = \"ALERT_DELETE_SUCCESS\";\r\nexport const ALERT_DELETE_FAIL = \"ALERT_DELETE_FAIL\";\r\n\r\nexport const TYPE_ALERT_LIST_REQUEST = \"TYPE_ALERT_LIST_REQUEST\";\r\nexport const TYPE_ALERT_LIST_SUCCESS = \"TYPE_ALERT_LIST_SUCCESS\";\r\nexport const TYPE_ALERT_LIST_FAIL = \"TYPE_ALERT_LIST_FAIL\";","import axios from \"axios\";\r\nimport { ALERT_CREATE_FAIL, ALERT_CREATE_REQUEST, ALERT_CREATE_SUCCESS, ALERT_DELETE_FAIL, ALERT_DELETE_REQUEST, ALERT_DELETE_SUCCESS, ALERT_LIST_FAIL, ALERT_LIST_REQUEST, ALERT_LIST_SUCCESS, ALERT_UPDATE_FAIL, ALERT_UPDATE_REQUEST, ALERT_UPDATE_SUCCESS, TYPE_ALERT_LIST_FAIL, TYPE_ALERT_LIST_REQUEST, TYPE_ALERT_LIST_SUCCESS } from '../constants/alertConstants';\r\n\r\nexport const listAlerts = () => async (dispatch, getState) => {\r\n    dispatch({ type: ALERT_LIST_REQUEST });\r\n    const {userSignin: { userInfo }} = getState(); \r\n    try {\r\n        const { data } = await axios.get(`/api/alerts/${userInfo.id}`);\r\n        dispatch({ type: ALERT_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALERT_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        }); \r\n    }\r\n}\r\n\r\nexport const updateAlertActive = (alert) => async (dispatch) => {\r\n    dispatch({ type: ALERT_UPDATE_REQUEST });\r\n    try {\r\n        const { data } = await axios.put(`/api/alerts`, alert);\r\n        dispatch({ type: ALERT_UPDATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALERT_UPDATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });    \r\n    }\r\n}\r\n\r\nexport const createAlert = (alert) => async (dispatch, getState) => {\r\n    dispatch({ type: ALERT_CREATE_REQUEST });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n        const { data } = await axios.post('/api/alerts', {\r\n            alert: alert,\r\n            userId: userInfo.id\r\n        });\r\n        dispatch({ type: ALERT_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALERT_CREATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        }); \r\n    }\r\n}\r\n\r\nexport const listTypeAlerts = () => async (dispatch) => {\r\n    dispatch({ type: TYPE_ALERT_LIST_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.post('/api/alerts/types');\r\n        dispatch({ type: TYPE_ALERT_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: TYPE_ALERT_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        }); \r\n    }\r\n}\r\n\r\nexport const deleteAlert = (alertId) => async (dispatch) => {\r\n    dispatch({ type: ALERT_DELETE_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.delete(`/api/alerts/${alertId}`);\r\n        dispatch({ type: ALERT_DELETE_SUCCESS, payload: data.deleted });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALERT_DELETE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });   \r\n    }\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Select from 'react-select';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport LoadingBox from '../utils/LoadingBox';\r\nimport { createAlert, listAlerts, listTypeAlerts, updateAlertActive } from '../../actions/alertActions';\r\n\r\nexport default function DrawerAlert(props) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { editAlert, edit, state, setState } = props;\r\n  const [days, setDays] = useState([]);\r\n  const [selectDay, setSelectDay] = useState('');\r\n  const [selectType, setSelectType] = useState('');\r\n  const [day, setDay] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [submit, setSubmit] = useState(false);\r\n\r\n  const alertCreate = useSelector(state => state.alertCreate);\r\n  const { alert } = alertCreate;\r\n\r\n  const alertActiveUpdate = useSelector(state => state.alertActiveUpdate);\r\n  const { alert: alertSuccess } = alertActiveUpdate;\r\n\r\n  const alertTypeList = useSelector(state => state.alertTypeList);\r\n  const { typeAlerts, loading: loadingTypes } = alertTypeList;\r\n\r\n    const toggleDrawer = (open) => {\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handleClose = useCallback((open) => {\r\n        if(state.right)\r\n            setState({ ...state, right: open });\r\n    },[setState, state]);\r\n\r\n  const handleSubmit = (e) => { \r\n        e.preventDefault();\r\n        setSubmit(true);\r\n        if (edit) {\r\n            dispatch(updateAlertActive({\r\n                date: day,\r\n                alert: title,\r\n                message,\r\n                id:editAlert.id,\r\n                active:editAlert.active\r\n            }));\r\n        } else {\r\n            dispatch(createAlert({date: day, alert: title, message}));\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (days.length < 1) {\r\n            let days = [];\r\n            [...Array(31).keys()].map(item => days.push({value: item + 1, label: item + 1}));\r\n            setDays(days);\r\n        }\r\n    },[days]);\r\n\r\n    useEffect(()=>{\r\n        dispatch(listTypeAlerts());\r\n    }, [dispatch])\r\n\r\n    useEffect(()=>{\r\n        if ((alert && submit) || (alertSuccess && submit)){\r\n            handleClose(false);\r\n            dispatch(listAlerts());\r\n        }\r\n    },[alert, submit, dispatch, alertSuccess, handleClose]);\r\n\r\n    useEffect(()=>{\r\n        if (editAlert && edit) {\r\n            const type = typeAlerts.filter(type => type.label === editAlert.priority)\r\n            setTitle(editAlert.alert);\r\n            setMessage(editAlert.message);\r\n            setSelectDay({label: editAlert.date, value:editAlert.date});\r\n            setSelectType(type);\r\n            setDay(editAlert.date); \r\n        } else {\r\n            setTitle('');\r\n            setMessage('');\r\n            setSelectDay({ label: 1, value: 1 }); \r\n            setDay(1); \r\n            setSelectType({});\r\n        }\r\n    },[editAlert, edit, typeAlerts]);\r\n\r\n  return (\r\n\r\n    <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n        <div className=\"drawer-header\">\r\n            <ArrowBackIcon id=\"close\" className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n        </div>\r\n        <div className=\"drawer-body\">\r\n        <form className=\"form-modal\" onSubmit={handleSubmit}>\r\n                <div className=\"form-title\">\r\n                    <div>Registar Alerta</div>\r\n                    <Divider />\r\n                </div>\r\n                <div>\r\n                <label>Prioridad</label>\r\n                {\r\n                    loadingTypes ? <LoadingBox />\r\n                    :\r\n                    (\r\n                    <Select\r\n                        placeholder=\"Prioridad de la alerta\"\r\n                        onChange={e => setTitle(e.value)}\r\n                        defaultValue={selectType}\r\n                        options={typeAlerts}\r\n                    />\r\n                    )\r\n                }\r\n\r\n            </div>\r\n            <div>\r\n                <label>Descripcíon alerta</label>\r\n                <textarea\r\n                    type=\"text\"\r\n                    value={message}\r\n                    onChange={e => setMessage(e.target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label>Día de envío</label>\r\n                <Select\r\n                    placeholder=\"Dia\"\r\n                    onChange={e => setDay(e.value)}\r\n                    defaultValue={selectDay}\r\n                    options={days}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button onClick={() => toggleDrawer(false)} className=\"btn secundary\" type=\"submit\">{edit ? 'Actualizar' : 'Crear'}</button>\r\n            </div>\r\n\r\n        </form>\r\n        </div>\r\n    </Drawer>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteAlert, listAlerts, updateAlertActive } from '../actions/alertActions';\r\nimport MessageBox from '../components/MessageBox';\r\nimport LoadingBox from '../components/utils/LoadingBox';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport DrawerAlert from '../components/Drawers/DrawerAlert';\r\nimport Swal from 'sweetalert2'\r\n\r\nexport default function AlertScreen() {\r\n    const dispatch = useDispatch();\r\n    const [rows, setRows] = useState([]);\r\n    const [send, setSend] = useState(false);\r\n    const [editAlert, setEditAlert] = useState();\r\n    const [edit, setEdit] = useState(false);\r\n    const [submitDelete, setSubmitDelete] = useState(false);\r\n\r\n    const alertList = useSelector(state => state.alertList);\r\n    const { error, loading, alerts } = alertList;\r\n\r\n    const alertActiveUpdate = useSelector(state => state.alertActiveUpdate);\r\n    const { alert } = alertActiveUpdate;\r\n\r\n    const alertDelete = useSelector(state => state.alertDelete);\r\n    const { success } = alertDelete;\r\n\r\n    const [state, setState] = React.useState({ right: false });\r\n\r\n    const handleActive = (e, item) => {\r\n        dispatch(updateAlertActive({...item, active: e.target.checked}));\r\n        setSend(true);\r\n    }\r\n\r\n    const toggleDrawer = (open, item) => {\r\n\r\n        if(item){\r\n            setEditAlert(item);\r\n            setEdit(true);\r\n        } else {\r\n            setEditAlert({});\r\n        }\r\n\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handleDelete = (alertId) => {\r\n        Swal.fire({\r\n            title: '¿Eliminar alerta?',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Sí, eliminar'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              dispatch(deleteAlert(alertId));\r\n              setSubmitDelete(true);\r\n            }\r\n          })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(success && submitDelete){\r\n            Swal.fire(\r\n                'Eliminado!',\r\n                'Alerta eliminada correctamente',\r\n                'success'\r\n            ).then(()=>{\r\n                setSubmitDelete(false);\r\n                dispatch(listAlerts());\r\n            });  \r\n        }\r\n    },[success, submitDelete, dispatch])\r\n\r\n    useEffect(()=>{\r\n        if (alerts) {\r\n            let rows = [];\r\n            alerts.map(item => rows.push({\r\n                id: item.alertId,\r\n                priority: item.typesalert.typeAlert,\r\n                message: item.message,\r\n                date: item.date,\r\n                active: item.active\r\n            }));\r\n\r\n            setRows(rows);\r\n        } else {\r\n            dispatch(listAlerts());\r\n        }\r\n    }, [alerts, dispatch]);\r\n\r\n    useEffect(()=>{\r\n        if (alert && send){\r\n            dispatch(listAlerts());\r\n        }\r\n    },[dispatch, alert, send]);\r\n\r\n    return (\r\n        <div>\r\n            <DrawerAlert \r\n                state={state}\r\n                setState={setState}\r\n                editAlert={editAlert}\r\n                edit={edit}\r\n            />\r\n\r\n            <div className=\"container page-container page\">\r\n                <h2>Alertas<small></small></h2>\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={() => toggleDrawer(true)}\r\n                    className=\"btn primary\"\r\n                >\r\n                    Crear alerta\r\n                </button>\r\n\r\n                {\r\n                loading ? <LoadingBox />\r\n                :\r\n                error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                :(\r\n                <div className=\"container-table\">\r\n                    <ul className=\"responsive-table\">\r\n                        <li className=\"table-header\">\r\n                            <div className=\"col col-2\">Activo</div>\r\n                            <div className=\"col col-2\">Prioridad</div>\r\n                            <div className=\"col col-4\">Mensaje</div>\r\n                            <div className=\"col col-4\">Dia de envio</div>\r\n                            <div className=\"col col-2\">Acciones</div>\r\n                        </li>\r\n                        {\r\n                            rows.map(item => (\r\n                                <li className=\"table-row\" key={item.id}>\r\n                                    <div className=\"col col-2\" data-label=\"Payment Status\">\r\n                                        <input type=\"checkbox\" checked={item.active} value={false} onChange={ e => handleActive(e, item)} />\r\n                                    </div>\r\n                                    <div className=\"col col-2\" data-label=\"Customer Name\">{item.priority}</div>\r\n                                    <div className=\"col col-4\" data-label=\"Amount\">{item.message}</div>\r\n                                    <div className=\"col col-4\" data-label=\"Payment Status\">Día {item.date} de cada mes</div>\r\n                                    <div className=\"col col-2\" data-label=\"Payment Status\">\r\n                                        <EditIcon onClick={() => toggleDrawer(true, item)} className=\"cursor-pointer\" />\r\n                                        <DeleteIcon onClick={() => handleDelete(item.id)} className=\"cursor-pointer\" />\r\n                                    </div>\r\n                                </li> \r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listExpenses } from '../actions/expenseActions';\r\n\r\nexport default function ChartScreen() {\r\n    const dispatch = useDispatch();\r\n    const [labels, setLabels] = useState([]);\r\n    const [data, setData] = useState([]);\r\n\r\n    const expenseList = useSelector(state => state.expenseList);\r\n    const { expenses } = expenseList;\r\n\r\n    useEffect(()=>{\r\n        if (!expenses){\r\n            dispatch(listExpenses(['09'], ['category']));\r\n        } else {\r\n            let labels = [];\r\n            let data = [];\r\n            expenses.map(item => labels.push(item.category.category));\r\n            expenses.map(item => data.push(item.value));\r\n            setLabels(labels);\r\n            setData(data);\r\n        }\r\n    },[dispatch, expenses]);\r\n    return (\r\n        <div>\r\n            <Pie \r\n                data={{ \r\n                    labels: labels,\r\n                    datasets: [{\r\n                        data: data,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.9)',\r\n                            'rgba(54, 162, 235, 0.9)',\r\n                            'rgba(255, 206, 86, 0.9)',\r\n                            'rgba(75, 192, 192, 0.9)',\r\n                            'rgba(153, 102, 255, 0.9)',\r\n                            'rgba(255, 159, 64, 0.9)'\r\n                        ],\r\n                        borderColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)'\r\n                        ],\r\n                        borderWidth: 1\r\n                    }]\r\n                }}\r\n                height={400}\r\n                width={600}\r\n                options={{ maintainAspectRatio: false }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","export const GET_MONTHS_REQUEST = \"GET_MONTHS_REQUEST\";\r\nexport const GET_MONTHS_SUCCESS = \"GET_MONTHS_SUCCESS\";\r\nexport const GET_MONTHS_FAIL = \"GET_MONTHS_FAIL\";","import axios from \"axios\";\r\nimport { GET_MONTHS_FAIL, GET_MONTHS_REQUEST, GET_MONTHS_SUCCESS } from \"../constants/utilsConstants\"\r\n\r\nexport const getMonths = () => async (dispatch) => {\r\n    dispatch({ type: GET_MONTHS_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.get('/api/utils/months');\r\n        dispatch({ type: GET_MONTHS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_MONTHS_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listExpense } from '../actions/expenseActions';\r\nimport { getMonths } from '../actions/utilsActions';\r\nimport MessageBox from '../components/MessageBox';\r\nimport LoadingBox from '../components/utils/LoadingBox';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\nexport default function ExpenseScreen(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const expenseId = props.match.params.id;\r\n\r\n    const expList = useSelector(state => state.expList);\r\n    const { expense, loading, error } = expList;\r\n\r\n    const monthsGet = useSelector(state => state.monthsGet);\r\n    const { months } = monthsGet;\r\n\r\n    const convertDate = (date) => {\r\n        let month = date.split('-')[1];\r\n        let day = date.split('-')[2];\r\n  \r\n        let result = months.filter(item => item.value === month);\r\n        let newDate = `${day} ${result[0].label}`;\r\n        return newDate;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        dispatch(listExpense(expenseId));\r\n    }, [dispatch, expenseId]);\r\n\r\n    useEffect(()=> {\r\n        if(!months) dispatch(getMonths());\r\n      },[dispatch, months]);\r\n    \r\n    return (\r\n        <div>\r\n            {\r\n                loading ? <LoadingBox />\r\n                :\r\n                error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                : \r\n                (\r\n                <div className=\"card-expense\">\r\n                    <div className=\"card-expense-header\">\r\n                        <div>{expense.category.label}</div>\r\n                        <div>{expense.subcategory.label}</div>\r\n                        <div>{expense.description}</div>\r\n                    </div>\r\n                    <div className=\"card-expense-body\">\r\n                        <div>${expense.value}</div>\r\n                        { months && ( \r\n                            <div>{convertDate(expense.date.split('T')[0])}</div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"card-expense-edit\">\r\n                        <Avatar> <EditIcon /> </Avatar>\r\n                    </div>\r\n                </div>\r\n                )\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport { listExpenses } from '../actions/expenseActions';\r\nimport { getMonths } from '../actions/utilsActions';\r\n\r\nexport default function SelectDate(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const monthsGet = useSelector(state => state.monthsGet);\r\n    const { months } = monthsGet;\r\n\r\n    const { month } = props;\r\n    const [monthSelect, setMonthSelect] = useState();\r\n    const [monthsSelect, setMonthsSelect] = useState();\r\n    const [agrupadores, setAgrupadores] = useState();\r\n    const [groupesSelect, setSelectGroupes] = useState([]);\r\n\r\n    const handlerMonth = (items) => {\r\n        let months = [];\r\n        items.map(item => months.push(item.value));\r\n\r\n        setMonthsSelect(months);\r\n        dispatch(listExpenses(months, groupesSelect));\r\n    }\r\n\r\n    const handlerGrouper = (items) => {\r\n        let groupers = [];\r\n        items.map(item => groupers.push(item.value));\r\n\r\n        setSelectGroupes(groupers);\r\n        dispatch(listExpenses(monthsSelect, groupers));\r\n    }\r\n\r\n    useEffect(()=>{\r\n        dispatch(listExpenses([month], []));\r\n    },[dispatch, month]);\r\n\r\n    useEffect(()=>{\r\n        if (!agrupadores) \r\n            setAgrupadores([\r\n                {value:'category', label:'Categoria'},\r\n                {value:'subcategory', label:'Subcategoria'},\r\n            ]);\r\n    },[agrupadores]);\r\n\r\n    useEffect(()=>{\r\n        if(months){\r\n            var result = months.filter(item => item.value === month);\r\n\r\n            if (!monthSelect) setMonthSelect(result);\r\n            if (!monthsSelect) setMonthsSelect([result[0].value]);\r\n\r\n        } else {\r\n            dispatch(getMonths());\r\n        }\r\n    },[dispatch, months, monthSelect, month, monthsSelect]);\r\n\r\n    return (\r\n        <div className=\"selects-datable\">\r\n            { months && monthSelect && (\r\n                <Select\r\n                className=\"select\"\r\n                placeholder=\"Mes\"\r\n                isMulti\r\n                onChange={e => handlerMonth(e)}\r\n                defaultValue={monthSelect}\r\n                options={months} />\r\n            )}\r\n\r\n            { months && monthSelect && (\r\n                <Select\r\n                className=\"select\"\r\n                placeholder=\"Agrupar por...\"\r\n                isMulti\r\n                onChange={e => handlerGrouper(e)}\r\n                // defaultValue={monthSelect}\r\n                options={agrupadores} />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport MessageBox from '../components/MessageBox';\r\nimport LoadingBox from '../components/utils/LoadingBox';\r\nimport { MDBDataTableV5 } from 'mdbreact';\r\nimport SelectDate from '../components/SelectDate';\r\nimport { getMonths } from '../actions/utilsActions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function HomeScreen(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const [success, setSuccess] = useState(false);\r\n    const [datatable, setDatatable] = useState({});\r\n    const [month, setMonth] = useState();\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const monthsGet = useSelector(state => state.monthsGet);\r\n    const { months } = monthsGet;\r\n\r\n    const expenseList = useSelector(state => state.expenseList);\r\n    const { loading, expenses, error } = expenseList;\r\n\r\n    const getDate = () => {\r\n        let newDate = new Date()\r\n        let month = newDate.getMonth() + 1;\r\n\r\n        month = month < 10 ? `0${month}` : `${month}`;\r\n        setMonth(month);\r\n    }\r\n\r\n    const convertDate = (date) => {\r\n      let month = date.split('-')[1];\r\n      let day = date.split('-')[2];\r\n\r\n      let result = months.filter(item => item.value === month);\r\n      let newDate = `${day} ${result[0].label}`;\r\n      return newDate;\r\n    }\r\n\r\n    const handleRedirect = (expenseId) => {\r\n        props.history.push(`/expenses/${expenseId}`);\r\n    }\r\n\r\n    useEffect(()=> {\r\n      if(!months) dispatch(getMonths());\r\n    },[dispatch, months]);\r\n\r\n    useEffect(()=>{\r\n        if (!userInfo) props.history.push(\"/login\");\r\n        if (expenses) {\r\n            let columns = [\r\n                {\r\n                    label: 'Categoria',\r\n                    field: 'category',\r\n                    width: 150,\r\n                    attributes: {\r\n                      'aria-controls': 'DataTable',\r\n                      'aria-label': 'Gasto',\r\n                    },\r\n                  },\r\n                  {\r\n                    label: 'Subcategoria',\r\n                    field: 'subcategory',\r\n                    width: 270,\r\n                  },\r\n                  {\r\n                    label: 'Valor',\r\n                    field: 'value',\r\n                    width: 270\r\n                  },\r\n            ];\r\n\r\n            let rows = [];\r\n\r\n            if (expenses.length) {   \r\n              if(expenses[0].description)\r\n              columns.push({\r\n                label: 'Descripción',\r\n                field: 'description',\r\n                width: 270,\r\n              });\r\n\r\n            if(expenses[0].date)\r\n              columns.push({\r\n                label: 'Fecha',\r\n                field: 'date',\r\n                width: 270,\r\n              });\r\n              expenses.map(item => rows.push({\r\n                  category: item.category.category,\r\n                  subcategory: item.subcategory.subcategory,\r\n                  description: item.description ? item.description : '',\r\n                  value: new Intl.NumberFormat().format(item.value),\r\n                  date: item.date ? convertDate(item.date.split('T')[0]) : '',\r\n              }));\r\n            }\r\n            setDatatable({ columns, rows });\r\n          }\r\n          if(!month) {\r\n            getDate();\r\n          }\r\n        setSuccess(false);\r\n    }, [dispatch, props, userInfo, success, expenses, month]);\r\n    \r\n    return (\r\n        <div className=\"home-screen\">\r\n\r\n            <div className=\"title\">Dero</div>\r\n\r\n            { month && (<SelectDate month={month} />)}\r\n\r\n            {\r\n            loading ? <LoadingBox></LoadingBox>\r\n            :\r\n            error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n            :\r\n            (\r\n              <div className=\"datatable\">\r\n                <div className=\"data-info\">\r\n                    <div className=\"data-card\">\r\n                      <div>Gastos totales</div>\r\n                      <div>\r\n                        ${new Intl.NumberFormat().format(expenses.reduce((a, c) => a + parseInt(c.value), 0))}\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"data-table\">\r\n                  <MDBDataTableV5\r\n                    hover\r\n                    data={datatable}\r\n                    searchTop\r\n                    paging={false}\r\n                    info={false}\r\n                    searchBottom={false}\r\n                  />\r\n                </div>\r\n                <div className=\"data-content\">\r\n                    {\r\n                      expenses.map(item => (\r\n                        // <Link to={`/expense/${item.expenseId}`}>\r\n                          <div key={item.expenseId} className=\"data-table-items\" onClick={() => handleRedirect(item.expenseId)}>\r\n\r\n                            <div className=\"data-date\">\r\n                              <div>{item.date ? convertDate(item.date.split('T')[0]).slice(0, 6).split(' ')[1] : ''}</div>\r\n                              <div>{item.date ? convertDate(item.date.split('T')[0]).slice(0, 6).split(' ')[0] : ''}</div>\r\n                            </div>\r\n\r\n                            <div> \r\n                              <div className=\"category\">{item.category.category}</div>\r\n                              <div className=\"subcategory\">{item.subcategory.subcategory}</div>\r\n                            </div>\r\n\r\n                              <div>${new Intl.NumberFormat().format(item.value)}</div>\r\n\r\n                          </div>\r\n                        // </Link>\r\n                      ))\r\n                    }\r\n                  </div>\r\n              </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signin } from '../actions/userActions';\r\nimport { Link } from 'react-router-dom';\r\nimport LoadingBox from '../components/utils/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nexport default function LoginScreen(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo, error, loading } = userSignin;\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signin({username: username, password: password}));\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(userInfo) {\r\n            props.history.push(\"/\")\r\n        }\r\n    }, [userInfo, props])\r\n    return (\r\n        <div className=\"home\">\r\n            \r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                \r\n                <div className=\"title\">\r\n                    Iniciar sesión\r\n                </div>\r\n\r\n                <div>\r\n                    <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            placeholder=\"Username\"\r\n                            onChange={ e => setUsername(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={e => setPassword(e.target.value)}\r\n                    ></input>\r\n                    {/* <span><Link to=\"/\">recuperar contraseña</Link></span> */}\r\n                </div>\r\n                <div>\r\n                    {\r\n                        loading ? <LoadingBox />\r\n                        :\r\n                        (\r\n                            <button className=\"btn primary\" type=\"submit\">Iniciar Sesión</button>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n                <div>\r\n                    <Link to=\"/register\">¿Olvidaste tu contraseña?</Link> \r\n                </div>\r\n\r\n                <div>\r\n                    { error && <MessageBox variant=\"danger\">{error}</MessageBox> }\r\n                </div>\r\n            </form>\r\n            <div className=\"box-register\">\r\n                <div>\r\n                    <span>\r\n                        <Link to=\"/register\">Crear una cuenta</Link> \r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ProfileScreen() {\r\n    return (\r\n        <div>\r\n            Profile\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { registerUser } from '../actions/userActions';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nexport default function RegisterScreen(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [error, setError] = useState(null);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        setError(null);\r\n        if (password === confirmPassword) {\r\n            dispatch(registerUser({username: username, password:password, email: email}));\r\n        } else {\r\n            setError('Las contraseñas no coinciden');\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (userInfo) {\r\n            props.history.push(\"/\");\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                <div className=\"title\">\r\n                    Registro\r\n                </div>\r\n\r\n                <div>\r\n                    { error && (<MessageBox variant=\"danger\">{error}</MessageBox>)}\r\n                </div>\r\n\r\n                <div>\r\n                    <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            placeholder=\"Username\"\r\n                            onChange={ e => setUsername(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            placeholder=\"Email\"\r\n                            onChange={ e => setEmail(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={e => setPassword(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={e => setConfirmPassword(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <button className=\"btn primary\" type=\"submit\">Registrarme</button>\r\n                </div>\r\n\r\n                <div>\r\n                    <Link to=\"/login\">Iniciar sesion</Link> \r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MessageBox from '../components/MessageBox';\r\nimport LoadingBox from '../components/utils/LoadingBox';\r\nimport Select from 'react-select';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listCategories } from '../actions/categoryActions';\r\nimport { createExpense, listExpenses } from '../actions/expenseActions';\r\nimport { listSubcategories } from '../actions/subcategoriesActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SubForm from '../components/SubForm';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function ExpenseCreateScreen(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [description, setDescription] = useState('');\r\n    const [value, setValue] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [subcategory, setSubcategory] = useState('');\r\n    const [today, setToday] = useState('');\r\n\r\n    const [submit, setSubmit] = useState(false);\r\n    const [showNewCategory, setShowNewCateogry] = useState(false);\r\n    const [showNewSubcategory, setShowNewSubcategory] = useState(false);\r\n    const [state, setState] = useState({ right: true});\r\n\r\n    const categoriesList = useSelector(state => state.categoriesList);\r\n    const { loading, error, categories } = categoriesList;\r\n\r\n    const expenseCreate = useSelector(state => state.expenseCreate);\r\n    const { expense, loading: loadingSuccess, error: errorCreate } = expenseCreate;\r\n\r\n    const subcategoriesList = useSelector(state => state.subcategoriesList);\r\n    const { subcategories, loading: loadingSubcategory, error: errorSubcategory } = subcategoriesList;\r\n\r\n    const toggleDrawer = (open) => {\r\n        props.history.push('/');\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handleClose = useCallback((open) => {\r\n        if(state.right)\r\n            props.history.push('/');\r\n            setState({ ...state, right: open });\r\n    },[setState, state, props]);\r\n\r\n    const loadCategories = useCallback(() => {\r\n        if (!categories) {\r\n            dispatch(listCategories());\r\n        } else {\r\n            if (categories.length > 0) {\r\n                setCategory(categories[0].value);\r\n            }\r\n        }\r\n    },[categories, dispatch]);\r\n\r\n    const handlerCategory = (e) => {\r\n        setCategory(e);\r\n    }\r\n\r\n    const handlerSubmit = (e) => {\r\n        e.preventDefault();\r\n        const objExpense = {\r\n            description: description,\r\n            value: value,\r\n            date: date,\r\n            categoryCategoryId: category,\r\n            subcategorySubcategoryId: subcategory\r\n        }\r\n        console.log(subcategory);\r\n        setSubmit(true);\r\n        dispatch(createExpense(objExpense));\r\n    }\r\n\r\n    const getDate = () => {\r\n        let newDate = new Date()\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n\r\n        date = date < 10 ? `0${date}` : `${date}`;\r\n        month = month < 10 ? `0${month}` : `${month}`;\r\n\r\n        let today = `${year}-${month}-${date}`;\r\n        setToday(today);\r\n        setDate(today);\r\n    }\r\n\r\n    const handletDate = (e) => {\r\n        setToday(e);\r\n        setDate(e);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (category) {\r\n            dispatch(listSubcategories(category));\r\n        }\r\n    }, [category, dispatch]);\r\n\r\n    useEffect(()=>{\r\n        if (subcategories)\r\n            if(subcategories.length > 0)\r\n                setSubcategory(subcategories[0].value);\r\n    }, [subcategories]);\r\n\r\n    useEffect(()=>{\r\n        getDate();\r\n        loadCategories();\r\n    }, [loadCategories]);\r\n\r\n    useEffect(()=>{\r\n        if (expense && submit) {\r\n            let month = [today.split('-')[1]];\r\n            dispatch(listExpenses( month, []));\r\n            handleClose(false);\r\n        }\r\n    },[expense, dispatch, submit, today, handleClose]);\r\n\r\n  return (\r\n        <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n            <div className=\"drawer-header\">\r\n                <Link to=\"/\">\r\n                    <ArrowBackIcon className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n                </Link>\r\n            </div>\r\n            <div className=\"drawer-body\">\r\n                <form className=\"form-modal\" onSubmit={handlerSubmit}>\r\n                        {errorCreate && <MessageBox variant=\"danger\">{errorCreate}</MessageBox>}\r\n                        <div className=\"form-title\">\r\n                        <div>Registrar gasto</div>\r\n                        <Divider />\r\n                        </div>\r\n\r\n                        <div>\r\n                            {\r\n                            loading ? <LoadingBox></LoadingBox>\r\n                            :\r\n                            error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                            :(\r\n                            <div>\r\n                                <Select\r\n                                className=\"select\"\r\n                                placeholder=\"Categorias\"\r\n                                onChange={e => handlerCategory(e.value)}\r\n                                defaultValue={categories[0]}\r\n                                options={categories} />\r\n                                <AddIcon\r\n                                    onClick={() => setShowNewCateogry(!showNewCategory)}\r\n                                    className=\"fas fa-plus-circle\"\r\n                                />\r\n                                { showNewCategory && <SubForm showNew={setShowNewCateogry} type={'category'} /> }\r\n                            </div>\r\n                            )}\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                                loadingSubcategory ? <div\r\n                                                        className=\"new-category\"\r\n                                                        onClick={() => setShowNewCateogry(!showNewCategory)}\r\n                                                    ></div>\r\n                                :\r\n                                errorSubcategory ? <MessageBox variant=\"danger\">{errorSubcategory}</MessageBox>\r\n                                :(\r\n                                <div>\r\n                                    <Select\r\n                                        className=\"select\"\r\n                                        placeholder=\"Subcategorias\"\r\n                                        onChange={e => setSubcategory(e.value)}\r\n                                        defaultValue={subcategories[0]}\r\n                                        options={subcategories}\r\n                                    />\r\n                                    <AddIcon \r\n                                        onClick={() => setShowNewSubcategory(!showNewSubcategory)}\r\n                                        className=\"fas fa-plus-circle\"\r\n                                    />  \r\n                                    { showNewSubcategory && <SubForm showNew={setShowNewSubcategory} type={'subcategory'} categoryId={category} /> }\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div>\r\n                            <input \r\n                                type=\"number\"\r\n                                onChange={e => setValue(e.target.value)}\r\n                                placeholder=\"Valor\">\r\n                            </input>\r\n                        </div>\r\n                        <div>\r\n                            <input \r\n                                type=\"text\"\r\n                                onChange={e => setDescription(e.target.value)}\r\n                                placeholder=\"Descripcion\">\r\n                            </input>\r\n                        </div>\r\n                        <div>\r\n                            <input\r\n                                value={today} \r\n                                type=\"date\"\r\n                                onChange={e => handletDate(e.target.value)}\r\n                                placeholder=\"Fecha\">\r\n                            </input>\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                                loadingSuccess ? <LoadingBox />\r\n                                :(\r\n                                    <button className=\"btn secundary\" type=\"submit\">Crear</button>\r\n                                )\r\n                            }\r\n                        </div>\r\n                </form>\r\n            </div>\r\n        </Drawer>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Select from 'react-select';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport LoadingBox from '../components/utils/LoadingBox';\r\nimport { createAlert, listAlerts, listTypeAlerts, updateAlertActive } from '../actions/alertActions';\r\n\r\nexport default function AlertCreateScreen(props) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { editAlert, edit, state, setState } = props;\r\n  const [days, setDays] = useState([]);\r\n  const [selectDay, setSelectDay] = useState('');\r\n  const [selectType, setSelectType] = useState('');\r\n  const [day, setDay] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [submit, setSubmit] = useState(false);\r\n\r\n  const alertCreate = useSelector(state => state.alertCreate);\r\n  const { alert } = alertCreate;\r\n\r\n  const alertActiveUpdate = useSelector(state => state.alertActiveUpdate);\r\n  const { alert: alertSuccess } = alertActiveUpdate;\r\n\r\n  const alertTypeList = useSelector(state => state.alertTypeList);\r\n  const { typeAlerts, loading: loadingTypes } = alertTypeList;\r\n\r\n    const toggleDrawer = (open) => {\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handleClose = useCallback((open) => {\r\n        if(state.right)\r\n            setState({ ...state, right: open });\r\n    },[setState, state]);\r\n\r\n  const handleSubmit = (e) => { \r\n        e.preventDefault();\r\n        setSubmit(true);\r\n        if (edit) {\r\n            dispatch(updateAlertActive({\r\n                date: day,\r\n                alert: title,\r\n                message,\r\n                id:editAlert.id,\r\n                active:editAlert.active\r\n            }));\r\n        } else {\r\n            dispatch(createAlert({date: day, alert: title, message}));\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (days.length < 1) {\r\n            let days = [];\r\n            [...Array(31).keys()].map(item => days.push({value: item + 1, label: item + 1}));\r\n            setDays(days);\r\n        }\r\n    },[days]);\r\n\r\n    useEffect(()=>{\r\n        dispatch(listTypeAlerts());\r\n    }, [dispatch])\r\n\r\n    useEffect(()=>{\r\n        if ((alert && submit) || (alertSuccess && submit)){\r\n            handleClose(false);\r\n            dispatch(listAlerts());\r\n        }\r\n    },[alert, submit, dispatch, alertSuccess, handleClose]);\r\n\r\n    useEffect(()=>{\r\n        if (editAlert && edit) {\r\n            const type = typeAlerts.filter(type => type.label === editAlert.priority)\r\n            setTitle(editAlert.alert);\r\n            setMessage(editAlert.message);\r\n            setSelectDay({label: editAlert.date, value:editAlert.date});\r\n            setSelectType(type);\r\n            setDay(editAlert.date); \r\n        } else {\r\n            setTitle('');\r\n            setMessage('');\r\n            setSelectDay({ label: 1, value: 1 }); \r\n            setDay(1); \r\n            setSelectType({});\r\n        }\r\n    },[editAlert, edit, typeAlerts]);\r\n\r\n  return (\r\n\r\n    <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n        <div className=\"drawer-header\">\r\n            <ArrowBackIcon id=\"close\" className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n        </div>\r\n        <div className=\"drawer-body\">\r\n        <form className=\"form-modal\" onSubmit={handleSubmit}>\r\n                <div className=\"form-title\">\r\n                    <div>Registar Alerta</div>\r\n                    <Divider />\r\n                </div>\r\n                <div>\r\n                <label>Prioridad</label>\r\n                {\r\n                    loadingTypes ? <LoadingBox />\r\n                    :\r\n                    (\r\n                    <Select\r\n                        placeholder=\"Prioridad de la alerta\"\r\n                        onChange={e => setTitle(e.value)}\r\n                        defaultValue={selectType}\r\n                        options={typeAlerts}\r\n                    />\r\n                    )\r\n                }\r\n\r\n            </div>\r\n            <div>\r\n                <label>Descripcíon alerta</label>\r\n                <textarea\r\n                    type=\"text\"\r\n                    value={message}\r\n                    onChange={e => setMessage(e.target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label>Día de envío</label>\r\n                <Select\r\n                    placeholder=\"Dia\"\r\n                    onChange={e => setDay(e.value)}\r\n                    defaultValue={selectDay}\r\n                    options={days}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button onClick={() => toggleDrawer(false)} className=\"btn secundary\" type=\"submit\">{edit ? 'Actualizar' : 'Crear'}</button>\r\n            </div>\r\n\r\n        </form>\r\n        </div>\r\n    </Drawer>\r\n  );\r\n}\r\n","import { Avatar } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst initialActivities = [\r\n    {\r\n        id: \"1\",\r\n        color: \"red\",\r\n        activity: 'Ver maricadas'\r\n    },\r\n    {\r\n        id: \"2\",\r\n        color: \"blue\",\r\n        activity: 'Corregir trabajo'\r\n    },\r\n    {\r\n        id: \"3\",\r\n        color: \"green\",\r\n        activity: 'Salir temprano'\r\n    }\r\n]\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result  = [...list];\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n    return result;\r\n}\r\nexport default function ActivityScreen() {\r\n\r\n    const [activities, setActivities] = useState(initialActivities);\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={(result) => {\r\n            const { source, destination } = result;\r\n            if (!destination) return;\r\n            if(source.index === destination.index) return;\r\n            setActivities(prevActivities => reorder(prevActivities, source.index, destination.index));\r\n        }}>\r\n            <div className=\"dragger-title\">Actividades</div>\r\n            <Droppable droppableId=\"activities\">\r\n                {(droppableProvided) => (\r\n                    <div \r\n                        {...droppableProvided.droppableProps}\r\n                        ref={droppableProvided.innerRef}\r\n                    >\r\n                        {activities.map((item, index) => (\r\n                                <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                                    {(draggableProvided) => (\r\n                                        <div className=\"dragger-container\"\r\n                                            {...draggableProvided.draggableProps}\r\n                                            ref={draggableProvided.innerRef}\r\n                                            {...draggableProvided.dragHandleProps}\r\n                                        >\r\n                                            <Avatar className={`avatar-dragger-${item.color}`}>\r\n                                                {item.activity.charAt(0)}\r\n                                            </Avatar>\r\n\r\n                                            <div>\r\n                                                {item.activity}\r\n                                            </div>\r\n                                            \r\n                                            <div>\r\n                                                <DeleteIcon />\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                                </Draggable>\r\n                                \r\n                        ))}\r\n                        {droppableProvided.placeholder}\r\n                    </div>\r\n                )}\r\n\r\n            </Droppable>\r\n        </DragDropContext>\r\n    )\r\n}\r\n","import {BrowserRouter, Route, Switch, useLocation } from 'react-router-dom';\nimport Sidebar from './components/common/Sidebar';\nimport FloatButton from './components/FloatButton';\nimport AlertScreen from './screens/AlertScreen';\nimport ChartScreen from './screens/ChartScreen';\nimport ExpenseScreen from './screens/ExpenseScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport ProfileScreen from './screens/ProfileScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ExpenseCreateScreen from './screens/ExpenseCreateScreen';\nimport AlertCreateScreen from './screens/AlertCreateScreen';\nimport ActivityScreen from './screens/ActivityScreen';\n\nfunction App() {\n\n  return (\n    <BrowserRouter>\n        <Sidebar></Sidebar>\n        <Switch>\n          <Route path=\"*\">\n            <RouteGroup />\n          </Route>\n        </Switch>\n        <FloatButton />\n    </BrowserRouter>\n  );\n}\n\nfunction RouteGroup() {\n\n  let location = useLocation();\n\n  return (\n    <TransitionGroup>\n      <CSSTransition\n        key={location.key}\n        classNames=\"fade\"\n        timeout={300}\n      >\n        <Switch location={location}>\n          <Route path=\"/\" component={HomeScreen} exact></Route>\n          <Route path=\"/login\" component={LoginScreen}></Route>\n          <Route path=\"/register\" component={RegisterScreen}></Route>\n          <Route path=\"/alert\" component={AlertScreen}></Route>\n          <Route path=\"/profile\" component={ProfileScreen}></Route>\n          <Route path=\"/chart\" component={ChartScreen}></Route>\n          <Route path=\"/expenses/:id\" component={ExpenseScreen}></Route>\n          <Route path=\"/create\" component={ExpenseCreateScreen}></Route>\n          <Route path=\"/create-alert\" component={AlertCreateScreen}></Route>\n          <Route path=\"/activity\" component={ActivityScreen}></Route>\n        </Switch>\n      </CSSTransition>\n    </TransitionGroup>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, createStore, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createAlertReducer, listAlertsReducer, listTypeAlertsReducer, updateAlertReducer, deleteAlertReducer } from './reducers/alertReducers';\r\nimport { createCategoryReducers, listCategoriesReducer } from './reducers/categoryReducers';\r\nimport { createExpenseReducer, listExpenseReducer, listExpensesReducer } from './reducers/expenseReducers';\r\nimport { createSubcategoryReducer, listSubcategoriesReducer } from './reducers/subcategoryReducers';\r\nimport { registerReducer, signinReducer, suscribeUserReducer } from './reducers/userReducer';\r\nimport { getMonthsReducer } from './reducers/utilsReducers';\r\n\r\nconst initialState = {\r\n    userSignin:{\r\n        userInfo: localStorage.getItem('userInfo')\r\n        ? JSON.parse(localStorage.getItem('userInfo'))\r\n        : null\r\n    }\r\n};\r\n\r\nconst reducer = combineReducers({\r\n    userSignin: signinReducer,\r\n    register: registerReducer,\r\n    userSuscribe: suscribeUserReducer,\r\n\r\n    expList: listExpenseReducer,\r\n    expenseList: listExpensesReducer,\r\n    expenseCreate: createExpenseReducer,\r\n\r\n    categoryCreate: createCategoryReducers,\r\n    categoriesList: listCategoriesReducer,\r\n\r\n    subcategoriesList: listSubcategoriesReducer,\r\n    subcategoryCreate: createSubcategoryReducer,\r\n    \r\n    alertList: listAlertsReducer,\r\n    alertActiveUpdate: updateAlertReducer,\r\n    alertCreate: createAlertReducer,\r\n    alertTypeList: listTypeAlertsReducer,\r\n    alertDelete: deleteAlertReducer,\r\n\r\n    monthsGet: getMonthsReducer\r\n});\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeEnhancer(applyMiddleware(thunk))\r\n)\r\n\r\nexport default store;","import { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGIN_FAIL, USER_SIGIN_REQUEST, USER_SIGIN_SUCCESS, USER_SUSCRIBE_FAIL, USER_SUSCRIBE_REQUEST, USER_SUSCRIBE_SUCCESS } from \"../constants/userConstants\";\r\n\r\nexport const signinReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case USER_SIGIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_SIGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload, success:true };\r\n        case USER_SIGIN_FAIL:\r\n            return { loading: false, error: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const registerReducer = (state = { loading:true }, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true };\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, user: action.payload };\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const suscribeUserReducer = (state = { loading: true }, action) => {\r\n    switch (action.type){\r\n        case USER_SUSCRIBE_REQUEST:\r\n            return {loading: true };\r\n        case USER_SUSCRIBE_SUCCESS:\r\n            return { loading: false, suscribe: action.payload };\r\n        case USER_SUSCRIBE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { EXPENSE_CREATE_FAIL, EXPENSE_CREATE_REQUEST, EXPENSE_CREATE_SUCCESS, EXPENSE_LIST_FAIL, EXPENSE_LIST_REQUEST, EXPENSE_LIST_SUCCESS, EXP_LIST_FAIL, EXP_LIST_REQUEST, EXP_LIST_SUCCESS } from \"../constants/expenseConstants\";\r\n\r\nexport const listExpensesReducer = (state = { loading: true }, action) =>{\r\n    switch (action.type) {\r\n        case EXPENSE_LIST_REQUEST:\r\n            return { loading: true };\r\n        case EXPENSE_LIST_SUCCESS:\r\n            return { loading: false, expenses: action.payload };\r\n        case EXPENSE_LIST_FAIL:\r\n            return { loading:false, error: action.payload };\r\n           \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const listExpenseReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case EXP_LIST_REQUEST:\r\n            return { loading: true };\r\n        case EXP_LIST_SUCCESS:\r\n            return { loading: false, expense: action.payload };\r\n        case EXP_LIST_FAIL:\r\n            return { loading:false, error: action.payload };\r\n           \r\n        default:\r\n            return state;\r\n    } \r\n}\r\n\r\nexport const createExpenseReducer = (state = { loading: false }, action) => {\r\n    switch (action.type) {\r\n        case EXPENSE_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case EXPENSE_CREATE_SUCCESS:\r\n            return { loading: false, expense: action.payload };\r\n        case EXPENSE_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { CATEGORY_CREATE_FAIL, CATEGORY_CREATE_REQUEST, CATEGORY_CREATE_SUCCESS, CATEGORY_LIST_FAIL, CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS } from \"../constants/categoryConstants\";\r\n\r\nexport const createCategoryReducers = (state = {loading: true }, action) => {\r\n    switch (action.type) {\r\n        case CATEGORY_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case CATEGORY_CREATE_SUCCESS:\r\n            return { loading: false, category: action.payload };\r\n        case CATEGORY_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const listCategoriesReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case CATEGORY_LIST_REQUEST:\r\n            return { loading: true };\r\n        case CATEGORY_LIST_SUCCESS:\r\n            return { loading:false, categories: action.payload };\r\n        case CATEGORY_LIST_FAIL:\r\n            return { loading:false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { SUBCATEGORY_CREATE_FAIL, SUBCATEGORY_CREATE_REQUEST, SUBCATEGORY_CREATE_SUCCESS, SUBCATEGORY_LIST_FAIL, SUBCATEGORY_LIST_REQUEST, SUBCATEGORY_LIST_SUCCESS } from \"../constants/subcategoriesConstants\";\r\n\r\nexport const listSubcategoriesReducer = (state = { loading: true }, action) =>{\r\n    switch (action.type) {\r\n        case SUBCATEGORY_LIST_REQUEST:\r\n            return { loading: true };\r\n        case SUBCATEGORY_LIST_SUCCESS:\r\n            return { loading: false, subcategories: action.payload };\r\n        case SUBCATEGORY_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const createSubcategoryReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case SUBCATEGORY_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case SUBCATEGORY_CREATE_SUCCESS:\r\n            return { loading: false, subcategory: action.payload };\r\n        case SUBCATEGORY_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { ALERT_CREATE_FAIL, ALERT_CREATE_REQUEST, ALERT_CREATE_SUCCESS, ALERT_DELETE_FAIL, ALERT_DELETE_REQUEST, ALERT_DELETE_SUCCESS, ALERT_LIST_FAIL, ALERT_LIST_REQUEST, ALERT_LIST_SUCCESS, ALERT_UPDATE_FAIL, ALERT_UPDATE_REQUEST, ALERT_UPDATE_SUCCESS, TYPE_ALERT_LIST_FAIL, TYPE_ALERT_LIST_REQUEST, TYPE_ALERT_LIST_SUCCESS } from \"../constants/alertConstants\";\r\n\r\nexport const listAlertsReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ALERT_LIST_REQUEST:\r\n            return { loading: true }\r\n        case ALERT_LIST_SUCCESS:\r\n            return { loading: false, alerts: action.payload };\r\n        case ALERT_LIST_FAIL:\r\n            return { loading: false };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const updateAlertReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ALERT_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case ALERT_UPDATE_SUCCESS:\r\n            return { loading: false, alert: action.payload };\r\n        case ALERT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n} \r\n\r\nexport const createAlertReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ALERT_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case ALERT_CREATE_SUCCESS:\r\n            return { loading: false, alert: action.payload };\r\n        case ALERT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const listTypeAlertsReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case TYPE_ALERT_LIST_REQUEST:\r\n            return { loading: true };\r\n        case TYPE_ALERT_LIST_SUCCESS:\r\n            return { loading: false, typeAlerts: action.payload };\r\n        case TYPE_ALERT_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const deleteAlertReducer = ( state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ALERT_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case ALERT_DELETE_SUCCESS:\r\n            return { loading: false, success: action.payload };\r\n        case ALERT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_MONTHS_FAIL, GET_MONTHS_REQUEST, GET_MONTHS_SUCCESS } from \"../constants/utilsConstants\";\r\n\r\nexport const getMonthsReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case GET_MONTHS_REQUEST:\r\n            return { loading: true };\r\n        case GET_MONTHS_SUCCESS:\r\n            return { loading: false, months: action.payload };\r\n        case GET_MONTHS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\nimport { subscribeUser } from \"./actions/userActions\";\nimport store from './store';\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nconst PUBLIC_VAPID_KEY = \"BDDk3ILb3FjIjAvTs9PWMoObhChnrBUYwHAsdplom7fePD36G6ZFJumGgSe6C4M3pOpYvFb38XX2wJRIN4B6V_0\";\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n            serviceSubscribeUser(registration);\n          }\n        };\n      };\n\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction serviceSubscribeUser(registration) {\n\n  var serviceWorker;\n\n  if (registration.installing) {\n      serviceWorker = registration.installing;\n  } else if (registration.waiting) {\n      serviceWorker = registration.waiting;\n  } else if (registration.active) {\n      serviceWorker = registration.active;\n  }\n\n  if (serviceWorker) {\n    if (serviceWorker.state === \"activated\") {\n        console.log(\"sw already activated - Do watever needed here\");\n    }\n    serviceWorker.addEventListener(\"statechange\", function(e) {\n      \n        if (e.target.state ===\"activated\") {\n\n          registration.pushManager.subscribe({\n            userVisibleOnly: true,\n            applicationServerKey: PUBLIC_VAPID_KEY\n          })\n          .then((suscription) => {\n            store.dispatch(subscribeUser(suscription));\n          });\n        }\n    });\n  }\n  return <div></div>\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}