{"version":3,"sources":["constants/userConstants.js","components/Drawers/DrawerNotification.js","components/common/Sidebar.js","actions/userActions.js","constants/alertConstants.js","actions/alertActions.js","components/MessageBox.js","components/utils/LoadingBox.js","components/Drawers/DrawerAlert.js","components/FloatButton.js","screens/Alert/AlertScreen.js","constants/expenseConstants.js","actions/expenseActions.js","screens/ChartScreen.js","constants/utilsConstants.js","actions/utilsActions.js","screens/Expense/ExpenseScreen.js","components/SelectDate.js","components/ExpenseDetails.js","components/Accordion/CategoryDetails.js","components/Accordion/SubcategoryDetails.js","screens/HomeScreen.js","screens/User/LoginScreen.js","screens/User/ProfileScreen.js","screens/User/RegisterScreen.js","constants/categoryConstants.js","actions/categoryActions.js","constants/subcategoriesConstants.js","actions/subcategoriesActions.js","components/SubForm.js","screens/Expense/ExpenseCreateScreen.js","screens/Alert/AlertCreateScreen.js","constants/activityConstants.js","screens/Activity/ActivityScreen.js","actions/activityActions.js","screens/Activity/ActivityCreateScreen.js","constants/entryConstants.js","actions/entryActions.js","screens/Entry/EntryScreen.js","screens/Entry/EntryCreateScreen.js","App.js","reportWebVitals.js","store.js","reducers/userReducer.js","reducers/expenseReducers.js","reducers/categoryReducers.js","reducers/subcategoryReducers.js","reducers/alertReducers.js","reducers/utilsReducers.js","reducers/activityReducers.js","reducers/entryReducer.js","serviceWorkerRegistration.js","index.js"],"names":["USER_SIGIN_REQUEST","USER_SIGIN_SUCCESS","USER_SIGIN_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_SUSCRIBE_REQUEST","USER_SUSCRIBE_SUCCESS","USER_SUSCRIBE_FAIL","DrawerNotification","props","state","setState","useSelector","setNotification","notification","useState","title","priority","message","notifications","toggleDrawer","open","item","right","Drawer","anchor","onClose","className","id","onClick","map","Avatar","body","useStyles","makeStyles","theme","menuButton","marginRight","spacing","menuContent","position","menuItems","cursor","hide","display","drawer","width","flexShrink","drawerPaper","drawerHeader","alignItems","justifyContent","height","contentHeader","color","background","backgroundSize","button","icon","accountContent","margin","textAlign","accountIcon","fontSize","iconsSidebar","iconsMenu","list","Sidebar","dispatch","useDispatch","classes","useTheme","React","setOpen","anchorEl","setAnchorEl","userInfo","userSignin","handleDrawerClose","handlerSignout","a","localStorage","removeItem","type","window","location","reload","handleClose","option","root","CssBaseline","AppBar","Toolbar","IconButton","edge","clsx","Typography","to","Badge","badgeContent","event","currentTarget","keepMounted","Boolean","MenuItem","paper","direction","List","username","ListItem","ListItemIcon","ListItemText","primary","Divider","ALERT_LIST_REQUEST","ALERT_LIST_SUCCESS","ALERT_LIST_FAIL","ALERT_UPDATE_REQUEST","ALERT_UPDATE_SUCCESS","ALERT_UPDATE_FAIL","ALERT_CREATE_REQUEST","ALERT_CREATE_SUCCESS","ALERT_CREATE_FAIL","ALERT_DELETE_REQUEST","ALERT_DELETE_SUCCESS","ALERT_DELETE_FAIL","TYPE_ALERT_LIST_REQUEST","TYPE_ALERT_LIST_SUCCESS","TYPE_ALERT_LIST_FAIL","listAlerts","getState","axios","get","data","payload","response","name","updateAlertActive","alert","put","createAlert","post","userId","listTypeAlerts","MessageBox","variant","children","LoadingBox","DrawerAlert","editAlert","edit","days","setDays","selectDay","setSelectDay","selectType","setSelectType","day","setDay","setTitle","setMessage","submit","setSubmit","alertCreate","alertSuccess","alertActiveUpdate","alertTypeList","typeAlerts","loadingTypes","loading","useCallback","useEffect","length","Array","keys","push","value","label","filter","date","onSubmit","e","preventDefault","active","placeholder","onChange","defaultValue","options","target","FloatButton","url","setUrl","pathname","AlertScreen","rows","setRows","send","setSend","setEditAlert","setEdit","submitDelete","setSubmitDelete","alertList","error","alerts","success","alertDelete","handleDelete","alertId","Swal","fire","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","delete","deleted","deleteAlert","typesalert","typeAlert","checked","handleActive","EXPENSE_LIST_REQUEST","EXPENSE_LIST_SUCCESS","EXPENSE_LIST_FAIL","EXP_LIST_REQUEST","EXP_LIST_SUCCESS","EXP_LIST_FAIL","EXPENSE_CREATE_REQUEST","EXPENSE_CREATE_SUCCESS","EXPENSE_CREATE_FAIL","EXPENSE_DELETE_REQUEST","EXPENSE_DELETE_SUCCESS","EXPENSE_DELETE_FAIL","listExpenses","months","headers","Authorization","token","ChartScreen","labels","setLabels","setData","expenses","expenseList","category","datasets","backgroundColor","borderColor","borderWidth","maintainAspectRatio","GET_MONTHS_REQUEST","GET_MONTHS_SUCCESS","GET_MONTHS_FAIL","SET_NOTIFICATIONS_REQUEST","SET_NOTIFICATIONS_SUCCESS","SET_NOTIFICATIONS_FAIL","SET_FILTERS_REQUEST","SET_FILTERS_SUCCESS","SET_FILTERS_FAIL","getMonths","ExpenseScreen","expenseId","match","params","expList","expense","expenseDelete","monthsGet","deleteExp","deleteExpense","listExpense","history","subcategory","description","Intl","NumberFormat","format","month","split","convertDate","SelectDate","filters","filtersSet","monthSelect","setMonthSelect","agrupadores","setAgrupadores","groupesSelect","setSelectGroupes","handlerGrouper","items","groupers","setItem","JSON","stringify","setFilters","forEach","agrupador","m","isMulti","handlerMonth","ExpenseDetails","prop","slice","toUpperCase","substr","CategoryDetails","expensesProps","setExpenses","handleReorder","reduce","prev","head","categoryId","sub","headSub","subcategoryId","valueSub","exp","parseInt","console","log","sort","b","Accordion","AccordionSummary","AccordionDetails","SubcategoryDetails","HomeScreen","setSuccess","datatable","setDatatable","setMonth","setFilter","includes","columns","field","attributes","parse","getItem","Date","getMonth","getDate","c","hover","searchTop","paging","info","searchBottom","LoginScreen","useHistory","setUsername","password","setPassword","userData","ProfileScreen","RegisterScreen","confirmPassword","setConfirmPassword","email","setEmail","setError","CATEGORY_CREATE_REQUEST","CATEGORY_CREATE_SUCCESS","CATEGORY_CREATE_FAIL","CATEGORY_LIST_REQUEST","CATEGORY_LIST_SUCCESS","CATEGORY_LIST_FAIL","listCategories","SUBCATEGORY_LIST_REQUEST","SUBCATEGORY_LIST_SUCCESS","SUBCATEGORY_LIST_FAIL","SUBCATEGORY_CREATE_REQUEST","SUBCATEGORY_CREATE_SUCCESS","SUBCATEGORY_CREATE_FAIL","listSubcategories","SubForm","showNew","categoryCreate","subcategoryCreate","setname","submitCategory","setSubmitCategory","submitSubcategory","setSubmitSubcategory","maxLength","createCategory","createSubcategory","ExpenseCreateScreen","setDescription","setValue","setDate","setCategory","categorySelect","setCategorySelect","setSubcategory","today","setToday","showNewCategory","setShowNewCateogry","showNewSubcategory","setShowNewSubcategory","categoriesList","categories","expenseCreate","loadingSuccess","errorCreate","subcategoriesList","subcategories","loadingSubcategory","errorSubcategory","loadCategories","cat","newDate","year","getFullYear","objExpense","categoryCategoryId","subcategorySubcategoryId","userUserId","errors","Error","createExpense","handlerCategory","handletDate","AlertCreateScreen","ACTIVITY_CREATE_REQUEST","ACTIVITY_CREATE_SUCCESS","ACTIVITY_CREATE_FAIL","ACTIVITY_LIST_REQUEST","ACTIVITY_LIST_SUCCESS","ACTIVITY_LIST_FAIL","initialActivities","activity","ActivityScreen","activitiesList","activitiesLoad","activities","setActivities","onDragEnd","source","destination","index","prevActivities","startIndex","endIndex","splice","removed","reorder","droppableId","droppableProvided","droppableProps","ref","innerRef","draggableId","activityId","toString","draggableProvided","draggableProps","dragHandleProps","charAt","ActivityCreateScreen","setActivity","createActivity","ENTRY_CREATE_REQUEST","ENTRY_CREATE_SUCCESS","ENTRY_CREATE_FAIL","ENTRY_GET_REQUEST","ENTRY_GET_SUCCESS","ENTRY_GET_FAIL","listEntries","EntryScreen","entriesList","entries","number","entry","EntryCreateScreen","entryCreate","loadingCreate","actualMonth","setActualMonth","obj","createEntry","RouteGroup","useLocation","TransitionGroup","CSSTransition","classNames","timeout","path","component","exact","key","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","combineReducers","action","register","user","userSuscribe","suscribe","activityCreate","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","isLocalhost","hostname","PUBLIC_VAPID_KEY","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","waiting","addEventListener","pushManager","subscribe","userVisibleOnly","applicationServerKey","suscription","subscribeUser","serviceSubscribeUser","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","fetch","contentType","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.ba8aead7.chunk.js","sourcesContent":["export const USER_SIGIN_REQUEST = \"USER_SIGIN_REQUEST\";\r\nexport const USER_SIGIN_SUCCESS = \"USER_SIGIN_SUCCESS\";\r\nexport const USER_SIGIN_FAIL = \"USER_SIGIN_FAIL\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_SUSCRIBE_REQUEST = \"USER_SUSCRIBE_REQUEST\";\r\nexport const USER_SUSCRIBE_SUCCESS = \"USER_SUSCRIBE_SUCCESS\";\r\nexport const USER_SUSCRIBE_FAIL = \"USER_SUSCRIBE_FAIL\";\r\n\r\nexport const USER_SIGNOUT_FAIL = \"USER_SIGNOUT_FAIL\";\r\n\r\nexport const PUBLIC_VAPID_KEY = \"BDDk3ILb3FjIjAvTs9PWMoObhChnrBUYwHAsdplom7fePD36G6ZFJumGgSe6C4M3pOpYvFb38XX2wJRIN4B6V_0\";\r\n","import { Avatar, Drawer } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function DrawerNotification(props) {\r\n\r\n    const { state, setState } = props;\r\n\r\n    const setNotification = useSelector(state => state.setNotification);\r\n    const { notification } = setNotification;\r\n\r\n    const [notifications, setNotifications] = useState([\r\n        {\r\n            title: 'Pilas, parce',\r\n            priority: 'Alta',\r\n            message: 'Pagar el arriendo'\r\n        },\r\n        {\r\n            title: 'Ojo, papi..',\r\n            priority: 'Media',\r\n            message: 'Pagar el internet rapido'\r\n        }\r\n    ]);\r\n\r\n    const toggleDrawer = (open, item) => {\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    // useEffect(()=>{\r\n        // var notifications = [];\r\n        // if(notification){\r\n        //   notification.map(item => notifications.push({\r\n        //       title: item.title,\r\n        //       body: item.body,\r\n        //       watched: 1\r\n        //   }));\r\n        // }\r\n        // localStorage.setItem('notification', JSON.stringify(notifications));\r\n        // setNotifications(notification);\r\n    //   }, [notification, setNotification]);\r\n\r\n    return (\r\n        <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n            <div className=\"drawer-header\">\r\n              <ArrowBackIcon id=\"close\" className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n              <NotificationsIcon />\r\n            </div>\r\n            <div className=\"drawer-body\">\r\n                {\r\n                    notifications.map(item => (\r\n                        <div className=\"card-notifcation\" key={item.title}>\r\n                            <div>\r\n                                <Avatar>\r\n                                    R\r\n                                </Avatar>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div>{item.title}</div>\r\n                                <div>{item.body}</div>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </Drawer>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signout } from '../../actions/userActions';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChart';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport DrawerNotification from '../Drawers/DrawerNotification';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  menuContent: {\r\n    position: 'absolute',\r\n    right: '2%',\r\n  },\r\n  menuItems: {\r\n    marginRight: '1rem',\r\n    cursor: 'pointer'\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    height: '10vh'\r\n  },\r\n  contentHeader: {\r\n    color: 'white',\r\n    background: 'url(images/background/sidebar.jpg)',\r\n    backgroundSize: '100%'\r\n  },\r\n  button: {\r\n    color: 'white'\r\n  },\r\n  icon: {\r\n    color: '#080058'\r\n  },\r\n  accountContent: {\r\n    width: '5rem',\r\n    margin: '0.5rem',\r\n    textAlign: 'center',\r\n  },\r\n  accountIcon: {\r\n    fontSize: '4rem'\r\n  },\r\n  iconsSidebar: {\r\n    color: '#FFFFFF'\r\n  },\r\n  iconsMenu: {\r\n    color: '#000000'\r\n  },\r\n  list: {\r\n    color: '#000000'\r\n  }\r\n}));\r\n\r\nexport default function Sidebar() {\r\n\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [notifications, setNotifications] = React.useState(0);\r\n\r\n  const userSignin = useSelector(state => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n\r\n  const setNotification = useSelector(state => state.setNotification);\r\n  const { notification } = setNotification;\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handlerSignout = () => {\r\n    dispatch(signout());\r\n    window.location.reload();\r\n  }\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (option) => {\r\n\r\n    setAnchorEl(null);\r\n\r\n    switch (option) {\r\n      case 'logout':\r\n        handlerSignout();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const [state, setState] = React.useState({ right: false });\r\n\r\n  const toggleDrawer = (open) => {\r\n    setState({ ...state, right: open });\r\n  };\r\n\r\n  // useEffect(()=>{\r\n  //   var total = 0;\r\n  //   if(notification){\r\n  //     total = notification.map(function(item) {\r\n  //       var tl = 0;\r\n  //       if(!item.watched) tl++;\r\n  //       return tl;\r\n  //     });\r\n  //   }\r\n  //   setNotifications(total);\r\n  // }, [notification, setNotification]);\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        userInfo && (\r\n          <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n              position=\"relative\"\r\n            >\r\n              <Toolbar>\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"open drawer\"\r\n                  onClick={handleDrawerOpen}\r\n                  edge=\"start\"\r\n                  className={clsx(classes.menuButton, open && classes.hide)}\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n\r\n                <Typography className={classes.menuContent}>\r\n                  <Link className={classes.iconsSidebar} to=\"#\">\r\n                    <Badge className={classes.menuItems} onClick={() => toggleDrawer(true)} badgeContent={notifications} color=\"primary\">\r\n                      <NotificationsIcon />\r\n                    </Badge>\r\n                  </Link>\r\n                  <span to=\"/#\" onClick={handleClick} className={classes.iconsSidebar}>\r\n                    <PersonIcon />\r\n                    <ArrowDropDownIcon />\r\n                  </span>\r\n                  <Menu\r\n                    id=\"simple-menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={() => handleClose()}\r\n                  >\r\n                    <Link to=\"/profile\">\r\n                      <MenuItem onClick={() => handleClose()} className={classes.iconsMenu}>Perfil</MenuItem>\r\n                    </Link>\r\n                    <MenuItem onClick={() => handleClose('logout')}>Cerrar sesión</MenuItem>\r\n                  </Menu>\r\n                </Typography>\r\n              </Toolbar>\r\n            </AppBar>\r\n\r\n            <DrawerNotification\r\n              state={state}\r\n              setState={setState}\r\n            />\r\n\r\n            <Drawer\r\n              className={classes.drawer}\r\n              anchor=\"left\"\r\n              open={open}\r\n              onClose={handleDrawerClose}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n            >\r\n              <div className={classes.contentHeader}>\r\n                <div className={classes.drawerHeader}>\r\n                  <IconButton className={classes.button} onClick={handleDrawerClose}>\r\n                    {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                  </IconButton>\r\n                </div>\r\n\r\n\r\n                <List className={classes.accountContent}>\r\n                  <AccountCircleIcon className={classes.accountIcon} />\r\n                  {userInfo.username}\r\n                </List>\r\n              </div>\r\n\r\n              <List>\r\n\r\n                <Link className={classes.list} to=\"/\">\r\n                  <ListItem onClick={handleDrawerClose} button>\r\n                    <ListItemIcon><HomeIcon className={classes.icon} /></ListItemIcon>\r\n                    <ListItemText primary=\"Inicio\" />\r\n                  </ListItem>\r\n                </Link>\r\n\r\n                <Link className={classes.list} to=\"/chart\">\r\n                  <ListItem onClick={handleDrawerClose} button>\r\n                    <ListItemIcon><InsertChartIcon className={classes.icon} /></ListItemIcon>\r\n                    <ListItemText primary=\"Graficos\" />\r\n                  </ListItem>\r\n                </Link>\r\n\r\n                <Link className={classes.list} to=\"/alerts\">\r\n                  <ListItem onClick={handleDrawerClose} button>\r\n                    <ListItemIcon><NotificationsIcon className={classes.icon} /></ListItemIcon>\r\n                    <ListItemText primary=\"Alertas\" />\r\n                  </ListItem>\r\n                </Link>\r\n\r\n                <ListItem className={classes.list} onClick={handleDrawerClose} button>\r\n                  <ListItemIcon><AttachMoneyIcon className={classes.icon} /></ListItemIcon>\r\n                  <ListItemText primary=\"Ingresos\" />\r\n                </ListItem>\r\n\r\n                <Link className={classes.list} to=\"/entries\">\r\n                  <ListItem className={classes.list} onClick={handleDrawerClose} button>\r\n                    <ListItemIcon><UpdateIcon className={classes.icon} /></ListItemIcon>\r\n                    <ListItemText primary=\"Proximos gastos\" />\r\n                  </ListItem>\r\n                </Link>\r\n\r\n                <Link className={classes.list} to=\"/activities\">\r\n                  <ListItem className={classes.list} onClick={handleDrawerClose} button>\r\n                    <ListItemIcon><FormatListBulletedIcon className={classes.icon} /></ListItemIcon>\r\n                    <ListItemText primary=\"Pendientes\" />\r\n                  </ListItem>\r\n                </Link>\r\n\r\n              </List>\r\n              <Divider />\r\n            </Drawer>\r\n          </div>\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n        USER_REGISTER_FAIL,\r\n        USER_REGISTER_REQUEST,\r\n        USER_REGISTER_SUCCESS,\r\n        USER_SIGIN_FAIL,\r\n        USER_SIGIN_REQUEST,\r\n        USER_SIGIN_SUCCESS,\r\n        USER_SIGNOUT_FAIL,\r\n        USER_SUSCRIBE_FAIL,\r\n        USER_SUSCRIBE_REQUEST,\r\n        USER_SUSCRIBE_SUCCESS \r\n        } from \"../constants/userConstants\";\r\nimport axios from 'axios';\r\n\r\nexport const signin = (userData) => async (dispatch) => {\r\n    dispatch({ type: USER_SIGIN_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.post('/api/users/signin', userData);\r\n        dispatch({type: USER_SIGIN_SUCCESS, payload: data });\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_SIGIN_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });\r\n    }\r\n}\r\n\r\nexport const signout = () => async(dispatch) => {\r\n    localStorage.removeItem('userInfo');;\r\n    dispatch({ type: USER_SIGNOUT_FAIL });\r\n}\r\n\r\nexport const registerUser = (userData) => async(dispatch) => {\r\n    dispatch({ type:USER_REGISTER_REQUEST, payload: userData });\r\n    try {\r\n       const { data } = await axios.post('/api/users/register', userData);\r\n       dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n       dispatch({ type: USER_SIGIN_SUCCESS, payload: data });\r\n       localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });\r\n    }\r\n}\r\n\r\nexport const subscribeUser = (suscription) => async (dispatch, getState) => {\r\n    dispatch({ type: USER_SUSCRIBE_REQUEST });\r\n    try {\r\n        const { userSignin: { userInfo } } = getState();\r\n\r\n        const { data } = await axios.post('/api/users/suscription', {\r\n            suscription: suscription,\r\n            userId: userInfo ? userInfo.id  : 1\r\n        });\r\n        dispatch({ type: USER_SUSCRIBE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_SUSCRIBE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });\r\n    }\r\n}","export const ALERT_LIST_REQUEST = \"ALERT_LIST_REQUEST\";\r\nexport const ALERT_LIST_SUCCESS = \"ALERT_LIST_SUCCESS\";\r\nexport const ALERT_LIST_FAIL = \"ALERT_LIST_FAIL\";\r\n\r\nexport const ALERT_UPDATE_REQUEST = \"ALERT_UPDATE_REQUEST\";\r\nexport const ALERT_UPDATE_SUCCESS = \"ALERT_UPDATE_SUCCESS\";\r\nexport const ALERT_UPDATE_FAIL = \"ALERT_UPDATE_FAIL\";\r\n\r\nexport const ALERT_CREATE_REQUEST = \"ALERT_CREATE_REQUEST\";\r\nexport const ALERT_CREATE_SUCCESS = \"ALERT_CREATE_SUCCESS\";\r\nexport const ALERT_CREATE_FAIL = \"ALERT_CREATE_FAIL\";\r\n\r\nexport const ALERT_DELETE_REQUEST = \"ALERT_DELETE_REQUEST\";\r\nexport const ALERT_DELETE_SUCCESS = \"ALERT_DELETE_SUCCESS\";\r\nexport const ALERT_DELETE_FAIL = \"ALERT_DELETE_FAIL\";\r\n\r\nexport const TYPE_ALERT_LIST_REQUEST = \"TYPE_ALERT_LIST_REQUEST\";\r\nexport const TYPE_ALERT_LIST_SUCCESS = \"TYPE_ALERT_LIST_SUCCESS\";\r\nexport const TYPE_ALERT_LIST_FAIL = \"TYPE_ALERT_LIST_FAIL\";","import axios from \"axios\";\r\nimport { ALERT_CREATE_FAIL, ALERT_CREATE_REQUEST, ALERT_CREATE_SUCCESS, ALERT_DELETE_FAIL, ALERT_DELETE_REQUEST, ALERT_DELETE_SUCCESS, ALERT_LIST_FAIL, ALERT_LIST_REQUEST, ALERT_LIST_SUCCESS, ALERT_UPDATE_FAIL, ALERT_UPDATE_REQUEST, ALERT_UPDATE_SUCCESS, TYPE_ALERT_LIST_FAIL, TYPE_ALERT_LIST_REQUEST, TYPE_ALERT_LIST_SUCCESS } from '../constants/alertConstants';\r\n\r\nexport const listAlerts = () => async (dispatch, getState) => {\r\n    dispatch({ type: ALERT_LIST_REQUEST });\r\n    const {userSignin: { userInfo }} = getState(); \r\n    try {\r\n        const { data } = await axios.get(`/api/alerts/${userInfo.id}`);\r\n        dispatch({ type: ALERT_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALERT_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        }); \r\n    }\r\n}\r\n\r\nexport const updateAlertActive = (alert) => async (dispatch) => {\r\n    dispatch({ type: ALERT_UPDATE_REQUEST });\r\n    try {\r\n        const { data } = await axios.put(`/api/alerts`, alert);\r\n        dispatch({ type: ALERT_UPDATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALERT_UPDATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });    \r\n    }\r\n}\r\n\r\nexport const createAlert = (alert) => async (dispatch, getState) => {\r\n    dispatch({ type: ALERT_CREATE_REQUEST });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n        const { data } = await axios.post('/api/alerts', {\r\n            alert: alert,\r\n            userId: userInfo.id\r\n        });\r\n        dispatch({ type: ALERT_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALERT_CREATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        }); \r\n    }\r\n}\r\n\r\nexport const listTypeAlerts = () => async (dispatch) => {\r\n    dispatch({ type: TYPE_ALERT_LIST_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.post('/api/alerts/types');\r\n        dispatch({ type: TYPE_ALERT_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: TYPE_ALERT_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        }); \r\n    }\r\n}\r\n\r\nexport const deleteAlert = (alertId) => async (dispatch) => {\r\n    dispatch({ type: ALERT_DELETE_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.delete(`/api/alerts/${alertId}`);\r\n        dispatch({ type: ALERT_DELETE_SUCCESS, payload: data.deleted });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALERT_DELETE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.name\r\n        });   \r\n    }\r\n}\r\n","import React from 'react';\r\n// import Alert from '@material-ui/lab/Alert';\r\n\r\nexport default function MessageBox(props) {\r\n    return (\r\n        // <Alert severity=\"error\">Error</Alert>\r\n        <div className={`alert alert-${props.variant || 'info'}`}>\r\n            {props.children} \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function LoadingBox() {\r\n    return (\r\n        <div>\r\n            <div className='spinner'></div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Select from 'react-select';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport LoadingBox from '../utils/LoadingBox';\r\nimport { createAlert, listAlerts, listTypeAlerts, updateAlertActive } from '../../actions/alertActions';\r\n\r\nexport default function DrawerAlert(props) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { editAlert, edit, state, setState } = props;\r\n  const [days, setDays] = useState([]);\r\n  const [selectDay, setSelectDay] = useState('');\r\n  const [selectType, setSelectType] = useState('');\r\n  const [day, setDay] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [submit, setSubmit] = useState(false);\r\n\r\n  const alertCreate = useSelector(state => state.alertCreate);\r\n  const { alert } = alertCreate;\r\n\r\n  const alertActiveUpdate = useSelector(state => state.alertActiveUpdate);\r\n  const { alert: alertSuccess } = alertActiveUpdate;\r\n\r\n  const alertTypeList = useSelector(state => state.alertTypeList);\r\n  const { typeAlerts, loading: loadingTypes } = alertTypeList;\r\n\r\n    const toggleDrawer = (open) => {\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handleClose = useCallback((open) => {\r\n        if(state.right)\r\n            setState({ ...state, right: open });\r\n    },[setState, state]);\r\n\r\n  const handleSubmit = (e) => { \r\n        e.preventDefault();\r\n        setSubmit(true);\r\n        if (edit) {\r\n            dispatch(updateAlertActive({\r\n                date: day,\r\n                alert: title,\r\n                message,\r\n                id:editAlert.id,\r\n                active:editAlert.active\r\n            }));\r\n        } else {\r\n            dispatch(createAlert({date: day, alert: title, message}));\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (days.length < 1) {\r\n            let days = [];\r\n            [...Array(31).keys()].map(item => days.push({value: item + 1, label: item + 1}));\r\n            setDays(days);\r\n        }\r\n    },[days]);\r\n\r\n    useEffect(()=>{\r\n        dispatch(listTypeAlerts());\r\n    }, [dispatch])\r\n\r\n    useEffect(()=>{\r\n        if ((alert && submit) || (alertSuccess && submit)){\r\n            handleClose(false);\r\n            dispatch(listAlerts());\r\n        }\r\n    },[alert, submit, dispatch, alertSuccess, handleClose]);\r\n\r\n    useEffect(()=>{\r\n        if (editAlert && edit) {\r\n            const type = typeAlerts.filter(type => type.label === editAlert.priority)\r\n            setTitle(editAlert.alert);\r\n            setMessage(editAlert.message);\r\n            setSelectDay({label: editAlert.date, value:editAlert.date});\r\n            setSelectType(type);\r\n            setDay(editAlert.date); \r\n        } else {\r\n            setTitle('');\r\n            setMessage('');\r\n            setSelectDay({ label: 1, value: 1 }); \r\n            setDay(1); \r\n            setSelectType({});\r\n        }\r\n    },[editAlert, edit, typeAlerts]);\r\n\r\n  return (\r\n\r\n    <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n        <div className=\"drawer-header\">\r\n            <ArrowBackIcon id=\"close\" className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n        </div>\r\n        <div className=\"drawer-body\">\r\n        <form className=\"form-modal\" onSubmit={handleSubmit}>\r\n                <div className=\"form-title\">\r\n                    <div>Registar Alerta</div>\r\n                    <Divider />\r\n                </div>\r\n                <div>\r\n                <label>Prioridad</label>\r\n                {\r\n                    loadingTypes ? <LoadingBox />\r\n                    :\r\n                    (\r\n                    <Select\r\n                        placeholder=\"Prioridad de la alerta\"\r\n                        onChange={e => setTitle(e.value)}\r\n                        defaultValue={selectType}\r\n                        options={typeAlerts}\r\n                    />\r\n                    )\r\n                }\r\n\r\n            </div>\r\n            <div>\r\n                <label>Descripcíon alerta</label>\r\n                <textarea\r\n                    type=\"text\"\r\n                    value={message}\r\n                    onChange={e => setMessage(e.target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label>Día de envío</label>\r\n                <Select\r\n                    placeholder=\"Dia\"\r\n                    onChange={e => setDay(e.value)}\r\n                    defaultValue={selectDay}\r\n                    options={days}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button onClick={() => toggleDrawer(false)} className=\"btn secundary\" type=\"submit\">{edit ? 'Actualizar' : 'Crear'}</button>\r\n            </div>\r\n\r\n        </form>\r\n        </div>\r\n    </Drawer>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function FloatButton(props) {\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const [url, setUrl] = useState('');\r\n\r\n    useEffect(() => {\r\n        const path = props.props.location.pathname;\r\n        switch (path) {\r\n            case '/':\r\n                setUrl('/expenses-create');\r\n                break;\r\n            case '/activities':\r\n                setUrl('/activities-create');\r\n                break;\r\n            case '/alerts':\r\n                setUrl('/alerts-create');\r\n                break;\r\n            case '/entries':\r\n                setUrl('/entries-create');\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }, [props]);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                userInfo &&\r\n                (\r\n                    <Link to={url}>\r\n                        <div className=\"floating-button\">\r\n                            <button className=\"btoncito\">\r\n                                <AddIcon />\r\n                            </button>\r\n                        </div>\r\n                    </Link>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteAlert, listAlerts, updateAlertActive } from '../../actions/alertActions';\r\nimport MessageBox from '../../components/MessageBox';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport DrawerAlert from '../../components/Drawers/DrawerAlert';\r\nimport Swal from 'sweetalert2'\r\nimport FloatButton from '../../components/FloatButton';\r\n\r\nexport default function AlertScreen(props) {\r\n    const dispatch = useDispatch();\r\n    const [rows, setRows] = useState([]);\r\n    const [send, setSend] = useState(false);\r\n    const [editAlert, setEditAlert] = useState();\r\n    const [edit, setEdit] = useState(false);\r\n    const [submitDelete, setSubmitDelete] = useState(false);\r\n\r\n    const alertList = useSelector(state => state.alertList);\r\n    const { error, loading, alerts } = alertList;\r\n\r\n    const alertActiveUpdate = useSelector(state => state.alertActiveUpdate);\r\n    const { alert } = alertActiveUpdate;\r\n\r\n    const alertDelete = useSelector(state => state.alertDelete);\r\n    const { success } = alertDelete;\r\n\r\n    const [state, setState] = React.useState({ right: false });\r\n\r\n    const handleActive = (e, item) => {\r\n        dispatch(updateAlertActive({...item, active: e.target.checked}));\r\n        setSend(true);\r\n    }\r\n\r\n    const toggleDrawer = (open, item) => {\r\n\r\n        if(item){\r\n            setEditAlert(item);\r\n            setEdit(true);\r\n        } else {\r\n            setEditAlert({});\r\n        }\r\n\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handleDelete = (alertId) => {\r\n        Swal.fire({\r\n            title: '¿Eliminar alerta?',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Sí, eliminar'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              dispatch(deleteAlert(alertId));\r\n              setSubmitDelete(true);\r\n            }\r\n          })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(success && submitDelete){\r\n            Swal.fire(\r\n                'Eliminado!',\r\n                'Alerta eliminada correctamente',\r\n                'success'\r\n            ).then(()=>{\r\n                setSubmitDelete(false);\r\n                dispatch(listAlerts());\r\n            });  \r\n        }\r\n    },[success, submitDelete, dispatch])\r\n\r\n    useEffect(()=>{\r\n        if (alerts) {\r\n            let rows = [];\r\n            alerts.map(item => rows.push({\r\n                id: item.alertId,\r\n                priority: item.typesalert.typeAlert,\r\n                message: item.message,\r\n                date: item.date,\r\n                active: item.active\r\n            }));\r\n\r\n            setRows(rows);\r\n        } else {\r\n            dispatch(listAlerts());\r\n        }\r\n    }, [alerts, dispatch]);\r\n\r\n    useEffect(()=>{\r\n        if (alert && send){\r\n            dispatch(listAlerts());\r\n        }\r\n    },[dispatch, alert, send]);\r\n\r\n    return (\r\n        <div>\r\n            <DrawerAlert \r\n                state={state}\r\n                setState={setState}\r\n                editAlert={editAlert}\r\n                edit={edit}\r\n            />\r\n\r\n            <div className=\"container page-container page\">\r\n                <h2>Alertas<small></small></h2>\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={() => toggleDrawer(true)}\r\n                    className=\"btn primary\"\r\n                >\r\n                    Crear alerta\r\n                </button>\r\n\r\n                {\r\n                loading ? <LoadingBox />\r\n                :\r\n                error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                :(\r\n                <div className=\"container-table\">\r\n                    <ul className=\"responsive-table\">\r\n                        <li className=\"table-header\">\r\n                            <div className=\"col col-2\">Activo</div>\r\n                            <div className=\"col col-2\">Prioridad</div>\r\n                            <div className=\"col col-4\">Mensaje</div>\r\n                            <div className=\"col col-4\">Dia de envio</div>\r\n                            <div className=\"col col-2\">Acciones</div>\r\n                        </li>\r\n                        {\r\n                            rows.map(item => (\r\n                                <li className=\"table-row\" key={item.id}>\r\n                                    <div className=\"col col-2\" data-label=\"Payment Status\">\r\n                                        <input type=\"checkbox\" checked={item.active} value={false} onChange={ e => handleActive(e, item)} />\r\n                                    </div>\r\n                                    <div className=\"col col-2\" data-label=\"Customer Name\">{item.priority}</div>\r\n                                    <div className=\"col col-4\" data-label=\"Amount\">{item.message}</div>\r\n                                    <div className=\"col col-4\" data-label=\"Payment Status\">Día {item.date} de cada mes</div>\r\n                                    <div className=\"col col-2\" data-label=\"Payment Status\">\r\n                                        <EditIcon onClick={() => toggleDrawer(true, item)} className=\"cursor-pointer\" />\r\n                                        <DeleteIcon onClick={() => handleDelete(item.id)} className=\"cursor-pointer\" />\r\n                                    </div>\r\n                                </li> \r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                )}\r\n            </div>\r\n            <FloatButton props={props} />\r\n        </div>\r\n    )\r\n}\r\n","export const EXPENSE_LIST_REQUEST = 'EXPENSE_LIST_REQUEST';\r\nexport const EXPENSE_LIST_SUCCESS = 'EXPENSE_LIST_SUCCESS';\r\nexport const EXPENSE_LIST_FAIL = 'EXPENSE_LIST_FAIL';\r\n\r\nexport const EXP_LIST_REQUEST = 'EXP_LIST_REQUEST';\r\nexport const EXP_LIST_SUCCESS = 'EXP_LIST_SUCCESS';\r\nexport const EXP_LIST_FAIL = 'EXP_LIST_FAIL';\r\n\r\nexport const EXPENSE_CREATE_REQUEST = 'EXPENSE_CREATE_REQUEST';\r\nexport const EXPENSE_CREATE_SUCCESS = 'EXPENSE_CREATE_SUCCESS';\r\nexport const EXPENSE_CREATE_FAIL = 'EXPENSE_CREATE_FAIL';\r\n\r\nexport const EXPENSE_DELETE_REQUEST = 'EXPENSE_DELETE_REQUEST';\r\nexport const EXPENSE_DELETE_SUCCESS = 'EXPENSE_DELETE_SUCCESS';\r\nexport const EXPENSE_DELETE_FAIL = 'EXPENSE_DELETE_FAIL';","import axios from \"axios\";\r\nimport { EXPENSE_CREATE_FAIL, EXPENSE_CREATE_REQUEST, EXPENSE_CREATE_SUCCESS, EXPENSE_DELETE_FAIL, EXPENSE_DELETE_REQUEST, EXPENSE_DELETE_SUCCESS, EXPENSE_LIST_FAIL, EXPENSE_LIST_REQUEST, EXPENSE_LIST_SUCCESS, EXP_LIST_FAIL, EXP_LIST_REQUEST, EXP_LIST_SUCCESS } from \"../constants/expenseConstants\"\r\n\r\nexport const listExpenses = (months) => async(dispatch, getState) =>{\r\n    dispatch({ type: EXPENSE_LIST_REQUEST });\r\n    const { userSignin : { userInfo }} = getState();\r\n    try {\r\n        const { data } = await axios.post(`/api/expenses/${userInfo.id}`,{\r\n            months: months,\r\n        }, {\r\n            headers:{\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        });\r\n        dispatch({ type: EXPENSE_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: EXPENSE_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const listExpense = (expenseId) => async (dispatch) => {\r\n    dispatch({ type: EXP_LIST_REQUEST });\r\n    try {\r\n        const { data } = await axios.get(`/api/expenses/${expenseId}`);\r\n        dispatch({ type: EXP_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: EXP_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createExpense = (objExpense) => async (dispatch, getState) => {\r\n    dispatch({ type: EXPENSE_CREATE_REQUEST });\r\n    const {userSignin: { userInfo } } = getState();\r\n\r\n    try {\r\n        const { data } = await axios.post('/api/expenses/', {\r\n            ...objExpense,\r\n            userUserId: userInfo.id\r\n        });\r\n\r\n        if (data.errors) {\r\n            throw new Error(data.errors[0].message);\r\n        }\r\n        dispatch({ type: EXPENSE_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: EXPENSE_CREATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });  \r\n    }\r\n}\r\n\r\nexport const deleteExpense = (expenseId) => async(dispatch) => {\r\n    dispatch({ type: EXPENSE_DELETE_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.delete(`/api/expenses/${expenseId}`, {\r\n            expenseId: expenseId\r\n        })\r\n\r\n        dispatch({ type: EXPENSE_DELETE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: EXPENSE_DELETE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });  \r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listExpenses } from '../actions/expenseActions';\r\n\r\nexport default function ChartScreen() {\r\n    const dispatch = useDispatch();\r\n    const [labels, setLabels] = useState([]);\r\n    const [data, setData] = useState([]);\r\n\r\n    const expenseList = useSelector(state => state.expenseList);\r\n    const { expenses } = expenseList;\r\n\r\n    useEffect(()=>{\r\n        if (!expenses){\r\n            dispatch(listExpenses(['09']));\r\n        } else {\r\n            let labels = [];\r\n            let data = [];\r\n            expenses.map(item => labels.push(item.category.category));\r\n            expenses.map(item => data.push(item.value));\r\n            setLabels(labels);\r\n            setData(data);\r\n        }\r\n    },[dispatch, expenses]);\r\n    return (\r\n        <div>\r\n            <Pie \r\n                data={{ \r\n                    labels: labels,\r\n                    datasets: [{\r\n                        data: data,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.9)',\r\n                            'rgba(54, 162, 235, 0.9)',\r\n                            'rgba(255, 206, 86, 0.9)',\r\n                            'rgba(75, 192, 192, 0.9)',\r\n                            'rgba(153, 102, 255, 0.9)',\r\n                            'rgba(255, 159, 64, 0.9)'\r\n                        ],\r\n                        borderColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)'\r\n                        ],\r\n                        borderWidth: 1\r\n                    }]\r\n                }}\r\n                height={400}\r\n                width={600}\r\n                options={{ maintainAspectRatio: false }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","export const GET_MONTHS_REQUEST = \"GET_MONTHS_REQUEST\";\r\nexport const GET_MONTHS_SUCCESS = \"GET_MONTHS_SUCCESS\";\r\nexport const GET_MONTHS_FAIL = \"GET_MONTHS_FAIL\";\r\n\r\nexport const SET_NOTIFICATIONS_REQUEST = \"SET_NOTIFICATIONS_REQUEST\";\r\nexport const SET_NOTIFICATIONS_SUCCESS = \"SET_NOTIFICATIONS_SUCCESS\";\r\nexport const SET_NOTIFICATIONS_FAIL = \"SET_NOTIFICATIONS_FAIL\";\r\n\r\nexport const SET_FILTERS_REQUEST = \"SET_FILTERS_REQUEST\";\r\nexport const SET_FILTERS_SUCCESS = \"SET_FILTERS_SUCCESS\";\r\nexport const SET_FILTERS_FAIL = \"SET_FILTERS_FAIL\";","import axios from \"axios\";\r\nimport { GET_MONTHS_FAIL, GET_MONTHS_REQUEST, GET_MONTHS_SUCCESS, SET_FILTERS_FAIL, SET_FILTERS_REQUEST, SET_FILTERS_SUCCESS, SET_NOTIFICATIONS_FAIL, SET_NOTIFICATIONS_REQUEST, SET_NOTIFICATIONS_SUCCESS } from \"../constants/utilsConstants\"\r\n\r\nexport const getMonths = () => async (dispatch) => {\r\n    dispatch({ type: GET_MONTHS_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.get('/api/utils/months');\r\n        dispatch({ type: GET_MONTHS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_MONTHS_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const setFilters = (filters) => async (dispatch) => {\r\n    dispatch({ type: SET_FILTERS_REQUEST });\r\n\r\n    try {\r\n        localStorage.setItem('filters', JSON.stringify(filters));\r\n        dispatch({ type: SET_FILTERS_SUCCESS, payload: filters });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SET_FILTERS_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const setNotifications = (data) => (dispatch) => {\r\n    dispatch({ type:SET_NOTIFICATIONS_REQUEST });\r\n    try {\r\n        console.log(data);\r\n        let notification = [{ title: 'ojo con eso', body: data.message, watched: false }];\r\n        localStorage.setItem('notification', JSON.stringify(notification));\r\n        dispatch({ type: SET_NOTIFICATIONS_SUCCESS, payload: notification });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SET_NOTIFICATIONS_FAIL, payload: 'Error getting notifications'\r\n        });\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteExpense, listExpense } from '../../actions/expenseActions';\r\nimport { getMonths } from '../../actions/utilsActions';\r\nimport MessageBox from '../../components/MessageBox';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\nexport default function ExpenseScreen(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const expenseId = props.match.params.id;\r\n\r\n    const [send, setSend] = useState(false);\r\n\r\n    const expList = useSelector(state => state.expList);\r\n    const { expense, loading, error } = expList;\r\n\r\n    const expenseDelete = useSelector(state => state.expenseDelete);\r\n    const { expense: deleted } = expenseDelete;\r\n\r\n    const monthsGet = useSelector(state => state.monthsGet);\r\n    const { months } = monthsGet;\r\n\r\n    const convertDate = (date) => {\r\n        let month = date.split('-')[1];\r\n        let day = date.split('-')[2];\r\n  \r\n        let result = months.filter(item => item.value === month);\r\n        let newDate = `${day} ${result[0].label}`;\r\n        return newDate;\r\n    }\r\n\r\n    const deleteExp = () => {\r\n        setSend(true);\r\n        dispatch(deleteExpense(expenseId))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        dispatch(listExpense(expenseId));\r\n    }, [dispatch, expenseId]);\r\n\r\n    useEffect(()=> {\r\n        if(!months) dispatch(getMonths());\r\n    },[dispatch, months]);\r\n\r\n    useEffect(() => {\r\n        if (deleted && send) {\r\n            props.history.push('/');\r\n            setSend(false);\r\n        } \r\n    }, [deleted, send, props])\r\n    \r\n    return (\r\n        <div>\r\n            {\r\n                loading ? <LoadingBox />\r\n                :\r\n                error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                : \r\n                (\r\n                <div className=\"card-expense\">\r\n                    <div className=\"card-expense-header\">\r\n                        <div onClick={ () => deleteExp()}> <DeleteIcon /></div>\r\n                        <div>{expense.category.label}</div>\r\n                        <div>{expense.subcategory.label}</div>\r\n                        <div>{expense.description}</div>\r\n                    </div>\r\n                    <div className=\"card-expense-body\">\r\n                        <div>${new Intl.NumberFormat().format(expense.value)}</div>\r\n                        { months && ( \r\n                            <div>{convertDate(expense.date.split('T')[0])}</div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"card-expense-edit\">\r\n                        <Avatar> <EditIcon /> </Avatar>\r\n                    </div>\r\n                </div>\r\n                )\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport { listExpenses } from '../actions/expenseActions';\r\nimport { getMonths, setFilters } from '../actions/utilsActions';\r\n\r\nexport default function SelectDate(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const monthsGet = useSelector(state => state.monthsGet);\r\n    const { months } = monthsGet;\r\n\r\n    const filtersSet = useSelector(state => state.filtersSet);\r\n    const { filters } = filtersSet;\r\n\r\n    const { month } = props;\r\n    const [monthSelect, setMonthSelect] = useState();\r\n    const [agrupadores, setAgrupadores] = useState();\r\n    const [groupesSelect, setSelectGroupes] = useState();\r\n\r\n    const handlerMonth = (items) => {\r\n        let months = [];\r\n        items.map(item => months.push(item.value));\r\n\r\n        localStorage.setItem('months', JSON.stringify(months));\r\n        dispatch(listExpenses(months));\r\n    }\r\n\r\n    const handlerGrouper = (items) => {\r\n        let groupers = [];\r\n        items.map(item => groupers.push(item.value));\r\n        dispatch(setFilters(groupers));\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(listExpenses([month]));\r\n    }, [dispatch, month]);\r\n\r\n    useEffect(() => {\r\n        if (!agrupadores) {\r\n            setAgrupadores([\r\n                { value: 'category', label: 'Categoria' },\r\n                { value: 'subcategory', label: 'Subcategoria' },\r\n            ]);\r\n        }\r\n    }, [agrupadores]);\r\n\r\n    useEffect(() => {\r\n        if (filters && agrupadores) {\r\n            const result = [];\r\n            filters.forEach(filter => {\r\n                result.push(agrupadores.filter(agrupador => agrupador.value === filter)[0])\r\n            })\r\n            setSelectGroupes(result)\r\n        }\r\n    }, [filters, agrupadores])\r\n\r\n    useEffect(() => {\r\n        if (months) {\r\n            const result = [];\r\n            months.forEach(item =>\r\n                month.forEach(m => {\r\n                    if (m === item.value) result.push(item)\r\n                })\r\n            )\r\n\r\n            if (!monthSelect) setMonthSelect(result);\r\n\r\n        } else {\r\n            dispatch(getMonths());\r\n        }\r\n    }, [dispatch, months, monthSelect, month]);\r\n\r\n    return (\r\n        <div className=\"selects-datable\">\r\n            {months && monthSelect && (\r\n                <Select\r\n                    className=\"select\"\r\n                    placeholder=\"Mes\"\r\n                    isMulti\r\n                    onChange={e => handlerMonth(e)}\r\n                    defaultValue={monthSelect}\r\n                    options={months} />\r\n            )}\r\n\r\n\r\n            {groupesSelect &&\r\n                <Select\r\n                    className=\"select\"\r\n                    placeholder=\"Agrupar por...\"\r\n                    isMulti\r\n                    onChange={e => handlerGrouper(e)}\r\n                    defaultValue={groupesSelect}\r\n                    options={agrupadores} />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function ExpenseDetails(props) {\r\n    const monthsGet = useSelector(state => state.monthsGet);\r\n    const { months } = monthsGet;\r\n    const { expenses, props: prop } = props;\r\n\r\n    const convertDate = (date) => {\r\n        let month = date.split('-')[1];\r\n        let day = date.split('-')[2];\r\n\r\n        let result = months.filter(expense => expense.value === month);\r\n        let newDate = `${day} ${result[0].label}`;\r\n        return newDate;\r\n    }\r\n\r\n    const handleRedirect = (expenseId) => {\r\n        prop.history.push(`/expenses/${expenseId}`)\r\n    }\r\n\r\n    return (\r\n        expenses.map(expense => (\r\n            <div key={expense.expenseId} className=\"data-table-items\" onClick={() => handleRedirect(expense.expenseId)}>\r\n\r\n                <div className=\"data-date\">\r\n                    <div>{expense.date ? convertDate(expense.date.split('T')[0]).slice(0, 6).split(' ')[1] : ''}</div>\r\n                    <div>{expense.date ? convertDate(expense.date.split('T')[0]).slice(0, 6).split(' ')[0] : ''}</div>\r\n                </div>\r\n\r\n                <div>\r\n                    <div className=\"category\">\r\n                        {\r\n                            expense.category.category[0].toUpperCase() + expense.category.category.substr(1)\r\n                        }\r\n                    </div>\r\n                    <div className=\"subcategory\">\r\n                        {\r\n                            expense.subcategory.subcategory[0].toUpperCase() + expense.subcategory.subcategory.substr(1)\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div>${new Intl.NumberFormat().format(expense.value)}</div>\r\n\r\n            </div>\r\n        ))\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function CategoryDetails(props) {\r\n\r\n    const { expenses: expensesProps, props: prop } = props;\r\n    const [expenses, setExpenses] = useState([]);\r\n\r\n    const handleCategoryReduce = (items) => {\r\n        return items.reduce((prev, item) => {\r\n            const head = `${item.category.categoryId}`\r\n            const value = prev[head] ? prev[head][0] : 0\r\n            const sub = prev[head] ? prev[head][3] : []\r\n\r\n            const headSub = item.subcategory.subcategoryId\r\n            const valueSub = sub[headSub] ? sub[headSub][0] : 0\r\n            const exp = sub[headSub] ? sub[headSub][2] : []\r\n\r\n            exp.push(item.expenseId)\r\n\r\n            sub[headSub] = [valueSub + parseInt(item.value), item.subcategory.subcategory, exp]\r\n            prev[head] = [value + parseInt(item.value), item.category.category, item.category.categoryId, sub]\r\n            return prev\r\n        }, [])\r\n    }\r\n\r\n    useEffect(() => {\r\n        const result = handleReorder(handleCategoryReduce(expensesProps))\r\n        console.log(result)\r\n        setExpenses(result)\r\n    }, [expensesProps])\r\n\r\n    const handleRedirect = (expenseId) => {\r\n        prop.history.push(`/expenses/${expenseId}`)\r\n    }\r\n\r\n    const handleReorder = (items) => {\r\n        return items.sort((a, b) => b[0] - a[0])\r\n    }\r\n\r\n    return (\r\n        expenses.map(expense => (\r\n            <Accordion key={expense[2]}>\r\n                <AccordionSummary\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                >\r\n                    <Typography className='accordion-title'>\r\n                        <div> {expense[1]}</div>\r\n                        <div>${new Intl.NumberFormat().format(expense[0])}</div>\r\n                    </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails >\r\n                    <Typography className='accordion-body'>\r\n                        {handleReorder(expense[3]).map(item => (\r\n                            <div\r\n                                key={item[2]}\r\n                                className='accordion-body-description'\r\n                                onClick={() => handleRedirect(item[2])}\r\n                            >\r\n                                <div>{item[1][0].toUpperCase() + item[1].substr(1)}</div>\r\n                                <div>${new Intl.NumberFormat().format(item[0])}</div>\r\n                            </div>\r\n                        ))}\r\n                    </Typography>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        ))\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function SubcategoryDetails(props) {\r\n    const { expenses } = props;\r\n    return (\r\n\r\n        expenses.map(expense => (\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    id=\"panel1a-header\"\r\n                >\r\n                    <Typography>{expense.category.category} {expense.subcategory.subcategory} {expense.value}</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Typography>\r\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse\r\n                        malesuada lacus ex, sit amet blandit leo lobortis eget.\r\n                    </Typography>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        ))\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport MessageBox from '../components/MessageBox';\r\nimport LoadingBox from '../components/utils/LoadingBox';\r\nimport { MDBDataTableV5 } from 'mdbreact';\r\nimport SelectDate from '../components/SelectDate';\r\nimport { getMonths, setNotifications } from '../actions/utilsActions';\r\nimport FloatButton from '../components/FloatButton';\r\nimport ExpenseDetails from '../components/ExpenseDetails';\r\nimport CategoryDetails from '../components/Accordion/CategoryDetails';\r\nimport SubcategoryDetails from '../components/Accordion/SubcategoryDetails';\r\n\r\nexport default function HomeScreen(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [success, setSuccess] = useState(false);\r\n  const [datatable, setDatatable] = useState({});\r\n  const [month, setMonth] = useState();\r\n  const [filter, setFilter] = useState();\r\n\r\n  const userSignin = useSelector(state => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n\r\n  const monthsGet = useSelector(state => state.monthsGet);\r\n  const { months } = monthsGet;\r\n\r\n  const expenseList = useSelector(state => state.expenseList);\r\n  const { loading, expenses, error } = expenseList;\r\n\r\n  const filtersSet = useSelector(state => state.filtersSet);\r\n  const { filters } = filtersSet;\r\n\r\n  const convertDate = (date) => {\r\n    let month = date.split('-')[1];\r\n    let day = date.split('-')[2];\r\n\r\n    let result = months.filter(item => item.value === month);\r\n    let newDate = `${day} ${result[0].label}`;\r\n    return newDate;\r\n  }\r\n\r\n  // const handlerInfo = () => {\r\n  //   const filters = JSON.parse(localStorage.getItem('filters'));\r\n  //   if (filters.includes('subcategory')) {\r\n  //     setFilter('subcategory')\r\n  //   } else if (filters.includes('category')) {\r\n  //     setFilter('category')\r\n  //   } else {\r\n  //     setFilter('empty')\r\n  //     // props.history.push(`/expenses/${expenseId}`);\r\n  //   }\r\n  // }\r\n\r\n  const getDate = () => {\r\n    let newDate = new Date()\r\n    let month = newDate.getMonth() + 1;\r\n\r\n    month = month < 10 ? `0${month}` : `${month}`;\r\n    return [month]\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!months) dispatch(getMonths());\r\n  }, [dispatch, months]);\r\n\r\n  // useEffect(()=>{\r\n  //   dispatch(setNotifications({title: 'ojo con eso manito', message: 'pagat internet'}));\r\n  // }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (filters) {\r\n      if (filters.includes('subcategory')) {\r\n        setFilter('subcategory')\r\n      } else if (filters.includes('category')) {\r\n        setFilter('category')\r\n      } else {\r\n        setFilter('empty')\r\n      }\r\n    }\r\n  }, [filters])\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) props.history.push(\"/login\");\r\n\r\n    if (expenses) {\r\n      let columns = [\r\n        {\r\n          label: 'Categoria',\r\n          field: 'category',\r\n          width: 150,\r\n          attributes: {\r\n            'aria-controls': 'DataTable',\r\n            'aria-label': 'Gasto',\r\n          },\r\n        },\r\n        {\r\n          label: 'Subcategoria',\r\n          field: 'subcategory',\r\n          width: 270,\r\n        },\r\n        {\r\n          label: 'Valor',\r\n          field: 'value',\r\n          width: 270\r\n        },\r\n      ];\r\n\r\n      let rows = [];\r\n\r\n      if (expenses.length) {\r\n        if (expenses[0].description)\r\n          columns.push({\r\n            label: 'Descripción',\r\n            field: 'description',\r\n            width: 270,\r\n          });\r\n\r\n        if (expenses[0].date)\r\n          columns.push({\r\n            label: 'Fecha',\r\n            field: 'date',\r\n            width: 270,\r\n          });\r\n        expenses.forEach(item => rows.push({\r\n          category: item.category.category[0],\r\n          subcategory: item.subcategory.subcategory,\r\n          description: item.description ? item.description : '',\r\n          value: new Intl.NumberFormat().format(item.value),\r\n          date: item.date ? convertDate(item.date.split('T')[0]) : '',\r\n        }));\r\n      }\r\n      setDatatable({ columns, rows });\r\n    }\r\n    if (!month) {\r\n      const date = JSON.parse(localStorage.getItem('months')) ? JSON.parse(localStorage.getItem('months')) : getDate()\r\n      setMonth(date)\r\n    }\r\n    setSuccess(false);\r\n  }, [dispatch, props, userInfo, success, expenses, month]);\r\n\r\n\r\n  return (\r\n    <div className=\"home-screen\">\r\n\r\n      <div className=\"title\">Dero</div>\r\n\r\n      {month && (<SelectDate month={month} />)}\r\n\r\n      {\r\n        loading ? <LoadingBox></LoadingBox>\r\n          :\r\n          error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n            :\r\n            (\r\n              <div className=\"datatable\">\r\n                <div className=\"data-info\">\r\n                  <div className=\"data-card\">\r\n                    <div>Gastos totales</div>\r\n                    <div>\r\n                      ${new Intl.NumberFormat().format(expenses.reduce((a, c) => a + parseInt(c.value), 0))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"data-table\">\r\n                  <MDBDataTableV5\r\n                    hover\r\n                    data={datatable}\r\n                    searchTop\r\n                    paging={false}\r\n                    info={false}\r\n                    searchBottom={false}\r\n                  />\r\n                </div>\r\n                <div className=\"data-content\">\r\n                  {\r\n                    filter === 'category' ? <CategoryDetails expenses={expenses} props={props}/> :\r\n                      filter === 'subcategory' ? <SubcategoryDetails expenses={expenses} /> :\r\n                        <ExpenseDetails expenses={expenses} props={props}/>\r\n                  }\r\n                </div>\r\n              </div>\r\n            )}\r\n      <FloatButton props={props} />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signin } from '../../actions/userActions';\r\nimport { Link, useHistory  } from 'react-router-dom';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport MessageBox from '../../components/MessageBox';\r\n\r\nexport default function LoginScreen(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo, error, loading } = userSignin;\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signin({username: username, password: password}));\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(userInfo) history.push(\"/\");\r\n    }, [userInfo, history])\r\n    \r\n    return (\r\n        <div className=\"home\">\r\n            \r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                \r\n                <div className=\"title\">\r\n                    Iniciar sesión\r\n                </div>\r\n\r\n                <div>\r\n                    <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            placeholder=\"Username\"\r\n                            onChange={ e => setUsername(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={e => setPassword(e.target.value)}\r\n                    ></input>\r\n                    {/* <span><Link to=\"/\">recuperar contraseña</Link></span> */}\r\n                </div>\r\n                <div>\r\n                    {\r\n                        loading ? <LoadingBox />\r\n                        :\r\n                        (\r\n                            <button className=\"btn primary\" type=\"submit\">Iniciar Sesión</button>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n                <div>\r\n                    <Link to=\"/register\">¿Olvidaste tu contraseña?</Link> \r\n                </div>\r\n\r\n                <div>\r\n                    { error && <MessageBox variant=\"danger\">{error}</MessageBox> }\r\n                </div>\r\n            </form>\r\n            <div className=\"box-register\">\r\n                <div>\r\n                    <span>\r\n                        <Link to=\"/register\">Crear una cuenta</Link> \r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ProfileScreen() {\r\n    return (\r\n        <div>\r\n            Profile\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { registerUser } from '../../actions/userActions';\r\nimport MessageBox from '../../components/MessageBox';\r\n\r\nexport default function RegisterScreen(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [error, setError] = useState(null);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        setError(null);\r\n        if (password === confirmPassword) {\r\n            dispatch(registerUser({username: username, password:password, email: email}));\r\n        } else {\r\n            setError('Las contraseñas no coinciden');\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (userInfo) {\r\n            props.history.push(\"/\");\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                <div className=\"title\">\r\n                    Registro\r\n                </div>\r\n\r\n                <div>\r\n                    { error && (<MessageBox variant=\"danger\">{error}</MessageBox>)}\r\n                </div>\r\n\r\n                <div>\r\n                    <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            placeholder=\"Username\"\r\n                            onChange={ e => setUsername(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            placeholder=\"Email\"\r\n                            onChange={ e => setEmail(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={e => setPassword(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={e => setConfirmPassword(e.target.value)}\r\n                    ></input>\r\n                </div>\r\n                <div>\r\n                    <button className=\"btn primary\" type=\"submit\">Registrarme</button>\r\n                </div>\r\n\r\n                <div>\r\n                    <Link to=\"/login\">Iniciar sesion</Link> \r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","export const CATEGORY_CREATE_REQUEST = \"CATEGORY_CREATE_REQUEST\";\r\nexport const CATEGORY_CREATE_SUCCESS = \"CATEGORY_CREATE_SUCCESS\";\r\nexport const CATEGORY_CREATE_FAIL = \"CATEGORY_CREATE_FAIL\";\r\n\r\nexport const CATEGORY_LIST_REQUEST = \"CATEGORY_LIST_REQUEST\";\r\nexport const CATEGORY_LIST_SUCCESS = \"CATEGORY_LIST_SUCCESS\";\r\nexport const CATEGORY_LIST_FAIL = \"CATEGORY_LIST_FAIL\";","import axios from \"axios\";\r\nimport { CATEGORY_CREATE_FAIL, CATEGORY_CREATE_REQUEST, CATEGORY_CREATE_SUCCESS, CATEGORY_LIST_FAIL, CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS } from \"../constants/categoryConstants\"\r\n\r\nexport const listCategories = () => async(dispatch, useState) => {\r\n    dispatch({type:  CATEGORY_LIST_REQUEST });\r\n    const { userSignin: { userInfo }} = useState();\r\n    try {\r\n        const { data } = await axios.get(`/api/categories/${userInfo.id}`);\r\n        dispatch({ type: CATEGORY_LIST_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CATEGORY_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        }); \r\n    }\r\n}\r\n\r\nexport const createCategory = (name) => async(dispatch, useState) => {\r\n    dispatch({ type: CATEGORY_CREATE_REQUEST, payload: name});\r\n    const { userSignin: { userInfo } } = useState();\r\n    try {\r\n        const { data } = await axios.post('/api/categories/', {\r\n            name: name,\r\n            userId: userInfo.id\r\n        });\r\n        dispatch({ type: CATEGORY_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CATEGORY_CREATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}","export const SUBCATEGORY_LIST_REQUEST = 'SUBCATEGORY_LIST_REQUEST';\r\nexport const SUBCATEGORY_LIST_SUCCESS = 'SUBCATEGORY_LIST_SUCCESS';\r\nexport const SUBCATEGORY_LIST_FAIL = 'SUBCATEGORY_LIST_FAIL';\r\n\r\nexport const SUBCATEGORY_LIST_BY_CATEGORY_REQUEST = 'SUBCATEGORY_LIST_BY_CATEGORY_REQUEST';\r\nexport const SUBCATEGORY_LIST_BY_CATEGORY_SUCCESS = 'SUBCATEGORY_LIST_BY_CATEGORY_SUCCESS';\r\nexport const SUBCATEGORY_LIST_BY_CATEGORY_FAIL = 'SUBCATEGORY_LIST_BY_CATEGORY_FAIL';\r\n\r\nexport const SUBCATEGORY_CREATE_REQUEST = 'SUBCATEGORY_CREATE_REQUEST';\r\nexport const SUBCATEGORY_CREATE_SUCCESS = 'SUBCATEGORY_CREATE_SUCCESS';\r\nexport const SUBCATEGORY_CREATE_FAIL = 'SUBCATEGORY_CREATE_FAIL';","import axios from \"axios\";\r\nimport { SUBCATEGORY_CREATE_FAIL, SUBCATEGORY_CREATE_REQUEST, SUBCATEGORY_CREATE_SUCCESS, SUBCATEGORY_LIST_BY_CATEGORY_FAIL, SUBCATEGORY_LIST_BY_CATEGORY_REQUEST, SUBCATEGORY_LIST_BY_CATEGORY_SUCCESS, SUBCATEGORY_LIST_FAIL, SUBCATEGORY_LIST_REQUEST, SUBCATEGORY_LIST_SUCCESS } from \"../constants/subcategoriesConstants\"\r\n\r\nexport const listSubcategories = (categoryId) => async (dispatch) => {\r\n    dispatch({ type: SUBCATEGORY_LIST_REQUEST });\r\n    try {\r\n        const { data } = await axios.get(`/api/subcategories/${categoryId}`);\r\n        dispatch({ type: SUBCATEGORY_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SUBCATEGORY_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const listSubcategoriesByCategory = (categoryId) => async (dispatch) => {\r\n    dispatch({ type: SUBCATEGORY_LIST_BY_CATEGORY_REQUEST });\r\n    try {\r\n        const { data } = await axios.get(`/api/subcategoriesByCategory/${categoryId}`);\r\n        dispatch({ type: SUBCATEGORY_LIST_BY_CATEGORY_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SUBCATEGORY_LIST_BY_CATEGORY_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createSubcategory = (name, categoryId) => async (dispatch) => {\r\n    dispatch({ type: SUBCATEGORY_CREATE_REQUEST });\r\n\r\n    try {\r\n        const { data } = await axios.post('/api/subcategories',{\r\n            name: name,\r\n            categoryId: categoryId\r\n        });\r\n        dispatch({ type: SUBCATEGORY_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SUBCATEGORY_CREATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createCategory, listCategories } from '../actions/categoryActions';\r\nimport { createSubcategory, listSubcategories } from '../actions/subcategoriesActions';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nexport default function SubForm(props) {\r\n\r\n    const { type, categoryId, showNew } = props;\r\n    const dispatch = useDispatch('');\r\n\r\n    const categoryCreate = useSelector(state => state.categoryCreate);\r\n    const { category } = categoryCreate;\r\n\r\n    const subcategoryCreate = useSelector(state => state.subcategoryCreate);\r\n    const { subcategory } = subcategoryCreate;\r\n    \r\n    const [name, setname] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [submitCategory, setSubmitCategory] = useState(false);\r\n    const [submitSubcategory, setSubmitSubcategory] = useState(false);\r\n\r\n    const handlerSubmit = () => {\r\n\r\n        switch (type) {\r\n            case 'category':\r\n                dispatch(createCategory(name));\r\n                setSubmitCategory(true);\r\n                break;\r\n            case 'subcategory':\r\n                dispatch(createSubcategory(name, categoryId));\r\n                setSubmitSubcategory(true);\r\n                break\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let title = type === 'category' ? 'categoria' : 'subcategoria';\r\n        setTitle(title);\r\n    }, [type, category]);\r\n\r\n    useEffect(()=>{\r\n        if (category && submitCategory) {\r\n          showNew(false); \r\n          dispatch(listCategories()); \r\n          dispatch(listSubcategories(category.categoryId)); \r\n        }\r\n    }, [submitCategory, category, dispatch, showNew]);\r\n\r\n    useEffect(()=>{\r\n        if (subcategory && submitSubcategory) {\r\n          showNew(false); \r\n          dispatch(listSubcategories(categoryId)); \r\n        }\r\n    }, [submitSubcategory, subcategory, dispatch, showNew, categoryId]);\r\n    return (\r\n        <div className=\"sub-form\">\r\n            <div>\r\n                <input \r\n                    type=\"text\"\r\n                    maxLength=\"20\"\r\n                    onChange={e => setname(e.target.value)}\r\n                    placeholder={`Nueva ${title}`}>\r\n                </input>\r\n            </div>\r\n            <div>\r\n                <CheckIcon onClick={handlerSubmit} />\r\n            </div>\r\n            <div>\r\n                <ClearIcon onClick={() => showNew(false)} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MessageBox from '../../components/MessageBox';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listCategories } from '../../actions/categoryActions';\r\nimport { createExpense, listExpenses } from '../../actions/expenseActions';\r\nimport { listSubcategories } from '../../actions/subcategoriesActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SubForm from '../../components/SubForm';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function ExpenseCreateScreen(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [description, setDescription] = useState('');\r\n    const [value, setValue] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [categorySelect, setCategorySelect] = useState('');\r\n    const [subcategory, setSubcategory] = useState('');\r\n    const [today, setToday] = useState('');\r\n\r\n    const [submit, setSubmit] = useState(false);\r\n    const [showNewCategory, setShowNewCateogry] = useState(false);\r\n    const [showNewSubcategory, setShowNewSubcategory] = useState(false);\r\n    const [state, setState] = useState({ right: true });\r\n\r\n    const categoriesList = useSelector(state => state.categoriesList);\r\n    const { loading, error, categories } = categoriesList;\r\n\r\n    const expenseCreate = useSelector(state => state.expenseCreate);\r\n    const { expense, loading: loadingSuccess, error: errorCreate } = expenseCreate;\r\n\r\n    const subcategoriesList = useSelector(state => state.subcategoriesList);\r\n    const { subcategories, loading: loadingSubcategory, error: errorSubcategory } = subcategoriesList;\r\n\r\n    const toggleDrawer = (open) => {\r\n        props.history.push('/');\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handleClose = useCallback((open) => {\r\n        if (state.right)\r\n            props.history.push('/');\r\n        setState({ ...state, right: open });\r\n    }, [setState, state, props]);\r\n\r\n    const loadCategories = useCallback(() => {\r\n        if (!categories) {\r\n            dispatch(listCategories());\r\n        } else {\r\n            if (categories.length > 0) {\r\n                const cat = localStorage.getItem('category') ? localStorage.getItem('category') : categories[0].value\r\n                setCategory(cat);\r\n            }\r\n        }\r\n    }, [categories, dispatch]);\r\n\r\n    const handlerCategory = (e) => {\r\n        localStorage.setItem('category', e);\r\n        setCategory(e);\r\n    }\r\n\r\n    const handlerSubmit = (e) => {\r\n        e.preventDefault();\r\n        const objExpense = {\r\n            description: description,\r\n            value: value,\r\n            date: date,\r\n            categoryCategoryId: category,\r\n            subcategorySubcategoryId: subcategory\r\n        }\r\n        setSubmit(true);\r\n        dispatch(createExpense(objExpense));\r\n    }\r\n\r\n    const getDate = () => {\r\n        let newDate = new Date()\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n\r\n        date = date < 10 ? `0${date}` : `${date}`;\r\n        month = month < 10 ? `0${month}` : `${month}`;\r\n\r\n        let today = `${year}-${month}-${date}`;\r\n        setToday(today);\r\n        setDate(today);\r\n    }\r\n\r\n    const handletDate = (e) => {\r\n        setToday(e);\r\n        setDate(e);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (category) dispatch(listSubcategories(category));\r\n    }, [category, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (!categorySelect && categories) {\r\n            const cat = localStorage.getItem('category') ? parseInt(localStorage.getItem('category')) : categories[0].value\r\n            setCategorySelect(categories.filter(item => item.value === cat)[0])\r\n        }\r\n    }, [categorySelect, categories])\r\n\r\n    useEffect(() => {\r\n        if (subcategories)\r\n            if (subcategories.length > 0)\r\n                setSubcategory(subcategories[0].value);\r\n    }, [subcategories]);\r\n\r\n    useEffect(() => {\r\n        getDate();\r\n        loadCategories();\r\n    }, [loadCategories]);\r\n\r\n    useEffect(() => {\r\n        if (expense && submit) {\r\n            let month = [today.split('-')[1]];\r\n            dispatch(listExpenses(month));\r\n            handleClose(false);\r\n        }\r\n    }, [expense, dispatch, submit, today, handleClose]);\r\n\r\n    return (\r\n        <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n            <div className=\"drawer-header\">\r\n                <Link to=\"/\">\r\n                    <ArrowBackIcon className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n                </Link>\r\n            </div>\r\n            <div className=\"drawer-body\">\r\n                <form className=\"form-modal\" onSubmit={handlerSubmit}>\r\n                    {errorCreate && <MessageBox variant=\"danger\">{errorCreate}</MessageBox>}\r\n                    <div className=\"form-title\">\r\n                        <div>Registrar gasto</div>\r\n                        <Divider />\r\n                    </div>\r\n\r\n                    <div>\r\n                        {\r\n                            loading ? <LoadingBox></LoadingBox>\r\n                                :\r\n                                error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                                    : (\r\n                                        <div>\r\n\r\n                                            {categorySelect && (<>\r\n                                                <Select\r\n                                                    className=\"select\"\r\n                                                    placeholder=\"Categorias\"\r\n                                                    onChange={e => handlerCategory(e.value)}\r\n                                                    defaultValue={categorySelect}\r\n                                                    options={categories} />\r\n                                                <AddIcon\r\n                                                    onClick={() => setShowNewCateogry(!showNewCategory)}\r\n                                                    className=\"fas fa-plus-circle\"\r\n                                                />\r\n                                            </>)}\r\n                                            {showNewCategory && <SubForm showNew={setShowNewCateogry} type={'category'} />}\r\n                                        </div>\r\n                                    )}\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            loadingSubcategory ? <div\r\n                                className=\"new-category\"\r\n                                onClick={() => setShowNewCateogry(!showNewCategory)}\r\n                            ></div>\r\n                                :\r\n                                errorSubcategory ? <MessageBox variant=\"danger\">{errorSubcategory}</MessageBox>\r\n                                    : (\r\n                                        <div>\r\n                                            <Select\r\n                                                className=\"select\"\r\n                                                placeholder=\"Subcategorias\"\r\n                                                onChange={e => setSubcategory(e.value)}\r\n                                                defaultValue={subcategories[0]}\r\n                                                options={subcategories}\r\n                                            />\r\n                                            <AddIcon\r\n                                                onClick={() => setShowNewSubcategory(!showNewSubcategory)}\r\n                                                className=\"fas fa-plus-circle\"\r\n                                            />\r\n                                            {showNewSubcategory && <SubForm showNew={setShowNewSubcategory} type={'subcategory'} categoryId={category} />}\r\n                                        </div>\r\n                                    )}\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            type=\"number\"\r\n                            onChange={e => setValue(e.target.value)}\r\n                            placeholder=\"Valor\">\r\n                        </input>\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            type=\"text\"\r\n                            onChange={e => setDescription(e.target.value)}\r\n                            placeholder=\"Descripcion\">\r\n                        </input>\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            value={today}\r\n                            type=\"date\"\r\n                            onChange={e => handletDate(e.target.value)}\r\n                            placeholder=\"Fecha\">\r\n                        </input>\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            loadingSuccess ? <LoadingBox />\r\n                                : (\r\n                                    <button className=\"btn secundary\" type=\"submit\">Crear</button>\r\n                                )\r\n                        }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Drawer>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Select from 'react-select';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport { createAlert, listAlerts, listTypeAlerts, updateAlertActive } from '../../actions/alertActions';\r\n\r\nexport default function AlertCreateScreen(props) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { editAlert, edit, state, setState } = props;\r\n  const [days, setDays] = useState([]);\r\n  const [selectDay, setSelectDay] = useState('');\r\n  const [selectType, setSelectType] = useState('');\r\n  const [day, setDay] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [submit, setSubmit] = useState(false);\r\n\r\n  const alertCreate = useSelector(state => state.alertCreate);\r\n  const { alert } = alertCreate;\r\n\r\n  const alertActiveUpdate = useSelector(state => state.alertActiveUpdate);\r\n  const { alert: alertSuccess } = alertActiveUpdate;\r\n\r\n  const alertTypeList = useSelector(state => state.alertTypeList);\r\n  const { typeAlerts, loading: loadingTypes } = alertTypeList;\r\n\r\n    const toggleDrawer = (open) => {\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handleClose = useCallback((open) => {\r\n        if(state.right)\r\n            setState({ ...state, right: open });\r\n    },[setState, state]);\r\n\r\n  const handleSubmit = (e) => { \r\n        e.preventDefault();\r\n        setSubmit(true);\r\n        if (edit) {\r\n            dispatch(updateAlertActive({\r\n                date: day,\r\n                alert: title,\r\n                message,\r\n                id:editAlert.id,\r\n                active:editAlert.active\r\n            }));\r\n        } else {\r\n            dispatch(createAlert({date: day, alert: title, message}));\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (days.length < 1) {\r\n            let days = [];\r\n            [...Array(31).keys()].map(item => days.push({value: item + 1, label: item + 1}));\r\n            setDays(days);\r\n        }\r\n    },[days]);\r\n\r\n    useEffect(()=>{\r\n        dispatch(listTypeAlerts());\r\n    }, [dispatch])\r\n\r\n    useEffect(()=>{\r\n        if ((alert && submit) || (alertSuccess && submit)){\r\n            handleClose(false);\r\n            dispatch(listAlerts());\r\n        }\r\n    },[alert, submit, dispatch, alertSuccess, handleClose]);\r\n\r\n    useEffect(()=>{\r\n        if (editAlert && edit) {\r\n            const type = typeAlerts.filter(type => type.label === editAlert.priority)\r\n            setTitle(editAlert.alert);\r\n            setMessage(editAlert.message);\r\n            setSelectDay({label: editAlert.date, value:editAlert.date});\r\n            setSelectType(type);\r\n            setDay(editAlert.date); \r\n        } else {\r\n            setTitle('');\r\n            setMessage('');\r\n            setSelectDay({ label: 1, value: 1 }); \r\n            setDay(1); \r\n            setSelectType({});\r\n        }\r\n    },[editAlert, edit, typeAlerts]);\r\n\r\n  return (\r\n\r\n    <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n        <div className=\"drawer-header\">\r\n            <ArrowBackIcon id=\"close\" className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n        </div>\r\n        <div className=\"drawer-body\">\r\n        <form className=\"form-modal\" onSubmit={handleSubmit}>\r\n                <div className=\"form-title\">\r\n                    <div>Registar Alerta</div>\r\n                    <Divider />\r\n                </div>\r\n                <div>\r\n                <label>Prioridad</label>\r\n                {\r\n                    loadingTypes ? <LoadingBox />\r\n                    :\r\n                    (\r\n                    <Select\r\n                        placeholder=\"Prioridad de la alerta\"\r\n                        onChange={e => setTitle(e.value)}\r\n                        defaultValue={selectType}\r\n                        options={typeAlerts}\r\n                    />\r\n                    )\r\n                }\r\n\r\n            </div>\r\n            <div>\r\n                <label>Descripcíon alerta</label>\r\n                <textarea\r\n                    type=\"text\"\r\n                    value={message}\r\n                    onChange={e => setMessage(e.target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label>Día de envío</label>\r\n                <Select\r\n                    placeholder=\"Dia\"\r\n                    onChange={e => setDay(e.value)}\r\n                    defaultValue={selectDay}\r\n                    options={days}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button onClick={() => toggleDrawer(false)} className=\"btn secundary\" type=\"submit\">{edit ? 'Actualizar' : 'Crear'}</button>\r\n            </div>\r\n\r\n        </form>\r\n        </div>\r\n    </Drawer>\r\n  );\r\n}\r\n","export const ACTIVITY_CREATE_REQUEST = \"ACTIVITY_CREATE_REQUEST\";\r\nexport const ACTIVITY_CREATE_SUCCESS = \"ACTIVITY_CREATE_SUCCESS\";\r\nexport const ACTIVITY_CREATE_FAIL = \"ACTIVITY_CREATE_FAIL\";\r\n\r\nexport const ACTIVITY_LIST_REQUEST = \"ACTIVITY_LIST_REQUEST\";\r\nexport const ACTIVITY_LIST_SUCCESS = \"ACTIVITY_LIST_SUCCESS\";\r\nexport const ACTIVITY_LIST_FAIL = \"ACTIVITY_LIST_FAIL\";","import { Avatar } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FloatButton from '../../components/FloatButton';\r\nimport { listActivities } from '../../actions/activityActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst initialActivities = [\r\n    {\r\n        id: \"1\",\r\n        color: \"red\",\r\n        activity: 'Ver maricadas'\r\n    },\r\n    {\r\n        id: \"2\",\r\n        color: \"blue\",\r\n        activity: 'Corregir trabajo'\r\n    },\r\n    {\r\n        id: \"3\",\r\n        color: \"green\",\r\n        activity: 'Salir temprano'\r\n    }\r\n]\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result  = [...list];\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n    return result;\r\n}\r\nexport default function ActivityScreen(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const activitiesList = useSelector(state => state.activitiesList);\r\n    const { loading, activities: activitiesLoad, error } = activitiesList;\r\n\r\n    const [activities, setActivities] = useState(initialActivities);\r\n\r\n    useEffect(()=>{\r\n        if(!activitiesLoad) dispatch(listActivities());\r\n    }, [dispatch, activitiesLoad]);\r\n\r\n    return (\r\n        <div>\r\n            <DragDropContext onDragEnd={(result) => {\r\n                const { source, destination } = result;\r\n                if (!destination) return;\r\n                if(source.index === destination.index) return;\r\n                setActivities(prevActivities => reorder(prevActivities, source.index, destination.index));\r\n            }}>\r\n                <div className=\"dragger-title\">Actividades</div>\r\n                <Droppable droppableId=\"activities\">\r\n                    {(droppableProvided) => (\r\n                        <div \r\n                            {...droppableProvided.droppableProps}\r\n                            ref={droppableProvided.innerRef}\r\n                        >\r\n                            {activitiesLoad.map((item, index) => (\r\n                                    <Draggable key={item.activityId.toString()} draggableId={item.activityId.toString()} index={index}>\r\n                                        {(draggableProvided) => (\r\n                                            <div className=\"dragger-container\"\r\n                                                {...draggableProvided.draggableProps}\r\n                                                ref={draggableProvided.innerRef}\r\n                                                {...draggableProvided.dragHandleProps}\r\n                                            >\r\n                                                <Avatar className={`avatar-dragger-${item.typesalert.typeAlert}`}>\r\n                                                    {item.activity.charAt(0)}\r\n                                                </Avatar>\r\n\r\n                                                <div>\r\n                                                    {item.activity}\r\n                                                </div>\r\n                                                \r\n                                                <div>\r\n                                                    <DeleteIcon />\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                    \r\n                            ))}\r\n                            {droppableProvided.placeholder}\r\n                        </div>\r\n                    )}\r\n\r\n                </Droppable>\r\n            </DragDropContext>\r\n            <FloatButton props={props} />\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\nimport { ACTIVITY_CREATE_REQUEST, ACTIVITY_CREATE_SUCCESS, ACTIVITY_CREATE_FAIL, ACTIVITY_LIST_REQUEST, ACTIVITY_LIST_FAIL, ACTIVITY_LIST_SUCCESS } from '../constants/activityConstants';\r\n\r\nexport const createActivity = (activity, date) => async (dispatch, useState) => {\r\n    dispatch({ type: ACTIVITY_CREATE_REQUEST });\r\n    const { userSignin: { userInfo }} = useState();\r\n    try {\r\n        const { data } = await axios.post('/api/activities', { activity, date, userId: userInfo.id });\r\n        dispatch({ type: ACTIVITY_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ACTIVITY_CREATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });  \r\n    }\r\n}\r\n\r\nexport const listActivities = () => async (dispatch, useState) => {\r\n    dispatch({ type: ACTIVITY_LIST_REQUEST });\r\n    const { userSignin: { userInfo }} = useState();\r\n    try {\r\n        const { data } = await axios.get(`/api/activities/${userInfo.id}`);\r\n        dispatch({ type: ACTIVITY_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ACTIVITY_LIST_FAIL,\r\n            payload: \r\n            error.response && error.response.data.response\r\n            ? error.response.data.message\r\n            : error.message\r\n        });  \r\n    }\r\n}","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MessageBox from '../../components/MessageBox';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport Select from 'react-select';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listCategories } from '../../actions/categoryActions';\r\nimport { createExpense, listExpenses } from '../../actions/expenseActions';\r\nimport { listSubcategories } from '../../actions/subcategoriesActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SubForm from '../../components/SubForm';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Link } from 'react-router-dom';\r\nimport { createActivity } from '../../actions/activityActions';\r\n\r\nexport default function ActivityCreateScreen(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [state, setState] = useState({ right: true});\r\n    const [activity, setActivity] = useState('');\r\n    const [date, setDate] = useState('');\r\n\r\n    const toggleDrawer = (open) => {\r\n        props.history.push('/');\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handlerSubmit = (e) => {\r\n        dispatch(createActivity(activity, date));\r\n    }\r\n\r\n    return (\r\n        <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n            <div className=\"drawer-header\">\r\n                <Link to=\"/\">\r\n                    <ArrowBackIcon className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n                </Link>\r\n            </div>\r\n            <div className=\"drawer-body\">\r\n                <div>Crear actividad</div>\r\n                <form className=\"form-modal\" onSubmit={handlerSubmit}>\r\n                    <div>\r\n                        <input \r\n                            type=\"text\"\r\n                            onChange={e => setActivity(e.target.value)}\r\n                            placeholder=\"Actividad\">\r\n                        </input>\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            type=\"date\"\r\n                            onChange={e => setDate(e.target.value)}\r\n                            placeholder=\"Fecha\">\r\n                        </input>\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn secundary\" type=\"submit\">Crear</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Drawer>\r\n    )\r\n}\r\n","export const ENTRY_CREATE_REQUEST = 'ENTRY_CREATE_REQUEST';\r\nexport const ENTRY_CREATE_SUCCESS = 'ENTRY_CREATE_SUCCESS';\r\nexport const ENTRY_CREATE_FAIL = 'ENTRY_CREATE_FAIL';\r\n\r\nexport const ENTRY_GET_REQUEST = 'ENTRY_GET_REQUEST';\r\nexport const ENTRY_GET_SUCCESS = 'ENTRY_GET_SUCCESS';\r\nexport const ENTRY_GET_FAIL = 'ENTRY_GET_FAIL';","import axios from \"axios\"\r\nimport { ENTRY_CREATE_FAIL, ENTRY_CREATE_REQUEST, ENTRY_CREATE_SUCCESS, ENTRY_GET_FAIL, ENTRY_GET_REQUEST, ENTRY_GET_SUCCESS } from \"../constants/entryConstants\"\r\n\r\nexport const createEntry = (entry) => async (dispatch, getState) => {\r\n    dispatch({ type: ENTRY_CREATE_REQUEST })\r\n    const { userSignin: { userInfo } } = getState()\r\n    try {\r\n        const { data } = await axios.post('/api/entries/',\r\n            { ...entry, userUserId: userInfo.id }\r\n        )\r\n        dispatch({ type: ENTRY_CREATE_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ENTRY_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.response\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const listEntries = () => async (dispatch, getState) => {\r\n    dispatch({ type: ENTRY_GET_REQUEST })\r\n    const { userSignin: { userInfo } } = getState()\r\n    try {\r\n        const { data } = await axios.get(`/api/entries/${userInfo.id}`)\r\n        dispatch({ type: ENTRY_GET_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ENTRY_GET_FAIL,\r\n            payload:\r\n                error.response && error.response.data.response\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n}","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listEntries } from '../../actions/entryActions';\r\nimport { getMonths } from '../../actions/utilsActions';\r\nimport FloatButton from '../../components/FloatButton';\r\nimport MessageBox from '../../components/MessageBox';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\n\r\nexport default function EntryScreen(props) {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const entriesList = useSelector(state => state.entriesList)\r\n  const { entries, loading, error } = entriesList\r\n\r\n  const monthsGet = useSelector(state => state.monthsGet);\r\n  const { months } = monthsGet;\r\n\r\n  const getMonth = (number) => {\r\n    if (months) return months.filter(month => month.value === number)[0].label\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!entries) dispatch(listEntries())\r\n  }, [entries, dispatch])\r\n\r\n  useEffect(() => {\r\n    if (!months) dispatch(getMonths());\r\n  }, [months, dispatch])\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        loading ? <LoadingBox /> :\r\n        error ? <MessageBox variant=\"danger\">{error}</MessageBox> :\r\n        entries &&\r\n          (\r\n            entries.map(entry => (\r\n              <div className=\"entry-card\">\r\n                <div className='entry-card-title'>\r\n                  <div className='entry-card-title-content'>{getMonth(entry.date.split('-')[0])}</div>\r\n                </div>\r\n                <div className='entry-card-info'>\r\n                  <div>\r\n                    <div>174.000</div>\r\n                    <div>Total</div>\r\n                  </div>\r\n                  <div>\r\n                    <div>{entry.entry}</div>\r\n                    <div>Ingresos</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )\r\n\r\n      }\r\n      <FloatButton props={props} />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MessageBox from '../../components/MessageBox';\r\nimport LoadingBox from '../../components/utils/LoadingBox';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SubForm from '../../components/SubForm';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Link } from 'react-router-dom';\r\nimport { createEntry, listEntries } from '../../actions/entryActions';\r\nimport { getMonths } from '../../actions/utilsActions';\r\n\r\nexport default function EntryCreateScreen(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const monthsGet = useSelector(state => state.monthsGet);\r\n    const { months } = monthsGet;\r\n\r\n    const entryCreate = useSelector(state => state.entryCreate);\r\n    const { entry, loading: loadingCreate } = entryCreate;\r\n\r\n    const [value, setValue] = useState();\r\n    const [month, setMonth] = useState();\r\n    const [actualMonth, setActualMonth] = useState();\r\n\r\n    const [submit, setSubmit] = useState(false);\r\n    const [state, setState] = useState({ right: true });\r\n\r\n    const toggleDrawer = (open) => {\r\n        props.history.push('/');\r\n        setState({ ...state, right: open });\r\n    };\r\n\r\n    const handleClose = useCallback((open) => {\r\n        if (state.right)\r\n            props.history.push('/entries');\r\n        setState({ ...state, right: open });\r\n    }, [setState, state, props]);\r\n\r\n    const handlerSubmit = (e) => {\r\n        e.preventDefault();\r\n        const obj = {\r\n            date: `${month}-${getDate().year}`,\r\n            entry: value,\r\n        }\r\n        setSubmit(true);\r\n        dispatch(createEntry(obj));\r\n    }\r\n\r\n    const getDate = () => {\r\n        let newDate = new Date()\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n\r\n        month = month < 10 ? `0${month}` : `${month}`;\r\n        return ({ month: month, year: year });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (months) {\r\n            setActualMonth(months.filter(month => month.value === getDate().month)[0])\r\n        } else {\r\n            dispatch(getMonths());\r\n        }\r\n    }, [months, dispatch])\r\n\r\n    useEffect(() => {\r\n        if (actualMonth) setMonth(actualMonth.value)\r\n    }, [actualMonth])\r\n\r\n    useEffect(() => {\r\n        if (entry && submit) {\r\n            dispatch(listEntries());\r\n            handleClose(false);\r\n        }\r\n    }, [entry, dispatch, submit, handleClose]);\r\n\r\n    return (\r\n        <Drawer anchor={'right'} open={state.right} onClose={() => toggleDrawer(false)}>\r\n            <div className=\"drawer-header\">\r\n                <Link to=\"/entries\">\r\n                    <ArrowBackIcon className=\"drawer-back\" onClick={() => toggleDrawer(false)} />\r\n                </Link>\r\n            </div>\r\n            <div className=\"drawer-body\">\r\n                <form className=\"form-modal\" onSubmit={handlerSubmit}>\r\n                    {/* {errorCreate && <MessageBox variant=\"danger\">{errorCreate}</MessageBox>} */}\r\n                    <div className=\"form-title\">\r\n                        <div>Calcular mes</div>\r\n                        <Divider />\r\n                    </div>\r\n\r\n                    <div>\r\n                        {\r\n                            months && actualMonth && (\r\n                                <Select\r\n                                    placeholder=\"Seleccionar mes\"\r\n                                    onChange={e => setMonth(e.value)}\r\n                                    defaultValue={actualMonth}\r\n                                    options={months}\r\n                                />\r\n                            )\r\n                        }\r\n\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            type=\"number\"\r\n                            onChange={e => setValue(e.target.value)}\r\n                            placeholder=\"Ingreso total mes\">\r\n                        </input>\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            loadingCreate ? <LoadingBox /> : (<button className=\"btn secundary\" type=\"submit\">Crear</button>)\r\n                        }\r\n\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Drawer>\r\n    );\r\n}\r\n","import {BrowserRouter, Route, Switch, useLocation, HashRouter } from 'react-router-dom';\nimport Sidebar from './components/common/Sidebar';\nimport AlertScreen from './screens/Alert/AlertScreen';\nimport ChartScreen from './screens/ChartScreen';\nimport ExpenseScreen from './screens/Expense/ExpenseScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport LoginScreen from './screens/User/LoginScreen';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport ProfileScreen from './screens/User/ProfileScreen';\nimport RegisterScreen from './screens/User/RegisterScreen';\nimport ExpenseCreateScreen from './screens/Expense/ExpenseCreateScreen';\nimport AlertCreateScreen from './screens/Alert/AlertCreateScreen';\nimport ActivityScreen from './screens/Activity/ActivityScreen';\nimport ActivityCreateScreen from './screens/Activity/ActivityCreateScreen';\nimport EntryScreen from './screens/Entry/EntryScreen';\nimport EntryCreateScreen from './screens/Entry/EntryCreateScreen';\n\nfunction App() {\n\n  return (\n    <HashRouter>\n        <Sidebar />\n        <Switch>\n          <Route path=\"*\">\n            <RouteGroup />\n          </Route>\n        </Switch>\n    </HashRouter>\n  );\n}\n\nfunction RouteGroup() {\n\n  let location = useLocation();\n\n  return (\n    <TransitionGroup>\n      <CSSTransition\n        key={location.key}\n        classNames=\"fade\"\n        timeout={300}\n      >\n        <Switch location={location}>\n          <Route path=\"/\" component={HomeScreen} exact></Route>\n\n          <Route path=\"/login\" component={LoginScreen}></Route>\n          <Route path=\"/register\" component={RegisterScreen}></Route>\n          <Route path=\"/profile\" component={ProfileScreen}></Route>\n          <Route path=\"/chart\" component={ChartScreen}></Route>\n\n          <Route path=\"/expenses/:id\" component={ExpenseScreen}></Route>\n          <Route path=\"/expenses-create\" component={ExpenseCreateScreen} exact></Route>\n\n          <Route path=\"/activities\" component={ActivityScreen}></Route>\n          <Route path=\"/activities-create\" component={ActivityCreateScreen}></Route>\n\n          <Route path=\"/alerts\" component={AlertScreen}></Route>\n          <Route path=\"/alerts-create\" component={AlertCreateScreen}></Route>\n\n          <Route path=\"/entries\" component={EntryScreen}></Route>\n          <Route path=\"/entries-create\" component={EntryCreateScreen}></Route>\n        </Switch>\n      </CSSTransition>\n    </TransitionGroup>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, createStore, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createActivityReducer, listActivityReducer } from './reducers/activityReducers';\r\nimport { createAlertReducer, listAlertsReducer, listTypeAlertsReducer, updateAlertReducer, deleteAlertReducer } from './reducers/alertReducers';\r\nimport { createCategoryReducers, listCategoriesReducer } from './reducers/categoryReducers';\r\nimport { createEntryReducer, listEntriesReducer } from './reducers/entryReducer';\r\nimport { createExpenseReducer, deleteExpenseReducer, listExpenseReducer, listExpensesReducer } from './reducers/expenseReducers';\r\nimport { createSubcategoryReducer, listSubcategoriesReducer } from './reducers/subcategoryReducers';\r\nimport { registerReducer, signinReducer, suscribeUserReducer } from './reducers/userReducer';\r\nimport { getMonthsReducer, setFiltersReducer, setNotificationReducer } from './reducers/utilsReducers';\r\n\r\nconst initialState = {\r\n    userSignin:{\r\n        userInfo: localStorage.getItem('userInfo')\r\n        ? JSON.parse(localStorage.getItem('userInfo'))\r\n        : null\r\n    },\r\n    setNotification:{\r\n        notification: localStorage.getItem('notification')\r\n        ? JSON.parse(localStorage.getItem('notification'))\r\n        : null\r\n    },\r\n    filtersSet: {\r\n        filters: localStorage.getItem('filters')\r\n        ? JSON.parse(localStorage.getItem('filters'))\r\n        : null\r\n    }\r\n};\r\n\r\nconst reducer = combineReducers({\r\n    userSignin: signinReducer,\r\n    register: registerReducer,\r\n    userSuscribe: suscribeUserReducer,\r\n\r\n    expList: listExpenseReducer,\r\n    expenseList: listExpensesReducer,\r\n    expenseCreate: createExpenseReducer,\r\n    expenseDelete: deleteExpenseReducer,\r\n\r\n    categoryCreate: createCategoryReducers,\r\n    categoriesList: listCategoriesReducer,\r\n\r\n    subcategoriesList: listSubcategoriesReducer,\r\n    subcategoryCreate: createSubcategoryReducer,\r\n    \r\n    alertList: listAlertsReducer,\r\n    alertActiveUpdate: updateAlertReducer,\r\n    alertCreate: createAlertReducer,\r\n    alertTypeList: listTypeAlertsReducer,\r\n    alertDelete: deleteAlertReducer,\r\n\r\n    monthsGet: getMonthsReducer,\r\n    setNotification: setNotificationReducer,\r\n    filtersSet: setFiltersReducer,\r\n\r\n    activityCreate: createActivityReducer,\r\n    activitiesList: listActivityReducer,\r\n\r\n    entryCreate: createEntryReducer,\r\n    entriesList: listEntriesReducer\r\n});\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeEnhancer(applyMiddleware(thunk))\r\n)\r\n\r\nexport default store;","import { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGIN_FAIL, USER_SIGIN_REQUEST, USER_SIGIN_SUCCESS, USER_SUSCRIBE_FAIL, USER_SUSCRIBE_REQUEST, USER_SUSCRIBE_SUCCESS } from \"../constants/userConstants\";\r\n\r\nexport const signinReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case USER_SIGIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_SIGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload, success:true };\r\n        case USER_SIGIN_FAIL:\r\n            return { loading: false, error: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const registerReducer = (state = { loading:true }, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true };\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, user: action.payload };\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const suscribeUserReducer = (state = { loading: true }, action) => {\r\n    switch (action.type){\r\n        case USER_SUSCRIBE_REQUEST:\r\n            return {loading: true };\r\n        case USER_SUSCRIBE_SUCCESS:\r\n            return { loading: false, suscribe: action.payload };\r\n        case USER_SUSCRIBE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { EXPENSE_CREATE_FAIL, EXPENSE_CREATE_REQUEST, EXPENSE_CREATE_SUCCESS, EXPENSE_DELETE_FAIL, EXPENSE_DELETE_REQUEST, EXPENSE_DELETE_SUCCESS, EXPENSE_LIST_FAIL, EXPENSE_LIST_REQUEST, EXPENSE_LIST_SUCCESS, EXP_LIST_FAIL, EXP_LIST_REQUEST, EXP_LIST_SUCCESS } from \"../constants/expenseConstants\";\r\n\r\nexport const listExpensesReducer = (state = { loading: true }, action) =>{\r\n    switch (action.type) {\r\n        case EXPENSE_LIST_REQUEST:\r\n            return { loading: true };\r\n        case EXPENSE_LIST_SUCCESS:\r\n            return { loading: false, expenses: action.payload };\r\n        case EXPENSE_LIST_FAIL:\r\n            return { loading:false, error: action.payload };\r\n           \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const listExpenseReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case EXP_LIST_REQUEST:\r\n            return { loading: true };\r\n        case EXP_LIST_SUCCESS:\r\n            return { loading: false, expense: action.payload };\r\n        case EXP_LIST_FAIL:\r\n            return { loading:false, error: action.payload };\r\n           \r\n        default:\r\n            return state;\r\n    } \r\n}\r\n\r\nexport const createExpenseReducer = (state = { loading: false }, action) => {\r\n    switch (action.type) {\r\n        case EXPENSE_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case EXPENSE_CREATE_SUCCESS:\r\n            return { loading: false, expense: action.payload };\r\n        case EXPENSE_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const deleteExpenseReducer = (state = { loading: false }, action) => {\r\n    switch (action.type) {\r\n        case EXPENSE_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case EXPENSE_DELETE_SUCCESS:\r\n            return { loading: false, expense: action.payload };\r\n        case EXPENSE_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { CATEGORY_CREATE_FAIL, CATEGORY_CREATE_REQUEST, CATEGORY_CREATE_SUCCESS, CATEGORY_LIST_FAIL, CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS } from \"../constants/categoryConstants\";\r\n\r\nexport const createCategoryReducers = (state = {loading: true }, action) => {\r\n    switch (action.type) {\r\n        case CATEGORY_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case CATEGORY_CREATE_SUCCESS:\r\n            return { loading: false, category: action.payload };\r\n        case CATEGORY_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const listCategoriesReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case CATEGORY_LIST_REQUEST:\r\n            return { loading: true };\r\n        case CATEGORY_LIST_SUCCESS:\r\n            return { loading:false, categories: action.payload };\r\n        case CATEGORY_LIST_FAIL:\r\n            return { loading:false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { SUBCATEGORY_CREATE_FAIL, SUBCATEGORY_CREATE_REQUEST, SUBCATEGORY_CREATE_SUCCESS, SUBCATEGORY_LIST_BY_CATEGORY_FAIL, SUBCATEGORY_LIST_BY_CATEGORY_REQUEST, SUBCATEGORY_LIST_BY_CATEGORY_SUCCESS, SUBCATEGORY_LIST_FAIL, SUBCATEGORY_LIST_REQUEST, SUBCATEGORY_LIST_SUCCESS } from \"../constants/subcategoriesConstants\";\r\n\r\nexport const listSubcategoriesReducer = (state = { loading: true }, action) =>{\r\n    switch (action.type) {\r\n        case SUBCATEGORY_LIST_REQUEST:\r\n            return { loading: true };\r\n        case SUBCATEGORY_LIST_SUCCESS:\r\n            return { loading: false, subcategories: action.payload };\r\n        case SUBCATEGORY_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const listSubcategoriesByCategoriesReducer = ( state = { loading: false }, action) => {\r\n    switch (action.type) {\r\n        case SUBCATEGORY_LIST_BY_CATEGORY_REQUEST:\r\n            return { loading: true };\r\n        case SUBCATEGORY_LIST_BY_CATEGORY_SUCCESS:\r\n            return { loading: false, subcategories: action.payload };\r\n        case SUBCATEGORY_LIST_BY_CATEGORY_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    } \r\n}\r\n\r\nexport const createSubcategoryReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case SUBCATEGORY_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case SUBCATEGORY_CREATE_SUCCESS:\r\n            return { loading: false, subcategory: action.payload };\r\n        case SUBCATEGORY_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { ALERT_CREATE_FAIL, ALERT_CREATE_REQUEST, ALERT_CREATE_SUCCESS, ALERT_DELETE_FAIL, ALERT_DELETE_REQUEST, ALERT_DELETE_SUCCESS, ALERT_LIST_FAIL, ALERT_LIST_REQUEST, ALERT_LIST_SUCCESS, ALERT_UPDATE_FAIL, ALERT_UPDATE_REQUEST, ALERT_UPDATE_SUCCESS, TYPE_ALERT_LIST_FAIL, TYPE_ALERT_LIST_REQUEST, TYPE_ALERT_LIST_SUCCESS } from \"../constants/alertConstants\";\r\n\r\nexport const listAlertsReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ALERT_LIST_REQUEST:\r\n            return { loading: true }\r\n        case ALERT_LIST_SUCCESS:\r\n            return { loading: false, alerts: action.payload };\r\n        case ALERT_LIST_FAIL:\r\n            return { loading: false };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const updateAlertReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ALERT_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case ALERT_UPDATE_SUCCESS:\r\n            return { loading: false, alert: action.payload };\r\n        case ALERT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n} \r\n\r\nexport const createAlertReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ALERT_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case ALERT_CREATE_SUCCESS:\r\n            return { loading: false, alert: action.payload };\r\n        case ALERT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const listTypeAlertsReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case TYPE_ALERT_LIST_REQUEST:\r\n            return { loading: true };\r\n        case TYPE_ALERT_LIST_SUCCESS:\r\n            return { loading: false, typeAlerts: action.payload };\r\n        case TYPE_ALERT_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const deleteAlertReducer = ( state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ALERT_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case ALERT_DELETE_SUCCESS:\r\n            return { loading: false, success: action.payload };\r\n        case ALERT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_MONTHS_FAIL, GET_MONTHS_REQUEST, GET_MONTHS_SUCCESS, SET_FILTERS_FAIL, SET_FILTERS_REQUEST, SET_FILTERS_SUCCESS, SET_NOTIFICATIONS_FAIL, SET_NOTIFICATIONS_REQUEST, SET_NOTIFICATIONS_SUCCESS } from \"../constants/utilsConstants\";\r\n\r\nexport const getMonthsReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case GET_MONTHS_REQUEST:\r\n            return { loading: true };\r\n        case GET_MONTHS_SUCCESS:\r\n            return { loading: false, months: action.payload };\r\n        case GET_MONTHS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setNotificationReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case SET_NOTIFICATIONS_REQUEST:\r\n            return { loading: true };\r\n        case SET_NOTIFICATIONS_SUCCESS:\r\n            return { loading: false, notification: [action.payload]};\r\n        case SET_NOTIFICATIONS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    } \r\n}\r\n\r\nexport const setFiltersReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case SET_FILTERS_REQUEST:\r\n            return { loading: true };\r\n        case SET_FILTERS_SUCCESS:\r\n            return { loading: false, filters: action.payload};\r\n        case SET_FILTERS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    } \r\n}","import { ACTIVITY_CREATE_FAIL, ACTIVITY_CREATE_REQUEST, ACTIVITY_CREATE_SUCCESS, ACTIVITY_LIST_FAIL, ACTIVITY_LIST_REQUEST, ACTIVITY_LIST_SUCCESS } from \"../constants/activityConstants\";\r\n\r\nexport const createActivityReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ACTIVITY_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case ACTIVITY_CREATE_SUCCESS:\r\n            return { loading: false, activity: action.payload };\r\n        case ACTIVITY_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const listActivityReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case ACTIVITY_LIST_REQUEST:\r\n            return { loading: true };\r\n        case ACTIVITY_LIST_SUCCESS:\r\n            return { loading: false, activities: action.payload };\r\n        case ACTIVITY_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { ENTRY_CREATE_FAIL, ENTRY_CREATE_REQUEST, ENTRY_CREATE_SUCCESS, ENTRY_GET_FAIL, ENTRY_GET_REQUEST, ENTRY_GET_SUCCESS } from \"../constants/entryConstants\";\r\n\r\nexport const createEntryReducer = (state = { loading: false }, action) => {\r\n    switch (action.type) {\r\n        case ENTRY_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case ENTRY_CREATE_SUCCESS:\r\n            return { loading: false, entry: action.payload }\r\n        case ENTRY_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const listEntriesReducer = (state = { loading: false }, action) => {\r\n    switch (action.type) {\r\n        case ENTRY_GET_REQUEST:\r\n            return { loading: true }\r\n        case ENTRY_GET_SUCCESS:\r\n            return { loading: false, entries: action.payload }\r\n        case ENTRY_GET_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\nimport { subscribeUser } from \"./actions/userActions\";\nimport store from './store';\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nconst PUBLIC_VAPID_KEY = \"BDDk3ILb3FjIjAvTs9PWMoObhChnrBUYwHAsdplom7fePD36G6ZFJumGgSe6C4M3pOpYvFb38XX2wJRIN4B6V_0\";\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n            serviceSubscribeUser(registration);\n          }\n        };\n      };\n\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction serviceSubscribeUser(registration) {\n\n  var serviceWorker;\n\n  if (registration.installing) {\n      serviceWorker = registration.installing;\n  } else if (registration.waiting) {\n      serviceWorker = registration.waiting;\n  } else if (registration.active) {\n      serviceWorker = registration.active;\n  }\n\n  if (serviceWorker) {\n    if (serviceWorker.state === \"activated\") {\n        console.log(\"sw already activated - Do watever needed here\");\n    }\n    serviceWorker.addEventListener(\"statechange\", function(e) {\n      \n        if (e.target.state ===\"activated\") {\n\n          registration.pushManager.subscribe({\n            userVisibleOnly: true,\n            applicationServerKey: PUBLIC_VAPID_KEY\n          })\n          .then((suscription) => {\n            store.dispatch(subscribeUser(suscription));\n          });\n        }\n    });\n  }\n  return <div></div>\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}